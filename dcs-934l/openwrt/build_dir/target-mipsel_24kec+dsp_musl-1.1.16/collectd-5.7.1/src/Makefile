# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/collectd
pkgincludedir = $(includedir)/collectd
pkglibdir = $(libdir)/collectd
pkglibexecdir = $(libexecdir)/collectd
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = mipsel-openwrt-linux-gnu
am__append_1 = liboconfig
am__append_2 = -DPIDFILE='"${localstatedir}/run/${PACKAGE_NAME}.pid"'
check_PROGRAMS = test_format_graphite$(EXEEXT) $(am__EXEEXT_1) \
	test_utils_latency$(EXEEXT) test_utils_cmds$(EXEEXT) \
	test_utils_vl_lookup$(EXEEXT) test_utils_mount$(EXEEXT) \
	$(am__EXEEXT_2)
TESTS = test_format_graphite$(EXEEXT) $(am__EXEEXT_1) \
	test_utils_latency$(EXEEXT) test_utils_cmds$(EXEEXT) \
	test_utils_vl_lookup$(EXEEXT) test_utils_mount$(EXEEXT) \
	$(am__EXEEXT_2)
#am__append_3 = $(BUILD_WITH_LIBYAJL_CPPFLAGS)
#am__append_4 = $(BUILD_WITH_LIBYAJL_LDFLAGS)
#am__append_5 = $(BUILD_WITH_LIBYAJL_LIBS)
#am__append_6 = test_format_json
#am__append_7 = test_format_json
#am__append_8 = -lkstat
#am__append_9 = -lkstat
sbin_PROGRAMS = collectdmon$(EXEEXT)
bin_PROGRAMS = collectd-nagios$(EXEEXT) collectdctl$(EXEEXT) \
	collectd-tg$(EXEEXT)
#am__append_10 = -lsocket
#am__append_11 = -lm
#am__append_12 = -lsocket
#am__append_13 = -lm
#am__append_14 = -lsocket
#am__append_15 = -lrt
#am__append_16 = -lm
##am__append_17 = collectd.grpc.pb.cc collectd.pb.cc types.pb.cc
##am__append_18 = collectd.grpc.pb.cc collectd.pb.cc types.pb.cc \
##		collectd.grpc.pb.h collectd.pb.h types.pb.h

am__append_19 = aggregation.la
#am__append_20 = amqp.la
#am__append_21 = apache.la
#am__append_22 = apcups.la
##am__append_23 = -lsocket
#am__append_24 = apple_sensors.la
#am__append_25 = aquaero.la
#am__append_26 = ascent.la
#am__append_27 = barometer.la
#am__append_28 = battery.la
##am__append_29 = -framework IOKit
#am__append_30 = bind.la
#am__append_31 = ceph.la
#am__append_32 = cgroups.la
#am__append_33 = chrony.la
#am__append_34 = conntrack.la
#am__append_35 = contextswitch.la
##am__append_36 = -lperfstat
am__append_37 = cpu.la
#am__append_38 = -lkstat
#am__append_39 = -ldevinfo
#am__append_40 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
#am__append_41 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
#am__append_42 = -lperfstat
#am__append_43 = cpufreq.la
#am__append_44 = cpusleep.la
#am__append_45 = csv.la
#am__append_46 = curl.la
#am__append_47 = curl_json.la
#am__append_48 = curl_xml.la
#am__append_49 = dbi.la
#am__append_50 = df.la
#am__append_51 = disk.la
##am__append_52 = -lkstat
##am__append_53 = -ldevinfo
##am__append_54 = -framework IOKit
##am__append_55 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
##am__append_56 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
##am__append_57 = $(BUILD_WITH_LIBUDEV_CFLAGS)
##am__append_58 = $(BUILD_WITH_LIBUDEV_LDFLAGS)
##am__append_59 = $(BUILD_WITH_LIBUDEV_LIBS)
##am__append_60 = -ldevstat -lgeom
##am__append_61 = -lperfstat
#am__append_62 = dns.la
#am__append_63 = dpdkstat.la
#am__append_64 = drbd.la
#am__append_65 = email.la
#am__append_66 = entropy.la
#am__append_67 = exec.la
#am__append_68 = ethstat.la
#am__append_69 = fhcount.la
#am__append_70 = filecount.la
#am__append_71 = gmond.la
#am__append_72 = gps.la
#am__append_73 = grpc.la
#am__append_74 = hddtemp.la
##am__append_75 = -lsocket
#am__append_76 = hugepages.la
#am__append_77 = interface.la
##am__append_78 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
##am__append_79 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
##am__append_80 = -lkstat
##am__append_81 = -ldevinfo
##am__append_82 = -lperfstat
#am__append_83 = ipc.la
#am__append_84 = iptables.la
#am__append_85 = ipmi.la
#am__append_86 = ipvs.la
##am__append_87 = $(KERNEL_CFLAGS)
#am__append_88 = irq.la
#am__append_89 = iwinfo.la
#am__append_90 = java.la
#am__append_91 = load.la
##am__append_92 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
##am__append_93 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
##am__append_94 = -lperfstat
#am__append_95 = logfile.la
#am__append_96 = log_logstash.la
#am__append_97 = lpar.la
#am__append_98 = lua.la
#am__append_99 = lvm.la
#am__append_100 = madwifi.la
#am__append_101 = match_empty_counter.la
#am__append_102 = match_hashed.la
#am__append_103 = match_regex.la
#am__append_104 = match_timediff.la
#am__append_105 = match_value.la
#am__append_106 = mbmon.la
##am__append_107 = -lsocket
#am__append_108 = md.la
#am__append_109 = memcachec.la
#am__append_110 = memcached.la
##am__append_111 = -lsocket
am__append_112 = memory.la
#am__append_113 = -lkstat
#am__append_114 = -ldevinfo
#am__append_115 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
#am__append_116 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
#am__append_117 = -lperfstat
#am__append_118 = mic.la
#am__append_119 = modbus.la
#am__append_120 = mqtt.la
#am__append_121 = multimeter.la
#am__append_122 = mysql.la
#am__append_123 = netapp.la
#am__append_124 = netlink.la
#am__append_125 = network.la
##am__append_126 = -lsocket
##am__append_127 = $(GCRYPT_CPPFLAGS)
##am__append_128 = $(GCRYPT_LDFLAGS)
##am__append_129 = $(GCRYPT_LIBS)
#am__append_130 = nfs.la
#am__append_131 = fscache.la
#am__append_132 = nginx.la
#am__append_133 = notify_desktop.la
#am__append_134 = notify_email.la
#am__append_135 = notify_nagios.la
#am__append_136 = ntpd.la
##am__append_137 = -lsocket
#am__append_138 = numa.la
#am__append_139 = nut.la
#am__append_140 = olsrd.la
##am__append_141 = -lsocket
#am__append_142 = onewire.la
#am__append_143 = openldap.la
#am__append_144 = openvpn.la
#am__append_145 = oracle.la
#am__append_146 = perl.la
# Work-around for issues #41 and #42 - Perl 5.10 incorrectly introduced
# __attribute__nonnull__(3) for Perl_load_module().
##am__append_147 = -Wno-nonnull
#am__append_148 = pf.la
#am__append_149 = pinba.la
#am__append_150 = ping.la
#am__append_151 = postgresql.la
#am__append_152 = powerdns.la
#am__append_153 = python.la
#am__append_154 = -fno-strict-aliasing -Wno-strict-aliasing
#am__append_155 = processes.la
##am__append_156 = -lkvm
#am__append_157 = protocols.la
#am__append_158 = intel_rdt.la
#am__append_159 = redis.la
#am__append_160 = routeros.la
#am__append_161 = rrdcached.la
#am__append_162 = rrdtool.la
#am__append_163 = sensors.la
#am__append_164 = serial.la
#am__append_165 = sigrok.la
##am__append_166 = smart.la
#am__append_167 = snmp.la
#am__append_168 = statsd.la
#am__append_169 = swap.la
##am__append_170 = -lkstat
##am__append_171 = -ldevinfo
##am__append_172 = -lkvm
##am__append_173 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
##am__append_174 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
##am__append_175 = -lperfstat
#am__append_176 = syslog.la
#am__append_177 = table.la
#am__append_178 = tail.la
#am__append_179 = tail_csv.la
#am__append_180 = tape.la
am__append_181 = target_notification.la
am__append_182 = target_replace.la
am__append_183 = target_scale.la
am__append_184 = target_set.la
am__append_185 = target_v5upgrade.la
#am__append_186 = tcpconns.la
##am__append_187 = -lkvm
#am__append_188 = teamspeak2.la
#am__append_189 = ted.la
#am__append_190 = thermal.la
am__append_191 = threshold.la
#am__append_192 = tokyotyrant.la
##am__append_193 = -lsocket
#am__append_194 = turbostat.la
#am__append_195 = unixsock.la
#am__append_196 = uptime.la
##am__append_197 = -lkstat
##am__append_198 = -lperfstat
#am__append_199 = users.la
##am__append_200 = $(BUILD_WITH_LIBSTATGRAB_CFLAGS)
##am__append_201 = $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)
#am__append_202 = uuid.la
#am__append_203 = varnish.la
#am__append_204 = virt.la
#am__append_205 = vmem.la
#am__append_206 = vserver.la
#am__append_207 = wireless.la
#am__append_208 = write_graphite.la
#am__append_209 = write_http.la
am__append_210 = write_kafka.la
#am__append_211 = write_log.la
#am__append_212 = write_mongodb.la
#am__append_213 = write_prometheus.la
#am__append_214 = write_redis.la
#am__append_215 = write_riemann.la
#am__append_216 = write_sensu.la
#am__append_217 = write_tsdb.la
#am__append_218 = xencpu.la
#am__append_219 = xmms.la
#am__append_220 = zfs_arc.la
#am__append_221 = zookeeper.la
#am__append_222 = zone.la
#am__append_223 = pinba.pb-c.c pinba.pb-c.h
#am__append_224 = pinba.pb-c.c pinba.pb-c.h

# Protocol buffer for the "write_prometheus" plugin.
#am__append_225 = prometheus.pb-c.c prometheus.pb-c.h
#am__append_226 = prometheus.pb-c.c prometheus.pb-c.h
#am__append_227 = test_plugin_ceph
#am__append_228 = test_plugin_ceph
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = collectd.conf
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(man5dir)"
LTLIBRARIES = $(noinst_LTLIBRARIES) $(pkglib_LTLIBRARIES)
aggregation_la_DEPENDENCIES =
am__aggregation_la_SOURCES_DIST = aggregation.c utils_vl_lookup.c \
	utils_vl_lookup.h
am_aggregation_la_OBJECTS =  \
	aggregation.lo \
	utils_vl_lookup.lo
aggregation_la_OBJECTS = $(am_aggregation_la_OBJECTS)
AM_V_lt = $(am__v_lt_0)
am__v_lt_ = $(am__v_lt_0)
am__v_lt_0 = --silent
am__v_lt_1 = 
aggregation_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(aggregation_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am_aggregation_la_rpath = -rpath \
	$(pkglibdir)
am__DEPENDENCIES_1 =
#amqp_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	libcmds.la libformat_graphite.la \
#	libformat_json.la
am__amqp_la_SOURCES_DIST = amqp.c
#am_amqp_la_OBJECTS = amqp_la-amqp.lo
amqp_la_OBJECTS = $(am_amqp_la_OBJECTS)
amqp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(amqp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_amqp_la_rpath = -rpath $(pkglibdir)
#apache_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__apache_la_SOURCES_DIST = apache.c
#am_apache_la_OBJECTS = apache_la-apache.lo
apache_la_OBJECTS = $(am_apache_la_OBJECTS)
apache_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(apache_la_CFLAGS) \
	$(CFLAGS) $(apache_la_LDFLAGS) $(LDFLAGS) -o $@
#am_apache_la_rpath = -rpath $(pkglibdir)
#apcups_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__apcups_la_SOURCES_DIST = apcups.c
#am_apcups_la_OBJECTS = apcups.lo
apcups_la_OBJECTS = $(am_apcups_la_OBJECTS)
apcups_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(apcups_la_LDFLAGS) $(LDFLAGS) -o $@
#am_apcups_la_rpath = -rpath $(pkglibdir)
apple_sensors_la_LIBADD =
am__apple_sensors_la_SOURCES_DIST = apple_sensors.c
#am_apple_sensors_la_OBJECTS =  \
#	apple_sensors.lo
apple_sensors_la_OBJECTS = $(am_apple_sensors_la_OBJECTS)
apple_sensors_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(apple_sensors_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_apple_sensors_la_rpath = -rpath \
#	$(pkglibdir)
aquaero_la_DEPENDENCIES =
am__aquaero_la_SOURCES_DIST = aquaero.c
#am_aquaero_la_OBJECTS =  \
#	aquaero_la-aquaero.lo
aquaero_la_OBJECTS = $(am_aquaero_la_OBJECTS)
aquaero_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(aquaero_la_CFLAGS) \
	$(CFLAGS) $(aquaero_la_LDFLAGS) $(LDFLAGS) -o $@
#am_aquaero_la_rpath = -rpath $(pkglibdir)
#ascent_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__ascent_la_SOURCES_DIST = ascent.c
#am_ascent_la_OBJECTS = ascent_la-ascent.lo
ascent_la_OBJECTS = $(am_ascent_la_OBJECTS)
ascent_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ascent_la_CFLAGS) \
	$(CFLAGS) $(ascent_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ascent_la_rpath = -rpath $(pkglibdir)
barometer_la_DEPENDENCIES =
am__barometer_la_SOURCES_DIST = barometer.c
#am_barometer_la_OBJECTS = barometer.lo
barometer_la_OBJECTS = $(am_barometer_la_OBJECTS)
barometer_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(barometer_la_LDFLAGS) $(LDFLAGS) -o $@
#am_barometer_la_rpath = -rpath \
#	$(pkglibdir)
battery_la_LIBADD =
am__battery_la_SOURCES_DIST = battery.c battery_statefs.c
#am_battery_la_OBJECTS = battery.lo \
#	battery_statefs.lo
battery_la_OBJECTS = $(am_battery_la_OBJECTS)
battery_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(battery_la_LDFLAGS) $(LDFLAGS) -o $@
#am_battery_la_rpath = -rpath $(pkglibdir)
#bind_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__bind_la_SOURCES_DIST = bind.c
#am_bind_la_OBJECTS = bind_la-bind.lo
bind_la_OBJECTS = $(am_bind_la_OBJECTS)
bind_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(bind_la_CFLAGS) \
	$(CFLAGS) $(bind_la_LDFLAGS) $(LDFLAGS) -o $@
#am_bind_la_rpath = -rpath $(pkglibdir)
#ceph_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__ceph_la_SOURCES_DIST = ceph.c
#am_ceph_la_OBJECTS = ceph_la-ceph.lo
ceph_la_OBJECTS = $(am_ceph_la_OBJECTS)
ceph_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ceph_la_CFLAGS) \
	$(CFLAGS) $(ceph_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ceph_la_rpath = -rpath $(pkglibdir)
#cgroups_la_DEPENDENCIES = libmount.la
am__cgroups_la_SOURCES_DIST = cgroups.c
#am_cgroups_la_OBJECTS = cgroups.lo
cgroups_la_OBJECTS = $(am_cgroups_la_OBJECTS)
cgroups_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(cgroups_la_LDFLAGS) $(LDFLAGS) -o $@
#am_cgroups_la_rpath = -rpath $(pkglibdir)
chrony_la_DEPENDENCIES =
am__chrony_la_SOURCES_DIST = chrony.c
#am_chrony_la_OBJECTS = chrony.lo
chrony_la_OBJECTS = $(am_chrony_la_OBJECTS)
chrony_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(chrony_la_LDFLAGS) $(LDFLAGS) -o $@
#am_chrony_la_rpath = -rpath $(pkglibdir)
conntrack_la_LIBADD =
am__conntrack_la_SOURCES_DIST = conntrack.c
#am_conntrack_la_OBJECTS = conntrack.lo
conntrack_la_OBJECTS = $(am_conntrack_la_OBJECTS)
conntrack_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(conntrack_la_LDFLAGS) $(LDFLAGS) -o $@
#am_conntrack_la_rpath = -rpath \
#	$(pkglibdir)
#contextswitch_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__contextswitch_la_SOURCES_DIST = contextswitch.c
#am_contextswitch_la_OBJECTS =  \
#	contextswitch.lo
contextswitch_la_OBJECTS = $(am_contextswitch_la_OBJECTS)
contextswitch_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(contextswitch_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_contextswitch_la_rpath = -rpath \
#	$(pkglibdir)
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
cpu_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am__cpu_la_SOURCES_DIST = cpu.c
am_cpu_la_OBJECTS = cpu_la-cpu.lo
cpu_la_OBJECTS = $(am_cpu_la_OBJECTS)
cpu_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(cpu_la_CFLAGS) $(CFLAGS) \
	$(cpu_la_LDFLAGS) $(LDFLAGS) -o $@
am_cpu_la_rpath = -rpath $(pkglibdir)
cpufreq_la_LIBADD =
am__cpufreq_la_SOURCES_DIST = cpufreq.c
#am_cpufreq_la_OBJECTS = cpufreq.lo
cpufreq_la_OBJECTS = $(am_cpufreq_la_OBJECTS)
cpufreq_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(cpufreq_la_LDFLAGS) $(LDFLAGS) -o $@
#am_cpufreq_la_rpath = -rpath $(pkglibdir)
cpusleep_la_LIBADD =
am__cpusleep_la_SOURCES_DIST = cpusleep.c
#am_cpusleep_la_OBJECTS = cpusleep.lo
cpusleep_la_OBJECTS = $(am_cpusleep_la_OBJECTS)
cpusleep_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(cpusleep_la_LDFLAGS) $(LDFLAGS) -o $@
#am_cpusleep_la_rpath = -rpath $(pkglibdir)
csv_la_LIBADD =
am__csv_la_SOURCES_DIST = csv.c
#am_csv_la_OBJECTS = csv.lo
csv_la_OBJECTS = $(am_csv_la_OBJECTS)
csv_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(csv_la_LDFLAGS) $(LDFLAGS) -o $@
#am_csv_la_rpath = -rpath $(pkglibdir)
#curl_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	liblatency.la
am__curl_la_SOURCES_DIST = curl.c utils_curl_stats.c \
	utils_curl_stats.h utils_match.c utils_match.h
#am_curl_la_OBJECTS = curl_la-curl.lo \
#	curl_la-utils_curl_stats.lo \
#	curl_la-utils_match.lo
curl_la_OBJECTS = $(am_curl_la_OBJECTS)
curl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(curl_la_CFLAGS) \
	$(CFLAGS) $(curl_la_LDFLAGS) $(LDFLAGS) -o $@
#am_curl_la_rpath = -rpath $(pkglibdir)
#curl_json_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__curl_json_la_SOURCES_DIST = curl_json.c utils_curl_stats.c \
	utils_curl_stats.h
#am_curl_json_la_OBJECTS =  \
#	curl_json_la-curl_json.lo \
#	curl_json_la-utils_curl_stats.lo
curl_json_la_OBJECTS = $(am_curl_json_la_OBJECTS)
curl_json_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(curl_json_la_CFLAGS) \
	$(CFLAGS) $(curl_json_la_LDFLAGS) $(LDFLAGS) -o $@
#am_curl_json_la_rpath = -rpath \
#	$(pkglibdir)
#curl_xml_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__curl_xml_la_SOURCES_DIST = curl_xml.c utils_curl_stats.c \
	utils_curl_stats.h
#am_curl_xml_la_OBJECTS =  \
#	curl_xml_la-curl_xml.lo \
#	curl_xml_la-utils_curl_stats.lo
curl_xml_la_OBJECTS = $(am_curl_xml_la_OBJECTS)
curl_xml_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(curl_xml_la_CFLAGS) \
	$(CFLAGS) $(curl_xml_la_LDFLAGS) $(LDFLAGS) -o $@
#am_curl_xml_la_rpath = -rpath $(pkglibdir)
#dbi_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dbi_la_SOURCES_DIST = dbi.c utils_db_query.c utils_db_query.h
#am_dbi_la_OBJECTS = dbi_la-dbi.lo \
#	dbi_la-utils_db_query.lo
dbi_la_OBJECTS = $(am_dbi_la_OBJECTS)
dbi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dbi_la_LDFLAGS) $(LDFLAGS) -o $@
#am_dbi_la_rpath = -rpath $(pkglibdir)
#df_la_DEPENDENCIES = libmount.la
am__df_la_SOURCES_DIST = df.c
#am_df_la_OBJECTS = df.lo
df_la_OBJECTS = $(am_df_la_OBJECTS)
df_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(df_la_LDFLAGS) $(LDFLAGS) -o $@
#am_df_la_rpath = -rpath $(pkglibdir)
##am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1)
##am__DEPENDENCIES_4 = $(am__DEPENDENCIES_1)
#disk_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_3) \
#	$(am__DEPENDENCIES_4) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__disk_la_SOURCES_DIST = disk.c
#am_disk_la_OBJECTS = disk_la-disk.lo
disk_la_OBJECTS = $(am_disk_la_OBJECTS)
disk_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(disk_la_CFLAGS) \
	$(CFLAGS) $(disk_la_LDFLAGS) $(LDFLAGS) -o $@
#am_disk_la_rpath = -rpath $(pkglibdir)
dns_la_DEPENDENCIES =
am__dns_la_SOURCES_DIST = dns.c utils_dns.c utils_dns.h
#am_dns_la_OBJECTS = dns.lo utils_dns.lo
dns_la_OBJECTS = $(am_dns_la_OBJECTS)
dns_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dns_la_LDFLAGS) $(LDFLAGS) -o $@
#am_dns_la_rpath = -rpath $(pkglibdir)
dpdkstat_la_DEPENDENCIES =
am__dpdkstat_la_SOURCES_DIST = dpdkstat.c
#am_dpdkstat_la_OBJECTS =  \
#	dpdkstat_la-dpdkstat.lo
dpdkstat_la_OBJECTS = $(am_dpdkstat_la_OBJECTS)
dpdkstat_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(dpdkstat_la_LDFLAGS) $(LDFLAGS) -o $@
#am_dpdkstat_la_rpath = -rpath $(pkglibdir)
drbd_la_LIBADD =
am__drbd_la_SOURCES_DIST = drbd.c
#am_drbd_la_OBJECTS = drbd.lo
drbd_la_OBJECTS = $(am_drbd_la_OBJECTS)
drbd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(drbd_la_LDFLAGS) $(LDFLAGS) -o $@
#am_drbd_la_rpath = -rpath $(pkglibdir)
email_la_LIBADD =
am__email_la_SOURCES_DIST = email.c
#am_email_la_OBJECTS = email.lo
email_la_OBJECTS = $(am_email_la_OBJECTS)
email_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(email_la_LDFLAGS) $(LDFLAGS) -o $@
#am_email_la_rpath = -rpath $(pkglibdir)
entropy_la_LIBADD =
am__entropy_la_SOURCES_DIST = entropy.c
#am_entropy_la_OBJECTS = entropy.lo
entropy_la_OBJECTS = $(am_entropy_la_OBJECTS)
entropy_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(entropy_la_LDFLAGS) $(LDFLAGS) -o $@
#am_entropy_la_rpath = -rpath $(pkglibdir)
ethstat_la_LIBADD =
am__ethstat_la_SOURCES_DIST = ethstat.c
#am_ethstat_la_OBJECTS = ethstat.lo
ethstat_la_OBJECTS = $(am_ethstat_la_OBJECTS)
ethstat_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ethstat_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ethstat_la_rpath = -rpath $(pkglibdir)
#exec_la_DEPENDENCIES = libcmds.la
am__exec_la_SOURCES_DIST = exec.c
#am_exec_la_OBJECTS = exec.lo
exec_la_OBJECTS = $(am_exec_la_OBJECTS)
exec_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(exec_la_LDFLAGS) $(LDFLAGS) -o $@
#am_exec_la_rpath = -rpath $(pkglibdir)
fhcount_la_LIBADD =
am__fhcount_la_SOURCES_DIST = fhcount.c
#am_fhcount_la_OBJECTS = fhcount.lo
fhcount_la_OBJECTS = $(am_fhcount_la_OBJECTS)
fhcount_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(fhcount_la_LDFLAGS) $(LDFLAGS) -o $@
#am_fhcount_la_rpath = -rpath $(pkglibdir)
filecount_la_LIBADD =
am__filecount_la_SOURCES_DIST = filecount.c
#am_filecount_la_OBJECTS = filecount.lo
filecount_la_OBJECTS = $(am_filecount_la_OBJECTS)
filecount_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(filecount_la_LDFLAGS) $(LDFLAGS) -o $@
#am_filecount_la_rpath = -rpath \
#	$(pkglibdir)
fscache_la_LIBADD =
am__fscache_la_SOURCES_DIST = fscache.c
#am_fscache_la_OBJECTS = fscache.lo
fscache_la_OBJECTS = $(am_fscache_la_OBJECTS)
fscache_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(fscache_la_LDFLAGS) $(LDFLAGS) -o $@
#am_fscache_la_rpath = -rpath $(pkglibdir)
#gmond_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__gmond_la_SOURCES_DIST = gmond.c
#am_gmond_la_OBJECTS = gmond_la-gmond.lo
gmond_la_OBJECTS = $(am_gmond_la_OBJECTS)
gmond_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(gmond_la_LDFLAGS) $(LDFLAGS) -o $@
#am_gmond_la_rpath = -rpath $(pkglibdir)
#gps_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__gps_la_SOURCES_DIST = gps.c
#am_gps_la_OBJECTS = gps_la-gps.lo
gps_la_OBJECTS = $(am_gps_la_OBJECTS)
gps_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(gps_la_CFLAGS) $(CFLAGS) \
	$(gps_la_LDFLAGS) $(LDFLAGS) -o $@
#am_gps_la_rpath = -rpath $(pkglibdir)
#grpc_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__grpc_la_SOURCES_DIST = grpc.cc
#am_grpc_la_OBJECTS = grpc_la-grpc.lo
#nodist_grpc_la_OBJECTS =  \
#	grpc_la-collectd.grpc.pb.lo \
#	grpc_la-collectd.pb.lo \
#	grpc_la-types.pb.lo
grpc_la_OBJECTS = $(am_grpc_la_OBJECTS) $(nodist_grpc_la_OBJECTS)
grpc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(grpc_la_LDFLAGS) $(LDFLAGS) -o $@
#am_grpc_la_rpath = -rpath $(pkglibdir)
#hddtemp_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__hddtemp_la_SOURCES_DIST = hddtemp.c
#am_hddtemp_la_OBJECTS = hddtemp.lo
hddtemp_la_OBJECTS = $(am_hddtemp_la_OBJECTS)
hddtemp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(hddtemp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hddtemp_la_rpath = -rpath $(pkglibdir)
hugepages_la_LIBADD =
am__hugepages_la_SOURCES_DIST = hugepages.c
#am_hugepages_la_OBJECTS = hugepages.lo
hugepages_la_OBJECTS = $(am_hugepages_la_OBJECTS)
hugepages_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(hugepages_la_LDFLAGS) $(LDFLAGS) -o $@
#am_hugepages_la_rpath = -rpath \
#	$(pkglibdir)
#intel_rdt_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__intel_rdt_la_SOURCES_DIST = intel_rdt.c
#am_intel_rdt_la_OBJECTS =  \
#	intel_rdt_la-intel_rdt.lo
intel_rdt_la_OBJECTS = $(am_intel_rdt_la_OBJECTS)
intel_rdt_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(intel_rdt_la_CFLAGS) \
	$(CFLAGS) $(intel_rdt_la_LDFLAGS) $(LDFLAGS) -o $@
#am_intel_rdt_la_rpath = -rpath \
#	$(pkglibdir)
##am__DEPENDENCIES_5 = $(am__DEPENDENCIES_1)
#interface_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_5) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__interface_la_SOURCES_DIST = interface.c
#am_interface_la_OBJECTS =  \
#	interface_la-interface.lo
interface_la_OBJECTS = $(am_interface_la_OBJECTS)
interface_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(interface_la_CFLAGS) \
	$(CFLAGS) $(interface_la_LDFLAGS) $(LDFLAGS) -o $@
#am_interface_la_rpath = -rpath \
#	$(pkglibdir)
ipc_la_LIBADD =
am__ipc_la_SOURCES_DIST = ipc.c
#am_ipc_la_OBJECTS = ipc.lo
ipc_la_OBJECTS = $(am_ipc_la_OBJECTS)
ipc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ipc_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ipc_la_rpath = -rpath $(pkglibdir)
#ipmi_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__ipmi_la_SOURCES_DIST = ipmi.c
#am_ipmi_la_OBJECTS = ipmi_la-ipmi.lo
ipmi_la_OBJECTS = $(am_ipmi_la_OBJECTS)
ipmi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ipmi_la_CFLAGS) \
	$(CFLAGS) $(ipmi_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ipmi_la_rpath = -rpath $(pkglibdir)
#iptables_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__iptables_la_SOURCES_DIST = iptables.c
#am_iptables_la_OBJECTS =  \
#	iptables_la-iptables.lo
iptables_la_OBJECTS = $(am_iptables_la_OBJECTS)
iptables_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(iptables_la_LDFLAGS) $(LDFLAGS) -o $@
#am_iptables_la_rpath = -rpath $(pkglibdir)
ipvs_la_LIBADD =
am__ipvs_la_SOURCES_DIST = ipvs.c
#am_ipvs_la_OBJECTS = ipvs_la-ipvs.lo
ipvs_la_OBJECTS = $(am_ipvs_la_OBJECTS)
ipvs_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(ipvs_la_CFLAGS) \
	$(CFLAGS) $(ipvs_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ipvs_la_rpath = -rpath $(pkglibdir)
irq_la_LIBADD =
am__irq_la_SOURCES_DIST = irq.c
#am_irq_la_OBJECTS = irq.lo
irq_la_OBJECTS = $(am_irq_la_OBJECTS)
irq_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(irq_la_LDFLAGS) $(LDFLAGS) -o $@
#am_irq_la_rpath = -rpath $(pkglibdir)
iwinfo_la_DEPENDENCIES =
am__iwinfo_la_SOURCES_DIST = iwinfo.c
#am_iwinfo_la_OBJECTS = iwinfo.lo
iwinfo_la_OBJECTS = $(am_iwinfo_la_OBJECTS)
iwinfo_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(iwinfo_la_LDFLAGS) $(LDFLAGS) -o $@
#am_iwinfo_la_rpath = -rpath $(pkglibdir)
#java_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__java_la_SOURCES_DIST = java.c
#am_java_la_OBJECTS = java_la-java.lo
java_la_OBJECTS = $(am_java_la_OBJECTS)
java_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(java_la_CFLAGS) \
	$(CFLAGS) $(java_la_LDFLAGS) $(LDFLAGS) -o $@
#am_java_la_rpath = -rpath $(pkglibdir)
libcmds_la_DEPENDENCIES = daemon/libcommon.la daemon/libmetadata.la
am_libcmds_la_OBJECTS = utils_cmds.lo utils_cmd_flush.lo \
	utils_cmd_getthreshold.lo utils_cmd_getval.lo \
	utils_cmd_listval.lo utils_cmd_putnotif.lo utils_cmd_putval.lo \
	utils_parse_option.lo
libcmds_la_OBJECTS = $(am_libcmds_la_OBJECTS)
libformat_graphite_la_LIBADD =
am_libformat_graphite_la_OBJECTS =  \
	libformat_graphite_la-utils_format_graphite.lo
libformat_graphite_la_OBJECTS = $(am_libformat_graphite_la_OBJECTS)
libformat_graphite_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libformat_graphite_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
libformat_json_la_DEPENDENCIES = $(am__DEPENDENCIES_6)
am_libformat_json_la_OBJECTS = libformat_json_la-utils_format_json.lo
libformat_json_la_OBJECTS = $(am_libformat_json_la_OBJECTS)
libformat_json_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libformat_json_la_LDFLAGS) $(LDFLAGS) \
	-o $@
liblatency_la_DEPENDENCIES = daemon/libcommon.la
am_liblatency_la_OBJECTS = utils_latency.lo utils_latency_config.lo
liblatency_la_OBJECTS = $(am_liblatency_la_OBJECTS)
liblookup_la_DEPENDENCIES = daemon/libavltree.la
am_liblookup_la_OBJECTS = utils_vl_lookup.lo
liblookup_la_OBJECTS = $(am_liblookup_la_OBJECTS)
libmount_la_LIBADD =
am_libmount_la_OBJECTS = utils_mount.lo
libmount_la_OBJECTS = $(am_libmount_la_OBJECTS)
##am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
#load_la_DEPENDENCIES = $(am__DEPENDENCIES_7) \
#	$(am__DEPENDENCIES_1)
am__load_la_SOURCES_DIST = load.c
#am_load_la_OBJECTS = load_la-load.lo
load_la_OBJECTS = $(am_load_la_OBJECTS)
load_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(load_la_CFLAGS) \
	$(CFLAGS) $(load_la_LDFLAGS) $(LDFLAGS) -o $@
#am_load_la_rpath = -rpath $(pkglibdir)
#log_logstash_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__log_logstash_la_SOURCES_DIST = log_logstash.c
#am_log_logstash_la_OBJECTS = log_logstash_la-log_logstash.lo
log_logstash_la_OBJECTS = $(am_log_logstash_la_OBJECTS)
log_logstash_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(log_logstash_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_log_logstash_la_rpath = -rpath \
#	$(pkglibdir)
logfile_la_LIBADD =
am__logfile_la_SOURCES_DIST = logfile.c
#am_logfile_la_OBJECTS = logfile.lo
logfile_la_OBJECTS = $(am_logfile_la_OBJECTS)
logfile_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(logfile_la_LDFLAGS) $(LDFLAGS) -o $@
#am_logfile_la_rpath = -rpath $(pkglibdir)
lpar_la_DEPENDENCIES =
am__lpar_la_SOURCES_DIST = lpar.c
#am_lpar_la_OBJECTS = lpar.lo
lpar_la_OBJECTS = $(am_lpar_la_OBJECTS)
lpar_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(lpar_la_LDFLAGS) $(LDFLAGS) -o $@
#am_lpar_la_rpath = -rpath $(pkglibdir)
#lua_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lua_la_SOURCES_DIST = lua.c utils_lua.c utils_lua.h
#am_lua_la_OBJECTS = lua_la-lua.lo \
#	lua_la-utils_lua.lo
lua_la_OBJECTS = $(am_lua_la_OBJECTS)
lua_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(lua_la_CFLAGS) $(CFLAGS) \
	$(lua_la_LDFLAGS) $(LDFLAGS) -o $@
#am_lua_la_rpath = -rpath $(pkglibdir)
#lvm_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__lvm_la_SOURCES_DIST = lvm.c
#am_lvm_la_OBJECTS = lvm_la-lvm.lo
lvm_la_OBJECTS = $(am_lvm_la_OBJECTS)
lvm_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(lvm_la_LDFLAGS) $(LDFLAGS) -o $@
#am_lvm_la_rpath = -rpath $(pkglibdir)
madwifi_la_LIBADD =
am__madwifi_la_SOURCES_DIST = madwifi.c madwifi.h
#am_madwifi_la_OBJECTS = madwifi.lo
madwifi_la_OBJECTS = $(am_madwifi_la_OBJECTS)
madwifi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(madwifi_la_LDFLAGS) $(LDFLAGS) -o $@
#am_madwifi_la_rpath = -rpath $(pkglibdir)
match_empty_counter_la_LIBADD =
am__match_empty_counter_la_SOURCES_DIST = match_empty_counter.c
#am_match_empty_counter_la_OBJECTS =  \
#	match_empty_counter.lo
match_empty_counter_la_OBJECTS = $(am_match_empty_counter_la_OBJECTS)
match_empty_counter_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(match_empty_counter_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_match_empty_counter_la_rpath =  \
#	-rpath $(pkglibdir)
match_hashed_la_LIBADD =
am__match_hashed_la_SOURCES_DIST = match_hashed.c
#am_match_hashed_la_OBJECTS =  \
#	match_hashed.lo
match_hashed_la_OBJECTS = $(am_match_hashed_la_OBJECTS)
match_hashed_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(match_hashed_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_match_hashed_la_rpath = -rpath \
#	$(pkglibdir)
match_regex_la_LIBADD =
am__match_regex_la_SOURCES_DIST = match_regex.c
#am_match_regex_la_OBJECTS =  \
#	match_regex.lo
match_regex_la_OBJECTS = $(am_match_regex_la_OBJECTS)
match_regex_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(match_regex_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_match_regex_la_rpath = -rpath \
#	$(pkglibdir)
match_timediff_la_LIBADD =
am__match_timediff_la_SOURCES_DIST = match_timediff.c
#am_match_timediff_la_OBJECTS =  \
#	match_timediff.lo
match_timediff_la_OBJECTS = $(am_match_timediff_la_OBJECTS)
match_timediff_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(match_timediff_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_match_timediff_la_rpath = -rpath \
#	$(pkglibdir)
match_value_la_LIBADD =
am__match_value_la_SOURCES_DIST = match_value.c
#am_match_value_la_OBJECTS =  \
#	match_value.lo
match_value_la_OBJECTS = $(am_match_value_la_OBJECTS)
match_value_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(match_value_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_match_value_la_rpath = -rpath \
#	$(pkglibdir)
#mbmon_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__mbmon_la_SOURCES_DIST = mbmon.c
#am_mbmon_la_OBJECTS = mbmon.lo
mbmon_la_OBJECTS = $(am_mbmon_la_OBJECTS)
mbmon_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(mbmon_la_LDFLAGS) $(LDFLAGS) -o $@
#am_mbmon_la_rpath = -rpath $(pkglibdir)
md_la_LIBADD =
am__md_la_SOURCES_DIST = md.c
#am_md_la_OBJECTS = md.lo
md_la_OBJECTS = $(am_md_la_OBJECTS)
md_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(md_la_LDFLAGS) $(LDFLAGS) -o $@
#am_md_la_rpath = -rpath $(pkglibdir)
#memcachec_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	liblatency.la
am__memcachec_la_SOURCES_DIST = memcachec.c utils_match.c \
	utils_match.h
#am_memcachec_la_OBJECTS =  \
#	memcachec_la-memcachec.lo \
#	memcachec_la-utils_match.lo
memcachec_la_OBJECTS = $(am_memcachec_la_OBJECTS)
memcachec_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(memcachec_la_LDFLAGS) $(LDFLAGS) -o $@
#am_memcachec_la_rpath = -rpath \
#	$(pkglibdir)
#memcached_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__memcached_la_SOURCES_DIST = memcached.c
#am_memcached_la_OBJECTS = memcached.lo
memcached_la_OBJECTS = $(am_memcached_la_OBJECTS)
memcached_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(memcached_la_LDFLAGS) $(LDFLAGS) -o $@
#am_memcached_la_rpath = -rpath \
#	$(pkglibdir)
#am__DEPENDENCIES_8 = $(am__DEPENDENCIES_1)
memory_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8) \
	$(am__DEPENDENCIES_1)
am__memory_la_SOURCES_DIST = memory.c
am_memory_la_OBJECTS = memory_la-memory.lo
memory_la_OBJECTS = $(am_memory_la_OBJECTS)
memory_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(memory_la_CFLAGS) \
	$(CFLAGS) $(memory_la_LDFLAGS) $(LDFLAGS) -o $@
am_memory_la_rpath = -rpath $(pkglibdir)
#mic_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__mic_la_SOURCES_DIST = mic.c
#am_mic_la_OBJECTS = mic_la-mic.lo
mic_la_OBJECTS = $(am_mic_la_OBJECTS)
mic_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mic_la_CFLAGS) $(CFLAGS) \
	$(mic_la_LDFLAGS) $(LDFLAGS) -o $@
#am_mic_la_rpath = -rpath $(pkglibdir)
#modbus_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__modbus_la_SOURCES_DIST = modbus.c
#am_modbus_la_OBJECTS = modbus_la-modbus.lo
modbus_la_OBJECTS = $(am_modbus_la_OBJECTS)
modbus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(modbus_la_CFLAGS) \
	$(CFLAGS) $(modbus_la_LDFLAGS) $(LDFLAGS) -o $@
#am_modbus_la_rpath = -rpath $(pkglibdir)
#mqtt_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__mqtt_la_SOURCES_DIST = mqtt.c
#am_mqtt_la_OBJECTS = mqtt_la-mqtt.lo
mqtt_la_OBJECTS = $(am_mqtt_la_OBJECTS)
mqtt_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(mqtt_la_LDFLAGS) $(LDFLAGS) -o $@
#am_mqtt_la_rpath = -rpath $(pkglibdir)
multimeter_la_LIBADD =
am__multimeter_la_SOURCES_DIST = multimeter.c
#am_multimeter_la_OBJECTS =  \
#	multimeter.lo
multimeter_la_OBJECTS = $(am_multimeter_la_OBJECTS)
multimeter_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(multimeter_la_LDFLAGS) $(LDFLAGS) -o $@
#am_multimeter_la_rpath = -rpath \
#	$(pkglibdir)
#mysql_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__mysql_la_SOURCES_DIST = mysql.c
#am_mysql_la_OBJECTS = mysql_la-mysql.lo
mysql_la_OBJECTS = $(am_mysql_la_OBJECTS)
mysql_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(mysql_la_CFLAGS) \
	$(CFLAGS) $(mysql_la_LDFLAGS) $(LDFLAGS) -o $@
#am_mysql_la_rpath = -rpath $(pkglibdir)
#netapp_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__netapp_la_SOURCES_DIST = netapp.c
#am_netapp_la_OBJECTS = netapp_la-netapp.lo
netapp_la_OBJECTS = $(am_netapp_la_OBJECTS)
netapp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(netapp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_netapp_la_rpath = -rpath $(pkglibdir)
#netlink_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__netlink_la_SOURCES_DIST = netlink.c
#am_netlink_la_OBJECTS =  \
#	netlink_la-netlink.lo
netlink_la_OBJECTS = $(am_netlink_la_OBJECTS)
netlink_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(netlink_la_CFLAGS) \
	$(CFLAGS) $(netlink_la_LDFLAGS) $(LDFLAGS) -o $@
#am_netlink_la_rpath = -rpath $(pkglibdir)
##am__DEPENDENCIES_9 = $(am__DEPENDENCIES_1)
#network_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_9)
am__network_la_SOURCES_DIST = network.c network.h utils_fbhash.c \
	utils_fbhash.h
#am_network_la_OBJECTS =  \
#	network_la-network.lo \
#	network_la-utils_fbhash.lo
network_la_OBJECTS = $(am_network_la_OBJECTS)
network_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(network_la_LDFLAGS) $(LDFLAGS) -o $@
#am_network_la_rpath = -rpath $(pkglibdir)
nfs_la_LIBADD =
am__nfs_la_SOURCES_DIST = nfs.c
#am_nfs_la_OBJECTS = nfs.lo
nfs_la_OBJECTS = $(am_nfs_la_OBJECTS)
nfs_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(nfs_la_LDFLAGS) $(LDFLAGS) -o $@
#am_nfs_la_rpath = -rpath $(pkglibdir)
#nginx_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__nginx_la_SOURCES_DIST = nginx.c
#am_nginx_la_OBJECTS = nginx_la-nginx.lo
nginx_la_OBJECTS = $(am_nginx_la_OBJECTS)
nginx_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nginx_la_CFLAGS) \
	$(CFLAGS) $(nginx_la_LDFLAGS) $(LDFLAGS) -o $@
#am_nginx_la_rpath = -rpath $(pkglibdir)
#notify_desktop_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__notify_desktop_la_SOURCES_DIST = notify_desktop.c
#am_notify_desktop_la_OBJECTS = notify_desktop_la-notify_desktop.lo
notify_desktop_la_OBJECTS = $(am_notify_desktop_la_OBJECTS)
notify_desktop_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(notify_desktop_la_CFLAGS) $(CFLAGS) \
	$(notify_desktop_la_LDFLAGS) $(LDFLAGS) -o $@
#am_notify_desktop_la_rpath = -rpath \
#	$(pkglibdir)
notify_email_la_DEPENDENCIES =
am__notify_email_la_SOURCES_DIST = notify_email.c
#am_notify_email_la_OBJECTS =  \
#	notify_email.lo
notify_email_la_OBJECTS = $(am_notify_email_la_OBJECTS)
notify_email_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(notify_email_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_notify_email_la_rpath = -rpath \
#	$(pkglibdir)
notify_nagios_la_LIBADD =
am__notify_nagios_la_SOURCES_DIST = notify_nagios.c
#am_notify_nagios_la_OBJECTS =  \
#	notify_nagios.lo
notify_nagios_la_OBJECTS = $(am_notify_nagios_la_OBJECTS)
notify_nagios_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(notify_nagios_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_notify_nagios_la_rpath = -rpath \
#	$(pkglibdir)
#ntpd_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__ntpd_la_SOURCES_DIST = ntpd.c
#am_ntpd_la_OBJECTS = ntpd.lo
ntpd_la_OBJECTS = $(am_ntpd_la_OBJECTS)
ntpd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ntpd_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ntpd_la_rpath = -rpath $(pkglibdir)
numa_la_LIBADD =
am__numa_la_SOURCES_DIST = numa.c
#am_numa_la_OBJECTS = numa.lo
numa_la_OBJECTS = $(am_numa_la_OBJECTS)
numa_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(numa_la_LDFLAGS) $(LDFLAGS) -o $@
#am_numa_la_rpath = -rpath $(pkglibdir)
#nut_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__nut_la_SOURCES_DIST = nut.c
#am_nut_la_OBJECTS = nut_la-nut.lo
nut_la_OBJECTS = $(am_nut_la_OBJECTS)
nut_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nut_la_CFLAGS) $(CFLAGS) \
	$(nut_la_LDFLAGS) $(LDFLAGS) -o $@
#am_nut_la_rpath = -rpath $(pkglibdir)
#olsrd_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__olsrd_la_SOURCES_DIST = olsrd.c
#am_olsrd_la_OBJECTS = olsrd.lo
olsrd_la_OBJECTS = $(am_olsrd_la_OBJECTS)
olsrd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(olsrd_la_LDFLAGS) $(LDFLAGS) -o $@
#am_olsrd_la_rpath = -rpath $(pkglibdir)
#onewire_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__onewire_la_SOURCES_DIST = onewire.c
#am_onewire_la_OBJECTS =  \
#	onewire_la-onewire.lo
onewire_la_OBJECTS = $(am_onewire_la_OBJECTS)
onewire_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(onewire_la_LDFLAGS) $(LDFLAGS) -o $@
#am_onewire_la_rpath = -rpath $(pkglibdir)
openldap_la_DEPENDENCIES =
am__openldap_la_SOURCES_DIST = openldap.c
#am_openldap_la_OBJECTS =  \
#	openldap_la-openldap.lo
openldap_la_OBJECTS = $(am_openldap_la_OBJECTS)
openldap_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(openldap_la_LDFLAGS) $(LDFLAGS) -o $@
#am_openldap_la_rpath = -rpath $(pkglibdir)
openvpn_la_LIBADD =
am__openvpn_la_SOURCES_DIST = openvpn.c
#am_openvpn_la_OBJECTS = openvpn.lo
openvpn_la_OBJECTS = $(am_openvpn_la_OBJECTS)
openvpn_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(openvpn_la_LDFLAGS) $(LDFLAGS) -o $@
#am_openvpn_la_rpath = -rpath $(pkglibdir)
#oracle_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__oracle_la_SOURCES_DIST = oracle.c utils_db_query.c \
	utils_db_query.h
#am_oracle_la_OBJECTS = oracle_la-oracle.lo \
#	oracle_la-utils_db_query.lo
oracle_la_OBJECTS = $(am_oracle_la_OBJECTS)
oracle_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(oracle_la_LDFLAGS) $(LDFLAGS) -o $@
#am_oracle_la_rpath = -rpath $(pkglibdir)
#perl_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__perl_la_SOURCES_DIST = perl.c
#am_perl_la_OBJECTS = perl_la-perl.lo
perl_la_OBJECTS = $(am_perl_la_OBJECTS)
perl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(perl_la_CFLAGS) \
	$(CFLAGS) $(perl_la_LDFLAGS) $(LDFLAGS) -o $@
#am_perl_la_rpath = -rpath $(pkglibdir)
pf_la_LIBADD =
am__pf_la_SOURCES_DIST = pf.c
#am_pf_la_OBJECTS = pf.lo
pf_la_OBJECTS = $(am_pf_la_OBJECTS)
pf_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(pf_la_LDFLAGS) $(LDFLAGS) -o $@
#am_pf_la_rpath = -rpath $(pkglibdir)
#pinba_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__pinba_la_SOURCES_DIST = pinba.c
#am_pinba_la_OBJECTS = pinba_la-pinba.lo
#nodist_pinba_la_OBJECTS =  \
#	pinba_la-pinba.pb-c.lo
pinba_la_OBJECTS = $(am_pinba_la_OBJECTS) $(nodist_pinba_la_OBJECTS)
pinba_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(pinba_la_LDFLAGS) $(LDFLAGS) -o $@
#am_pinba_la_rpath = -rpath $(pkglibdir)
ping_la_DEPENDENCIES =
am__ping_la_SOURCES_DIST = ping.c
#am_ping_la_OBJECTS = ping_la-ping.lo
ping_la_OBJECTS = $(am_ping_la_OBJECTS)
ping_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ping_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ping_la_rpath = -rpath $(pkglibdir)
postgresql_la_DEPENDENCIES =
am__postgresql_la_SOURCES_DIST = postgresql.c utils_db_query.c \
	utils_db_query.h
#am_postgresql_la_OBJECTS =  \
#	postgresql_la-postgresql.lo \
#	postgresql_la-utils_db_query.lo
postgresql_la_OBJECTS = $(am_postgresql_la_OBJECTS)
postgresql_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(postgresql_la_LDFLAGS) $(LDFLAGS) -o $@
#am_postgresql_la_rpath = -rpath \
#	$(pkglibdir)
powerdns_la_LIBADD =
am__powerdns_la_SOURCES_DIST = powerdns.c
#am_powerdns_la_OBJECTS = powerdns.lo
powerdns_la_OBJECTS = $(am_powerdns_la_OBJECTS)
powerdns_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(powerdns_la_LDFLAGS) $(LDFLAGS) -o $@
#am_powerdns_la_rpath = -rpath $(pkglibdir)
#processes_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__processes_la_SOURCES_DIST = processes.c
#am_processes_la_OBJECTS = processes.lo
processes_la_OBJECTS = $(am_processes_la_OBJECTS)
processes_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(processes_la_LDFLAGS) $(LDFLAGS) -o $@
#am_processes_la_rpath = -rpath \
#	$(pkglibdir)
protocols_la_LIBADD =
am__protocols_la_SOURCES_DIST = protocols.c
#am_protocols_la_OBJECTS = protocols.lo
protocols_la_OBJECTS = $(am_protocols_la_OBJECTS)
protocols_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(protocols_la_LDFLAGS) $(LDFLAGS) -o $@
#am_protocols_la_rpath = -rpath \
#	$(pkglibdir)
python_la_LIBADD =
am__python_la_SOURCES_DIST = python.c pyconfig.c pyvalues.c cpython.h
#am_python_la_OBJECTS = python_la-python.lo \
#	python_la-pyconfig.lo \
#	python_la-pyvalues.lo
python_la_OBJECTS = $(am_python_la_OBJECTS)
python_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(python_la_LDFLAGS) $(LDFLAGS) -o $@
#am_python_la_rpath = -rpath $(pkglibdir)
redis_la_DEPENDENCIES =
am__redis_la_SOURCES_DIST = redis.c
#am_redis_la_OBJECTS = redis_la-redis.lo
redis_la_OBJECTS = $(am_redis_la_OBJECTS)
redis_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(redis_la_CFLAGS) \
	$(CFLAGS) $(redis_la_LDFLAGS) $(LDFLAGS) -o $@
#am_redis_la_rpath = -rpath $(pkglibdir)
routeros_la_DEPENDENCIES =
am__routeros_la_SOURCES_DIST = routeros.c
#am_routeros_la_OBJECTS =  \
#	routeros_la-routeros.lo
routeros_la_OBJECTS = $(am_routeros_la_OBJECTS)
routeros_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(routeros_la_LDFLAGS) $(LDFLAGS) -o $@
#am_routeros_la_rpath = -rpath $(pkglibdir)
#rrdcached_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__rrdcached_la_SOURCES_DIST = rrdcached.c utils_rrdcreate.c \
	utils_rrdcreate.h
#am_rrdcached_la_OBJECTS =  \
#	rrdcached_la-rrdcached.lo \
#	rrdcached_la-utils_rrdcreate.lo
rrdcached_la_OBJECTS = $(am_rrdcached_la_OBJECTS)
rrdcached_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(rrdcached_la_CFLAGS) \
	$(CFLAGS) $(rrdcached_la_LDFLAGS) $(LDFLAGS) -o $@
#am_rrdcached_la_rpath = -rpath \
#	$(pkglibdir)
#rrdtool_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__rrdtool_la_SOURCES_DIST = rrdtool.c utils_rrdcreate.c \
	utils_rrdcreate.h
#am_rrdtool_la_OBJECTS =  \
#	rrdtool_la-rrdtool.lo \
#	rrdtool_la-utils_rrdcreate.lo
rrdtool_la_OBJECTS = $(am_rrdtool_la_OBJECTS)
rrdtool_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(rrdtool_la_CFLAGS) \
	$(CFLAGS) $(rrdtool_la_LDFLAGS) $(LDFLAGS) -o $@
#am_rrdtool_la_rpath = -rpath $(pkglibdir)
sensors_la_DEPENDENCIES =
am__sensors_la_SOURCES_DIST = sensors.c
#am_sensors_la_OBJECTS =  \
#	sensors_la-sensors.lo
sensors_la_OBJECTS = $(am_sensors_la_OBJECTS)
sensors_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(sensors_la_CFLAGS) \
	$(CFLAGS) $(sensors_la_LDFLAGS) $(LDFLAGS) -o $@
#am_sensors_la_rpath = -rpath $(pkglibdir)
serial_la_LIBADD =
am__serial_la_SOURCES_DIST = serial.c
#am_serial_la_OBJECTS = serial.lo
serial_la_OBJECTS = $(am_serial_la_OBJECTS)
serial_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(serial_la_LDFLAGS) $(LDFLAGS) -o $@
#am_serial_la_rpath = -rpath $(pkglibdir)
#sigrok_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__sigrok_la_SOURCES_DIST = sigrok.c
#am_sigrok_la_OBJECTS = sigrok_la-sigrok.lo
sigrok_la_OBJECTS = $(am_sigrok_la_OBJECTS)
sigrok_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(sigrok_la_CFLAGS) \
	$(CFLAGS) $(sigrok_la_LDFLAGS) $(LDFLAGS) -o $@
#am_sigrok_la_rpath = -rpath $(pkglibdir)
##smart_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
##	$(am__DEPENDENCIES_1)
am__smart_la_SOURCES_DIST = smart.c
##am_smart_la_OBJECTS = smart_la-smart.lo
smart_la_OBJECTS = $(am_smart_la_OBJECTS)
smart_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(smart_la_CFLAGS) \
	$(CFLAGS) $(smart_la_LDFLAGS) $(LDFLAGS) -o $@
##am_smart_la_rpath =  \
##	-rpath \
##	$(pkglibdir)
#snmp_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__snmp_la_SOURCES_DIST = snmp.c
#am_snmp_la_OBJECTS = snmp_la-snmp.lo
snmp_la_OBJECTS = $(am_snmp_la_OBJECTS)
snmp_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(snmp_la_LDFLAGS) $(LDFLAGS) -o $@
#am_snmp_la_rpath = -rpath $(pkglibdir)
#statsd_la_DEPENDENCIES = liblatency.la
am__statsd_la_SOURCES_DIST = statsd.c
#am_statsd_la_OBJECTS = statsd.lo
statsd_la_OBJECTS = $(am_statsd_la_OBJECTS)
statsd_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(statsd_la_LDFLAGS) $(LDFLAGS) -o $@
#am_statsd_la_rpath = -rpath $(pkglibdir)
##am__DEPENDENCIES_10 = $(am__DEPENDENCIES_1)
#swap_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_10) \
#	$(am__DEPENDENCIES_1)
am__swap_la_SOURCES_DIST = swap.c
#am_swap_la_OBJECTS = swap_la-swap.lo
swap_la_OBJECTS = $(am_swap_la_OBJECTS)
swap_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(swap_la_CFLAGS) \
	$(CFLAGS) $(swap_la_LDFLAGS) $(LDFLAGS) -o $@
#am_swap_la_rpath = -rpath $(pkglibdir)
syslog_la_LIBADD =
am__syslog_la_SOURCES_DIST = syslog.c
#am_syslog_la_OBJECTS = syslog.lo
syslog_la_OBJECTS = $(am_syslog_la_OBJECTS)
syslog_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(syslog_la_LDFLAGS) $(LDFLAGS) -o $@
#am_syslog_la_rpath = -rpath $(pkglibdir)
table_la_LIBADD =
am__table_la_SOURCES_DIST = table.c
#am_table_la_OBJECTS = table.lo
table_la_OBJECTS = $(am_table_la_OBJECTS)
table_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(table_la_LDFLAGS) $(LDFLAGS) -o $@
#am_table_la_rpath = -rpath $(pkglibdir)
#tail_la_DEPENDENCIES = liblatency.la
am__tail_la_SOURCES_DIST = tail.c utils_match.c utils_match.h \
	utils_tail.c utils_tail.h utils_tail_match.c \
	utils_tail_match.h
#am_tail_la_OBJECTS = tail.lo utils_match.lo \
#	utils_tail.lo utils_tail_match.lo
tail_la_OBJECTS = $(am_tail_la_OBJECTS)
tail_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tail_la_LDFLAGS) $(LDFLAGS) -o $@
#am_tail_la_rpath = -rpath $(pkglibdir)
tail_csv_la_LIBADD =
am__tail_csv_la_SOURCES_DIST = tail_csv.c utils_tail.c utils_tail.h
#am_tail_csv_la_OBJECTS = tail_csv.lo \
#	utils_tail.lo
tail_csv_la_OBJECTS = $(am_tail_csv_la_OBJECTS)
tail_csv_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tail_csv_la_LDFLAGS) $(LDFLAGS) -o $@
#am_tail_csv_la_rpath = -rpath $(pkglibdir)
tape_la_DEPENDENCIES =
am__tape_la_SOURCES_DIST = tape.c
#am_tape_la_OBJECTS = tape.lo
tape_la_OBJECTS = $(am_tape_la_OBJECTS)
tape_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tape_la_LDFLAGS) $(LDFLAGS) -o $@
#am_tape_la_rpath = -rpath $(pkglibdir)
target_notification_la_LIBADD =
am__target_notification_la_SOURCES_DIST = target_notification.c
am_target_notification_la_OBJECTS =  \
	target_notification.lo
target_notification_la_OBJECTS = $(am_target_notification_la_OBJECTS)
target_notification_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(target_notification_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_target_notification_la_rpath =  \
	-rpath $(pkglibdir)
target_replace_la_LIBADD =
am__target_replace_la_SOURCES_DIST = target_replace.c
am_target_replace_la_OBJECTS =  \
	target_replace.lo
target_replace_la_OBJECTS = $(am_target_replace_la_OBJECTS)
target_replace_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(target_replace_la_LDFLAGS) $(LDFLAGS) \
	-o $@
am_target_replace_la_rpath = -rpath \
	$(pkglibdir)
target_scale_la_LIBADD =
am__target_scale_la_SOURCES_DIST = target_scale.c
am_target_scale_la_OBJECTS =  \
	target_scale.lo
target_scale_la_OBJECTS = $(am_target_scale_la_OBJECTS)
target_scale_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(target_scale_la_LDFLAGS) $(LDFLAGS) \
	-o $@
am_target_scale_la_rpath = -rpath \
	$(pkglibdir)
target_set_la_LIBADD =
am__target_set_la_SOURCES_DIST = target_set.c
am_target_set_la_OBJECTS =  \
	target_set.lo
target_set_la_OBJECTS = $(am_target_set_la_OBJECTS)
target_set_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(target_set_la_LDFLAGS) $(LDFLAGS) -o $@
am_target_set_la_rpath = -rpath \
	$(pkglibdir)
target_v5upgrade_la_LIBADD =
am__target_v5upgrade_la_SOURCES_DIST = target_v5upgrade.c
am_target_v5upgrade_la_OBJECTS =  \
	target_v5upgrade.lo
target_v5upgrade_la_OBJECTS = $(am_target_v5upgrade_la_OBJECTS)
target_v5upgrade_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(target_v5upgrade_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_target_v5upgrade_la_rpath =  \
	-rpath $(pkglibdir)
#tcpconns_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__tcpconns_la_SOURCES_DIST = tcpconns.c
#am_tcpconns_la_OBJECTS = tcpconns.lo
tcpconns_la_OBJECTS = $(am_tcpconns_la_OBJECTS)
tcpconns_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(tcpconns_la_LDFLAGS) $(LDFLAGS) -o $@
#am_tcpconns_la_rpath = -rpath $(pkglibdir)
teamspeak2_la_LIBADD =
am__teamspeak2_la_SOURCES_DIST = teamspeak2.c
#am_teamspeak2_la_OBJECTS =  \
#	teamspeak2.lo
teamspeak2_la_OBJECTS = $(am_teamspeak2_la_OBJECTS)
teamspeak2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(teamspeak2_la_LDFLAGS) $(LDFLAGS) -o $@
#am_teamspeak2_la_rpath = -rpath \
#	$(pkglibdir)
ted_la_LIBADD =
am__ted_la_SOURCES_DIST = ted.c
#am_ted_la_OBJECTS = ted.lo
ted_la_OBJECTS = $(am_ted_la_OBJECTS)
ted_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(ted_la_LDFLAGS) $(LDFLAGS) -o $@
#am_ted_la_rpath = -rpath $(pkglibdir)
thermal_la_LIBADD =
am__thermal_la_SOURCES_DIST = thermal.c
#am_thermal_la_OBJECTS = thermal.lo
thermal_la_OBJECTS = $(am_thermal_la_OBJECTS)
thermal_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(thermal_la_LDFLAGS) $(LDFLAGS) -o $@
#am_thermal_la_rpath = -rpath $(pkglibdir)
threshold_la_LIBADD =
am__threshold_la_SOURCES_DIST = threshold.c
am_threshold_la_OBJECTS = threshold.lo
threshold_la_OBJECTS = $(am_threshold_la_OBJECTS)
threshold_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(threshold_la_LDFLAGS) $(LDFLAGS) -o $@
am_threshold_la_rpath = -rpath \
	$(pkglibdir)
#tokyotyrant_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__tokyotyrant_la_SOURCES_DIST = tokyotyrant.c
#am_tokyotyrant_la_OBJECTS =  \
#	tokyotyrant_la-tokyotyrant.lo
tokyotyrant_la_OBJECTS = $(am_tokyotyrant_la_OBJECTS)
tokyotyrant_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(tokyotyrant_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_tokyotyrant_la_rpath = -rpath \
#	$(pkglibdir)
turbostat_la_LIBADD =
am__turbostat_la_SOURCES_DIST = turbostat.c
#am_turbostat_la_OBJECTS = turbostat.lo
turbostat_la_OBJECTS = $(am_turbostat_la_OBJECTS)
turbostat_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(turbostat_la_LDFLAGS) $(LDFLAGS) -o $@
#am_turbostat_la_rpath = -rpath \
#	$(pkglibdir)
#unixsock_la_DEPENDENCIES = libcmds.la
am__unixsock_la_SOURCES_DIST = unixsock.c
#am_unixsock_la_OBJECTS = unixsock.lo
unixsock_la_OBJECTS = $(am_unixsock_la_OBJECTS)
unixsock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(unixsock_la_LDFLAGS) $(LDFLAGS) -o $@
#am_unixsock_la_rpath = -rpath $(pkglibdir)
#uptime_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__uptime_la_SOURCES_DIST = uptime.c
#am_uptime_la_OBJECTS = uptime_la-uptime.lo
uptime_la_OBJECTS = $(am_uptime_la_OBJECTS)
uptime_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(uptime_la_CFLAGS) \
	$(CFLAGS) $(uptime_la_LDFLAGS) $(LDFLAGS) -o $@
#am_uptime_la_rpath = -rpath $(pkglibdir)
##am__DEPENDENCIES_11 = $(am__DEPENDENCIES_1)
#users_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_11)
am__users_la_SOURCES_DIST = users.c
#am_users_la_OBJECTS = users_la-users.lo
users_la_OBJECTS = $(am_users_la_OBJECTS)
users_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(users_la_CFLAGS) \
	$(CFLAGS) $(users_la_LDFLAGS) $(LDFLAGS) -o $@
#am_users_la_rpath = -rpath $(pkglibdir)
#uuid_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__uuid_la_SOURCES_DIST = uuid.c
#am_uuid_la_OBJECTS = uuid_la-uuid.lo
uuid_la_OBJECTS = $(am_uuid_la_OBJECTS)
uuid_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(uuid_la_CFLAGS) \
	$(CFLAGS) $(uuid_la_LDFLAGS) $(LDFLAGS) -o $@
#am_uuid_la_rpath = -rpath $(pkglibdir)
#varnish_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1)
am__varnish_la_SOURCES_DIST = varnish.c
#am_varnish_la_OBJECTS =  \
#	varnish_la-varnish.lo
varnish_la_OBJECTS = $(am_varnish_la_OBJECTS)
varnish_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(varnish_la_CFLAGS) \
	$(CFLAGS) $(varnish_la_LDFLAGS) $(LDFLAGS) -o $@
#am_varnish_la_rpath = -rpath $(pkglibdir)
#virt_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__virt_la_SOURCES_DIST = virt.c
#am_virt_la_OBJECTS = virt_la-virt.lo
virt_la_OBJECTS = $(am_virt_la_OBJECTS)
virt_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virt_la_CFLAGS) \
	$(CFLAGS) $(virt_la_LDFLAGS) $(LDFLAGS) -o $@
#am_virt_la_rpath = -rpath $(pkglibdir)
vmem_la_LIBADD =
am__vmem_la_SOURCES_DIST = vmem.c
#am_vmem_la_OBJECTS = vmem.lo
vmem_la_OBJECTS = $(am_vmem_la_OBJECTS)
vmem_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(vmem_la_LDFLAGS) $(LDFLAGS) -o $@
#am_vmem_la_rpath = -rpath $(pkglibdir)
vserver_la_LIBADD =
am__vserver_la_SOURCES_DIST = vserver.c
#am_vserver_la_OBJECTS = vserver.lo
vserver_la_OBJECTS = $(am_vserver_la_OBJECTS)
vserver_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(vserver_la_LDFLAGS) $(LDFLAGS) -o $@
#am_vserver_la_rpath = -rpath $(pkglibdir)
wireless_la_LIBADD =
am__wireless_la_SOURCES_DIST = wireless.c
#am_wireless_la_OBJECTS = wireless.lo
wireless_la_OBJECTS = $(am_wireless_la_OBJECTS)
wireless_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(wireless_la_LDFLAGS) $(LDFLAGS) -o $@
#am_wireless_la_rpath = -rpath $(pkglibdir)
#write_graphite_la_DEPENDENCIES =  \
#	libformat_graphite.la
am__write_graphite_la_SOURCES_DIST = write_graphite.c
#am_write_graphite_la_OBJECTS =  \
#	write_graphite.lo
write_graphite_la_OBJECTS = $(am_write_graphite_la_OBJECTS)
write_graphite_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_graphite_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_write_graphite_la_rpath = -rpath \
#	$(pkglibdir)
#write_http_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	libformat_json.la
am__write_http_la_SOURCES_DIST = write_http.c utils_format_kairosdb.c \
	utils_format_kairosdb.h
#am_write_http_la_OBJECTS =  \
#	write_http_la-write_http.lo \
#	write_http_la-utils_format_kairosdb.lo
write_http_la_OBJECTS = $(am_write_http_la_OBJECTS)
write_http_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(write_http_la_CFLAGS) \
	$(CFLAGS) $(write_http_la_LDFLAGS) $(LDFLAGS) -o $@
#am_write_http_la_rpath = -rpath \
#	$(pkglibdir)
write_kafka_la_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	libcmds.la \
	libformat_graphite.la \
	libformat_json.la
am__write_kafka_la_SOURCES_DIST = write_kafka.c utils_crc32.c \
	utils_crc32.h
am_write_kafka_la_OBJECTS =  \
	write_kafka_la-write_kafka.lo \
	write_kafka_la-utils_crc32.lo
write_kafka_la_OBJECTS = $(am_write_kafka_la_OBJECTS)
write_kafka_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_kafka_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am_write_kafka_la_rpath = -rpath \
	$(pkglibdir)
#write_log_la_DEPENDENCIES =  \
#	libformat_graphite.la \
#	libformat_json.la
am__write_log_la_SOURCES_DIST = write_log.c
#am_write_log_la_OBJECTS = write_log.lo
write_log_la_OBJECTS = $(am_write_log_la_OBJECTS)
write_log_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(write_log_la_LDFLAGS) $(LDFLAGS) -o $@
#am_write_log_la_rpath = -rpath \
#	$(pkglibdir)
write_mongodb_la_DEPENDENCIES =
am__write_mongodb_la_SOURCES_DIST = write_mongodb.c
#am_write_mongodb_la_OBJECTS = write_mongodb_la-write_mongodb.lo
write_mongodb_la_OBJECTS = $(am_write_mongodb_la_OBJECTS)
write_mongodb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_mongodb_la_LDFLAGS) $(LDFLAGS) \
	-o $@
#am_write_mongodb_la_rpath = -rpath \
#	$(pkglibdir)
#write_prometheus_la_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_1) \
#	$(am__DEPENDENCIES_1)
am__write_prometheus_la_SOURCES_DIST = write_prometheus.c
#am_write_prometheus_la_OBJECTS = write_prometheus_la-write_prometheus.lo
#nodist_write_prometheus_la_OBJECTS = write_prometheus_la-prometheus.pb-c.lo
write_prometheus_la_OBJECTS = $(am_write_prometheus_la_OBJECTS) \
	$(nodist_write_prometheus_la_OBJECTS)
write_prometheus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_prometheus_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_write_prometheus_la_rpath =  \
#	-rpath $(pkglibdir)
write_redis_la_DEPENDENCIES =
am__write_redis_la_SOURCES_DIST = write_redis.c
#am_write_redis_la_OBJECTS =  \
#	write_redis_la-write_redis.lo
write_redis_la_OBJECTS = $(am_write_redis_la_OBJECTS)
write_redis_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_redis_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_write_redis_la_rpath = -rpath \
#	$(pkglibdir)
write_riemann_la_LIBADD =
am__write_riemann_la_SOURCES_DIST = write_riemann.c \
	write_riemann_threshold.c write_riemann_threshold.h
#am_write_riemann_la_OBJECTS = write_riemann_la-write_riemann.lo \
#	write_riemann_la-write_riemann_threshold.lo
write_riemann_la_OBJECTS = $(am_write_riemann_la_OBJECTS)
write_riemann_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(write_riemann_la_CFLAGS) $(CFLAGS) \
	$(write_riemann_la_LDFLAGS) $(LDFLAGS) -o $@
#am_write_riemann_la_rpath = -rpath \
#	$(pkglibdir)
write_sensu_la_LIBADD =
am__write_sensu_la_SOURCES_DIST = write_sensu.c
#am_write_sensu_la_OBJECTS =  \
#	write_sensu.lo
write_sensu_la_OBJECTS = $(am_write_sensu_la_OBJECTS)
write_sensu_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(write_sensu_la_LDFLAGS) $(LDFLAGS) -o \
	$@
#am_write_sensu_la_rpath = -rpath \
#	$(pkglibdir)
write_tsdb_la_LIBADD =
am__write_tsdb_la_SOURCES_DIST = write_tsdb.c
#am_write_tsdb_la_OBJECTS =  \
#	write_tsdb.lo
write_tsdb_la_OBJECTS = $(am_write_tsdb_la_OBJECTS)
write_tsdb_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(write_tsdb_la_LDFLAGS) $(LDFLAGS) -o $@
#am_write_tsdb_la_rpath = -rpath \
#	$(pkglibdir)
xencpu_la_DEPENDENCIES =
am__xencpu_la_SOURCES_DIST = xencpu.c
#am_xencpu_la_OBJECTS = xencpu_la-xencpu.lo
xencpu_la_OBJECTS = $(am_xencpu_la_OBJECTS)
xencpu_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(xencpu_la_LDFLAGS) $(LDFLAGS) -o $@
#am_xencpu_la_rpath = -rpath $(pkglibdir)
#xmms_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__xmms_la_SOURCES_DIST = xmms.c
#am_xmms_la_OBJECTS = xmms_la-xmms.lo
xmms_la_OBJECTS = $(am_xmms_la_OBJECTS)
xmms_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(xmms_la_CFLAGS) \
	$(CFLAGS) $(xmms_la_LDFLAGS) $(LDFLAGS) -o $@
#am_xmms_la_rpath = -rpath $(pkglibdir)
zfs_arc_la_DEPENDENCIES =
am__zfs_arc_la_SOURCES_DIST = zfs_arc.c
#am_zfs_arc_la_OBJECTS = zfs_arc.lo
zfs_arc_la_OBJECTS = $(am_zfs_arc_la_OBJECTS)
zfs_arc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(zfs_arc_la_LDFLAGS) $(LDFLAGS) -o $@
#am_zfs_arc_la_rpath = -rpath $(pkglibdir)
zone_la_LIBADD =
am__zone_la_SOURCES_DIST = zone.c
#am_zone_la_OBJECTS = zone.lo
zone_la_OBJECTS = $(am_zone_la_OBJECTS)
zone_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(zone_la_LDFLAGS) $(LDFLAGS) -o $@
#am_zone_la_rpath = -rpath $(pkglibdir)
zookeeper_la_LIBADD =
am__zookeeper_la_SOURCES_DIST = zookeeper.c
#am_zookeeper_la_OBJECTS = zookeeper.lo
zookeeper_la_OBJECTS = $(am_zookeeper_la_OBJECTS)
zookeeper_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(zookeeper_la_LDFLAGS) $(LDFLAGS) -o $@
#am_zookeeper_la_rpath = -rpath \
#	$(pkglibdir)
#am__EXEEXT_1 = test_format_json$(EXEEXT)
#am__EXEEXT_2 = test_plugin_ceph$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am_collectd_nagios_OBJECTS =  \
	collectd_nagios-collectd-nagios.$(OBJEXT)
collectd_nagios_OBJECTS = $(am_collectd_nagios_OBJECTS)
collectd_nagios_DEPENDENCIES = libcollectdclient/libcollectdclient.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_collectd_tg_OBJECTS = collectd_tg-collectd-tg.$(OBJEXT)
collectd_tg_OBJECTS = $(am_collectd_tg_OBJECTS)
collectd_tg_DEPENDENCIES = $(am__DEPENDENCIES_1) daemon/libheap.la \
	libcollectdclient/libcollectdclient.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_collectdctl_OBJECTS = collectdctl-collectdctl.$(OBJEXT)
collectdctl_OBJECTS = $(am_collectdctl_OBJECTS)
collectdctl_DEPENDENCIES = libcollectdclient/libcollectdclient.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_collectdmon_OBJECTS = collectdmon.$(OBJEXT)
collectdmon_OBJECTS = $(am_collectdmon_OBJECTS)
collectdmon_LDADD = $(LDADD)
am_test_format_graphite_OBJECTS =  \
	utils_format_graphite_test.$(OBJEXT)
test_format_graphite_OBJECTS = $(am_test_format_graphite_OBJECTS)
test_format_graphite_DEPENDENCIES = libformat_graphite.la \
	daemon/libmetadata.la daemon/libplugin_mock.la
am__test_format_json_SOURCES_DIST = utils_format_json_test.c testing.h
#am_test_format_json_OBJECTS =  \
#	utils_format_json_test.$(OBJEXT)
test_format_json_OBJECTS = $(am_test_format_json_OBJECTS)
#test_format_json_DEPENDENCIES =  \
#	libformat_json.la \
#	daemon/libmetadata.la \
#	daemon/libplugin_mock.la
am__test_plugin_ceph_SOURCES_DIST = ceph_test.c
#am_test_plugin_ceph_OBJECTS =  \
#	test_plugin_ceph-ceph_test.$(OBJEXT)
test_plugin_ceph_OBJECTS = $(am_test_plugin_ceph_OBJECTS)
#test_plugin_ceph_DEPENDENCIES =  \
#	daemon/libplugin_mock.la \
#	$(am__DEPENDENCIES_1)
test_plugin_ceph_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(test_plugin_ceph_LDFLAGS) $(LDFLAGS) \
	-o $@
am_test_utils_cmds_OBJECTS = utils_cmds_test.$(OBJEXT)
test_utils_cmds_OBJECTS = $(am_test_utils_cmds_OBJECTS)
test_utils_cmds_DEPENDENCIES = libcmds.la daemon/libplugin_mock.la
am_test_utils_latency_OBJECTS = utils_latency_test.$(OBJEXT)
test_utils_latency_OBJECTS = $(am_test_utils_latency_OBJECTS)
test_utils_latency_DEPENDENCIES = liblatency.la \
	daemon/libplugin_mock.la
am_test_utils_mount_OBJECTS = utils_mount_test.$(OBJEXT)
test_utils_mount_OBJECTS = $(am_test_utils_mount_OBJECTS)
test_utils_mount_DEPENDENCIES = libmount.la daemon/libplugin_mock.la \
	$(am__DEPENDENCIES_1)
am_test_utils_vl_lookup_OBJECTS = utils_vl_lookup_test.$(OBJEXT)
test_utils_vl_lookup_OBJECTS = $(am_test_utils_vl_lookup_OBJECTS)
test_utils_vl_lookup_DEPENDENCIES = liblookup.la \
	daemon/libplugin_mock.la $(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_0)
am__v_P_ = $(am__v_P_0)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_0)
am__v_GEN_ = $(am__v_GEN_0)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_0)
am__v_at_ = $(am__v_at_0)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/libltdl/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_0)
am__v_CC_ = $(am__v_CC_0)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_0)
am__v_CCLD_ = $(am__v_CCLD_0)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_0)
am__v_CXX_ = $(am__v_CXX_0)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_0)
am__v_CXXLD_ = $(am__v_CXXLD_0)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(aggregation_la_SOURCES) $(amqp_la_SOURCES) \
	$(apache_la_SOURCES) $(apcups_la_SOURCES) \
	$(apple_sensors_la_SOURCES) $(aquaero_la_SOURCES) \
	$(ascent_la_SOURCES) $(barometer_la_SOURCES) \
	$(battery_la_SOURCES) $(bind_la_SOURCES) $(ceph_la_SOURCES) \
	$(cgroups_la_SOURCES) $(chrony_la_SOURCES) \
	$(conntrack_la_SOURCES) $(contextswitch_la_SOURCES) \
	$(cpu_la_SOURCES) $(cpufreq_la_SOURCES) $(cpusleep_la_SOURCES) \
	$(csv_la_SOURCES) $(curl_la_SOURCES) $(curl_json_la_SOURCES) \
	$(curl_xml_la_SOURCES) $(dbi_la_SOURCES) $(df_la_SOURCES) \
	$(disk_la_SOURCES) $(dns_la_SOURCES) $(dpdkstat_la_SOURCES) \
	$(drbd_la_SOURCES) $(email_la_SOURCES) $(entropy_la_SOURCES) \
	$(ethstat_la_SOURCES) $(exec_la_SOURCES) $(fhcount_la_SOURCES) \
	$(filecount_la_SOURCES) $(fscache_la_SOURCES) \
	$(gmond_la_SOURCES) $(gps_la_SOURCES) $(grpc_la_SOURCES) \
	$(nodist_grpc_la_SOURCES) $(hddtemp_la_SOURCES) \
	$(hugepages_la_SOURCES) $(intel_rdt_la_SOURCES) \
	$(interface_la_SOURCES) $(ipc_la_SOURCES) $(ipmi_la_SOURCES) \
	$(iptables_la_SOURCES) $(ipvs_la_SOURCES) $(irq_la_SOURCES) \
	$(iwinfo_la_SOURCES) $(java_la_SOURCES) $(libcmds_la_SOURCES) \
	$(libformat_graphite_la_SOURCES) $(libformat_json_la_SOURCES) \
	$(liblatency_la_SOURCES) $(liblookup_la_SOURCES) \
	$(libmount_la_SOURCES) $(load_la_SOURCES) \
	$(log_logstash_la_SOURCES) $(logfile_la_SOURCES) \
	$(lpar_la_SOURCES) $(lua_la_SOURCES) $(lvm_la_SOURCES) \
	$(madwifi_la_SOURCES) $(match_empty_counter_la_SOURCES) \
	$(match_hashed_la_SOURCES) $(match_regex_la_SOURCES) \
	$(match_timediff_la_SOURCES) $(match_value_la_SOURCES) \
	$(mbmon_la_SOURCES) $(md_la_SOURCES) $(memcachec_la_SOURCES) \
	$(memcached_la_SOURCES) $(memory_la_SOURCES) $(mic_la_SOURCES) \
	$(modbus_la_SOURCES) $(mqtt_la_SOURCES) \
	$(multimeter_la_SOURCES) $(mysql_la_SOURCES) \
	$(netapp_la_SOURCES) $(netlink_la_SOURCES) \
	$(network_la_SOURCES) $(nfs_la_SOURCES) $(nginx_la_SOURCES) \
	$(notify_desktop_la_SOURCES) $(notify_email_la_SOURCES) \
	$(notify_nagios_la_SOURCES) $(ntpd_la_SOURCES) \
	$(numa_la_SOURCES) $(nut_la_SOURCES) $(olsrd_la_SOURCES) \
	$(onewire_la_SOURCES) $(openldap_la_SOURCES) \
	$(openvpn_la_SOURCES) $(oracle_la_SOURCES) $(perl_la_SOURCES) \
	$(pf_la_SOURCES) $(pinba_la_SOURCES) \
	$(nodist_pinba_la_SOURCES) $(ping_la_SOURCES) \
	$(postgresql_la_SOURCES) $(powerdns_la_SOURCES) \
	$(processes_la_SOURCES) $(protocols_la_SOURCES) \
	$(python_la_SOURCES) $(redis_la_SOURCES) \
	$(routeros_la_SOURCES) $(rrdcached_la_SOURCES) \
	$(rrdtool_la_SOURCES) $(sensors_la_SOURCES) \
	$(serial_la_SOURCES) $(sigrok_la_SOURCES) $(smart_la_SOURCES) \
	$(snmp_la_SOURCES) $(statsd_la_SOURCES) $(swap_la_SOURCES) \
	$(syslog_la_SOURCES) $(table_la_SOURCES) $(tail_la_SOURCES) \
	$(tail_csv_la_SOURCES) $(tape_la_SOURCES) \
	$(target_notification_la_SOURCES) $(target_replace_la_SOURCES) \
	$(target_scale_la_SOURCES) $(target_set_la_SOURCES) \
	$(target_v5upgrade_la_SOURCES) $(tcpconns_la_SOURCES) \
	$(teamspeak2_la_SOURCES) $(ted_la_SOURCES) \
	$(thermal_la_SOURCES) $(threshold_la_SOURCES) \
	$(tokyotyrant_la_SOURCES) $(turbostat_la_SOURCES) \
	$(unixsock_la_SOURCES) $(uptime_la_SOURCES) \
	$(users_la_SOURCES) $(uuid_la_SOURCES) $(varnish_la_SOURCES) \
	$(virt_la_SOURCES) $(vmem_la_SOURCES) $(vserver_la_SOURCES) \
	$(wireless_la_SOURCES) $(write_graphite_la_SOURCES) \
	$(write_http_la_SOURCES) $(write_kafka_la_SOURCES) \
	$(write_log_la_SOURCES) $(write_mongodb_la_SOURCES) \
	$(write_prometheus_la_SOURCES) \
	$(nodist_write_prometheus_la_SOURCES) \
	$(write_redis_la_SOURCES) $(write_riemann_la_SOURCES) \
	$(write_sensu_la_SOURCES) $(write_tsdb_la_SOURCES) \
	$(xencpu_la_SOURCES) $(xmms_la_SOURCES) $(zfs_arc_la_SOURCES) \
	$(zone_la_SOURCES) $(zookeeper_la_SOURCES) \
	$(collectd_nagios_SOURCES) $(collectd_tg_SOURCES) \
	$(collectdctl_SOURCES) $(collectdmon_SOURCES) \
	$(test_format_graphite_SOURCES) $(test_format_json_SOURCES) \
	$(test_plugin_ceph_SOURCES) $(test_utils_cmds_SOURCES) \
	$(test_utils_latency_SOURCES) $(test_utils_mount_SOURCES) \
	$(test_utils_vl_lookup_SOURCES)
DIST_SOURCES = $(am__aggregation_la_SOURCES_DIST) \
	$(am__amqp_la_SOURCES_DIST) $(am__apache_la_SOURCES_DIST) \
	$(am__apcups_la_SOURCES_DIST) \
	$(am__apple_sensors_la_SOURCES_DIST) \
	$(am__aquaero_la_SOURCES_DIST) $(am__ascent_la_SOURCES_DIST) \
	$(am__barometer_la_SOURCES_DIST) \
	$(am__battery_la_SOURCES_DIST) $(am__bind_la_SOURCES_DIST) \
	$(am__ceph_la_SOURCES_DIST) $(am__cgroups_la_SOURCES_DIST) \
	$(am__chrony_la_SOURCES_DIST) $(am__conntrack_la_SOURCES_DIST) \
	$(am__contextswitch_la_SOURCES_DIST) \
	$(am__cpu_la_SOURCES_DIST) $(am__cpufreq_la_SOURCES_DIST) \
	$(am__cpusleep_la_SOURCES_DIST) $(am__csv_la_SOURCES_DIST) \
	$(am__curl_la_SOURCES_DIST) $(am__curl_json_la_SOURCES_DIST) \
	$(am__curl_xml_la_SOURCES_DIST) $(am__dbi_la_SOURCES_DIST) \
	$(am__df_la_SOURCES_DIST) $(am__disk_la_SOURCES_DIST) \
	$(am__dns_la_SOURCES_DIST) $(am__dpdkstat_la_SOURCES_DIST) \
	$(am__drbd_la_SOURCES_DIST) $(am__email_la_SOURCES_DIST) \
	$(am__entropy_la_SOURCES_DIST) $(am__ethstat_la_SOURCES_DIST) \
	$(am__exec_la_SOURCES_DIST) $(am__fhcount_la_SOURCES_DIST) \
	$(am__filecount_la_SOURCES_DIST) \
	$(am__fscache_la_SOURCES_DIST) $(am__gmond_la_SOURCES_DIST) \
	$(am__gps_la_SOURCES_DIST) $(am__grpc_la_SOURCES_DIST) \
	$(am__hddtemp_la_SOURCES_DIST) \
	$(am__hugepages_la_SOURCES_DIST) \
	$(am__intel_rdt_la_SOURCES_DIST) \
	$(am__interface_la_SOURCES_DIST) $(am__ipc_la_SOURCES_DIST) \
	$(am__ipmi_la_SOURCES_DIST) $(am__iptables_la_SOURCES_DIST) \
	$(am__ipvs_la_SOURCES_DIST) $(am__irq_la_SOURCES_DIST) \
	$(am__iwinfo_la_SOURCES_DIST) $(am__java_la_SOURCES_DIST) \
	$(libcmds_la_SOURCES) $(libformat_graphite_la_SOURCES) \
	$(libformat_json_la_SOURCES) $(liblatency_la_SOURCES) \
	$(liblookup_la_SOURCES) $(libmount_la_SOURCES) \
	$(am__load_la_SOURCES_DIST) \
	$(am__log_logstash_la_SOURCES_DIST) \
	$(am__logfile_la_SOURCES_DIST) $(am__lpar_la_SOURCES_DIST) \
	$(am__lua_la_SOURCES_DIST) $(am__lvm_la_SOURCES_DIST) \
	$(am__madwifi_la_SOURCES_DIST) \
	$(am__match_empty_counter_la_SOURCES_DIST) \
	$(am__match_hashed_la_SOURCES_DIST) \
	$(am__match_regex_la_SOURCES_DIST) \
	$(am__match_timediff_la_SOURCES_DIST) \
	$(am__match_value_la_SOURCES_DIST) \
	$(am__mbmon_la_SOURCES_DIST) $(am__md_la_SOURCES_DIST) \
	$(am__memcachec_la_SOURCES_DIST) \
	$(am__memcached_la_SOURCES_DIST) $(am__memory_la_SOURCES_DIST) \
	$(am__mic_la_SOURCES_DIST) $(am__modbus_la_SOURCES_DIST) \
	$(am__mqtt_la_SOURCES_DIST) $(am__multimeter_la_SOURCES_DIST) \
	$(am__mysql_la_SOURCES_DIST) $(am__netapp_la_SOURCES_DIST) \
	$(am__netlink_la_SOURCES_DIST) $(am__network_la_SOURCES_DIST) \
	$(am__nfs_la_SOURCES_DIST) $(am__nginx_la_SOURCES_DIST) \
	$(am__notify_desktop_la_SOURCES_DIST) \
	$(am__notify_email_la_SOURCES_DIST) \
	$(am__notify_nagios_la_SOURCES_DIST) \
	$(am__ntpd_la_SOURCES_DIST) $(am__numa_la_SOURCES_DIST) \
	$(am__nut_la_SOURCES_DIST) $(am__olsrd_la_SOURCES_DIST) \
	$(am__onewire_la_SOURCES_DIST) $(am__openldap_la_SOURCES_DIST) \
	$(am__openvpn_la_SOURCES_DIST) $(am__oracle_la_SOURCES_DIST) \
	$(am__perl_la_SOURCES_DIST) $(am__pf_la_SOURCES_DIST) \
	$(am__pinba_la_SOURCES_DIST) $(am__ping_la_SOURCES_DIST) \
	$(am__postgresql_la_SOURCES_DIST) \
	$(am__powerdns_la_SOURCES_DIST) \
	$(am__processes_la_SOURCES_DIST) \
	$(am__protocols_la_SOURCES_DIST) $(am__python_la_SOURCES_DIST) \
	$(am__redis_la_SOURCES_DIST) $(am__routeros_la_SOURCES_DIST) \
	$(am__rrdcached_la_SOURCES_DIST) \
	$(am__rrdtool_la_SOURCES_DIST) $(am__sensors_la_SOURCES_DIST) \
	$(am__serial_la_SOURCES_DIST) $(am__sigrok_la_SOURCES_DIST) \
	$(am__smart_la_SOURCES_DIST) $(am__snmp_la_SOURCES_DIST) \
	$(am__statsd_la_SOURCES_DIST) $(am__swap_la_SOURCES_DIST) \
	$(am__syslog_la_SOURCES_DIST) $(am__table_la_SOURCES_DIST) \
	$(am__tail_la_SOURCES_DIST) $(am__tail_csv_la_SOURCES_DIST) \
	$(am__tape_la_SOURCES_DIST) \
	$(am__target_notification_la_SOURCES_DIST) \
	$(am__target_replace_la_SOURCES_DIST) \
	$(am__target_scale_la_SOURCES_DIST) \
	$(am__target_set_la_SOURCES_DIST) \
	$(am__target_v5upgrade_la_SOURCES_DIST) \
	$(am__tcpconns_la_SOURCES_DIST) \
	$(am__teamspeak2_la_SOURCES_DIST) $(am__ted_la_SOURCES_DIST) \
	$(am__thermal_la_SOURCES_DIST) \
	$(am__threshold_la_SOURCES_DIST) \
	$(am__tokyotyrant_la_SOURCES_DIST) \
	$(am__turbostat_la_SOURCES_DIST) \
	$(am__unixsock_la_SOURCES_DIST) $(am__uptime_la_SOURCES_DIST) \
	$(am__users_la_SOURCES_DIST) $(am__uuid_la_SOURCES_DIST) \
	$(am__varnish_la_SOURCES_DIST) $(am__virt_la_SOURCES_DIST) \
	$(am__vmem_la_SOURCES_DIST) $(am__vserver_la_SOURCES_DIST) \
	$(am__wireless_la_SOURCES_DIST) \
	$(am__write_graphite_la_SOURCES_DIST) \
	$(am__write_http_la_SOURCES_DIST) \
	$(am__write_kafka_la_SOURCES_DIST) \
	$(am__write_log_la_SOURCES_DIST) \
	$(am__write_mongodb_la_SOURCES_DIST) \
	$(am__write_prometheus_la_SOURCES_DIST) \
	$(am__write_redis_la_SOURCES_DIST) \
	$(am__write_riemann_la_SOURCES_DIST) \
	$(am__write_sensu_la_SOURCES_DIST) \
	$(am__write_tsdb_la_SOURCES_DIST) \
	$(am__xencpu_la_SOURCES_DIST) $(am__xmms_la_SOURCES_DIST) \
	$(am__zfs_arc_la_SOURCES_DIST) $(am__zone_la_SOURCES_DIST) \
	$(am__zookeeper_la_SOURCES_DIST) $(collectd_nagios_SOURCES) \
	$(collectd_tg_SOURCES) $(collectdctl_SOURCES) \
	$(collectdmon_SOURCES) $(test_format_graphite_SOURCES) \
	$(am__test_format_json_SOURCES_DIST) \
	$(am__test_plugin_ceph_SOURCES_DIST) \
	$(test_utils_cmds_SOURCES) $(test_utils_latency_SOURCES) \
	$(test_utils_mount_SOURCES) $(test_utils_vl_lookup_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
man5dir = $(mandir)/man5
NROFF = nroff
MANS = $(dist_man_MANS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/libltdl/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/libltdl/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = libcollectdclient liboconfig daemon
am__DIST_COMMON = $(dist_man_MANS) $(srcdir)/Makefile.in \
	$(srcdir)/collectd.conf.in $(srcdir)/config.h.in \
	$(top_srcdir)/libltdl/config/depcomp \
	$(top_srcdir)/libltdl/config/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_CFLAGS = -Wall
AM_CXXFLAGS = -Wall
AM_DEFAULT_VERBOSITY = 0
AR = mipsel-openwrt-linux-musl-gcc-ar
ARGZ_H = argz.h
AUTOCONF = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/missing autoconf
AUTOHEADER = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/missing autoheader
AUTOMAKE = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/missing automake-1.15
AWK = gawk
BUILD_WITH_LIBAQUAERO5_CFLAGS = 
BUILD_WITH_LIBAQUAERO5_LDFLAGS = 
BUILD_WITH_LIBATASMART_CPPFLAGS = 
BUILD_WITH_LIBATASMART_LDFLAGS = 
BUILD_WITH_LIBATASMART_LIBS = 
BUILD_WITH_LIBCURL_CFLAGS = 
BUILD_WITH_LIBCURL_LIBS = -lcurl -lpolarssl
BUILD_WITH_LIBDBI_CPPFLAGS = 
BUILD_WITH_LIBDBI_LDFLAGS = 
BUILD_WITH_LIBDBI_LIBS = 
BUILD_WITH_LIBGPS_CFLAGS = 
BUILD_WITH_LIBGPS_LDFLAGS = 
BUILD_WITH_LIBGPS_LIBS = 
BUILD_WITH_LIBGRPCPP_CPPFLAGS = -std=c++11  
BUILD_WITH_LIBGRPCPP_LDFLAGS = 
BUILD_WITH_LIBGRPCPP_LIBS = 
BUILD_WITH_LIBHAL_CFLAGS = 
BUILD_WITH_LIBHAL_LIBS = 
BUILD_WITH_LIBHIREDIS_CPPFLAGS = 
BUILD_WITH_LIBHIREDIS_LDFLAGS = 
BUILD_WITH_LIBIPTC_CPPFLAGS = -I/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/include
BUILD_WITH_LIBIPTC_LDFLAGS = -L/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib -lip4tc -lip6tc
BUILD_WITH_LIBLDAP_CPPFLAGS = 
BUILD_WITH_LIBLDAP_LDFLAGS = 
BUILD_WITH_LIBLUA_CFLAGS = -I/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/include
BUILD_WITH_LIBLUA_LIBS = -L/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib -llua -lm
BUILD_WITH_LIBLVM2APP_CPPFLAGS = 
BUILD_WITH_LIBLVM2APP_LDFLAGS = 
BUILD_WITH_LIBLVM2APP_LIBS = 
BUILD_WITH_LIBMEMCACHED_CPPFLAGS = 
BUILD_WITH_LIBMEMCACHED_LDFLAGS = 
BUILD_WITH_LIBMEMCACHED_LIBS = 
BUILD_WITH_LIBMICROHTTPD_CPPFLAGS =  
BUILD_WITH_LIBMICROHTTPD_LDFLAGS = 
BUILD_WITH_LIBMICROHTTPD_LIBS = -lmicrohttpd
BUILD_WITH_LIBMNL_CFLAGS = 
BUILD_WITH_LIBMNL_LIBS = 
BUILD_WITH_LIBMODBUS_CFLAGS = 
BUILD_WITH_LIBMODBUS_LIBS = 
BUILD_WITH_LIBMONGOC_CPPFLAGS = 
BUILD_WITH_LIBMONGOC_LDFLAGS = 
BUILD_WITH_LIBMOSQUITTO_CPPFLAGS = 
BUILD_WITH_LIBMOSQUITTO_LDFLAGS = 
BUILD_WITH_LIBMOSQUITTO_LIBS = 
BUILD_WITH_LIBMYSQL_CFLAGS = 
BUILD_WITH_LIBMYSQL_LIBS = 
BUILD_WITH_LIBNETSNMP_CPPFLAGS = 
BUILD_WITH_LIBNETSNMP_LDFLAGS = 
BUILD_WITH_LIBNETSNMP_LIBS = 
BUILD_WITH_LIBOPING_CPPFLAGS = 
BUILD_WITH_LIBOPING_LDFLAGS = 
BUILD_WITH_LIBOWCAPI_CPPFLAGS = 
BUILD_WITH_LIBOWCAPI_LDFLAGS = 
BUILD_WITH_LIBOWCAPI_LIBS = 
BUILD_WITH_LIBPQOS_CPPFLAGS = 
BUILD_WITH_LIBPQOS_LDFLAGS = 
BUILD_WITH_LIBPQOS_LIBS = 
BUILD_WITH_LIBPQ_CPPFLAGS = 
BUILD_WITH_LIBPQ_LDFLAGS = 
BUILD_WITH_LIBPROTOBUF_CPPFLAGS =  
BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS =  
BUILD_WITH_LIBPROTOBUF_C_LDFLAGS = 
BUILD_WITH_LIBPROTOBUF_C_LIBS = 
BUILD_WITH_LIBPROTOBUF_LDFLAGS = 
BUILD_WITH_LIBPROTOBUF_LIBS = 
BUILD_WITH_LIBRABBITMQ_CPPFLAGS = 
BUILD_WITH_LIBRABBITMQ_LDFLAGS = 
BUILD_WITH_LIBRABBITMQ_LIBS = 
BUILD_WITH_LIBRDKAFKA_CPPFLAGS = 
BUILD_WITH_LIBRDKAFKA_LDFLAGS = 
BUILD_WITH_LIBRDKAFKA_LIBS = -lrdkafka
BUILD_WITH_LIBROUTEROS_CPPFLAGS = 
BUILD_WITH_LIBROUTEROS_LDFLAGS = 
BUILD_WITH_LIBRRD_CFLAGS = 
BUILD_WITH_LIBRRD_LDFLAGS = 
BUILD_WITH_LIBRRD_LIBS = 
BUILD_WITH_LIBSENSORS_CFLAGS = 
BUILD_WITH_LIBSENSORS_LDFLAGS = 
BUILD_WITH_LIBSTATGRAB_CFLAGS = 
BUILD_WITH_LIBSTATGRAB_LDFLAGS = 
BUILD_WITH_LIBTOKYOTYRANT_CPPFLAGS = 
BUILD_WITH_LIBTOKYOTYRANT_LDFLAGS = 
BUILD_WITH_LIBTOKYOTYRANT_LIBS = 
BUILD_WITH_LIBUDEV_CFLAGS = 
BUILD_WITH_LIBUDEV_LDFLAGS = 
BUILD_WITH_LIBUDEV_LIBS = 
BUILD_WITH_LIBUPSCLIENT_CFLAGS = 
BUILD_WITH_LIBUPSCLIENT_LIBS = 
BUILD_WITH_LIBVARNISH_CFLAGS = 
BUILD_WITH_LIBVARNISH_LIBS = 
BUILD_WITH_LIBVIRT_CFLAGS = 
BUILD_WITH_LIBVIRT_LIBS = 
BUILD_WITH_LIBXML2_CFLAGS = 
BUILD_WITH_LIBXML2_LIBS = 
BUILD_WITH_LIBXMMS_CFLAGS = 
BUILD_WITH_LIBXMMS_LIBS = 
BUILD_WITH_LIBYAJL_CPPFLAGS = 
BUILD_WITH_LIBYAJL_LDFLAGS = 
BUILD_WITH_LIBYAJL_LIBS = 
BUILD_WITH_MIC_CPPFLAGS = 
BUILD_WITH_MIC_LDADD = 
BUILD_WITH_MIC_LIBPATH = 
BUILD_WITH_OPENIPMI_CFLAGS = 
BUILD_WITH_OPENIPMI_LIBS = 
BUILD_WITH_ORACLE_CPPFLAGS = 
BUILD_WITH_ORACLE_LIBS = 
CC = mipsel-openwrt-linux-musl-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kec -mdsp -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -iremap /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1:collectd-5.7.1 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro  -fpic
CPP = mipsel-openwrt-linux-musl-gcc -E
CPPFLAGS = -I/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/include -I/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/include -I/home/tiger/Downloads/openwrt/staging_dir/toolchain-mipsel_24kec+dsp_gcc-5.3.0_musl-1.1.16/usr/include -I/home/tiger/Downloads/openwrt/staging_dir/toolchain-mipsel_24kec+dsp_gcc-5.3.0_musl-1.1.16/include/fortify -I/home/tiger/Downloads/openwrt/staging_dir/toolchain-mipsel_24kec+dsp_gcc-5.3.0_musl-1.1.16/include 
CXX = mipsel-openwrt-linux-musl-g++
CXXCPP = mipsel-openwrt-linux-musl-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Os -pipe -mno-branch-likely -mips32r2 -mtune=24kec -mdsp -fno-caller-saves -fno-plt -fhonour-copts -Wno-error=unused-but-set-variable -Wno-error=unused-result -msoft-float -iremap /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1:collectd-5.7.1 -Wformat -Werror=format-security -fstack-protector -D_FORTIFY_SOURCE=1 -Wl,-z,now -Wl,-z,relro 
CYGPATH_W = echo
DEFAULT_LOG_LEVEL = info
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /home/tiger/Downloads/openwrt/staging_dir/host/bin/grep -E
EXEEXT = 
FGREP = /home/tiger/Downloads/openwrt/staging_dir/host/bin/grep -F
GANGLIA_CPPFLAGS = 
GANGLIA_LDFLAGS = 
GANGLIA_LIBS = -lganglia
GCRYPT_CPPFLAGS = 
GCRYPT_LDFLAGS = 
GCRYPT_LIBS = 
GREP = /home/tiger/Downloads/openwrt/staging_dir/host/bin/grep
GRPCPP_CFLAGS = 
GRPCPP_LIBS = 
GRPC_CPP_PLUGIN = 
HAL_CFLAGS = 
HAL_LIBS = 
INCLTDL = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAR = /usr/lib/jvm/java-8-oracle/bin/jar
JAVAC = /usr/lib/jvm/java-8-oracle/bin/javac
JAVA_CFLAGS = 
JAVA_CPPFLAGS =  -I/usr/lib/jvm/java-8-oracle/include -I/usr/lib/jvm/java-8-oracle/include/linux
JAVA_LDFLAGS =  -L/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server -Wl,-rpath -Wl,/usr/lib/jvm/java-8-oracle/jre/lib/amd64/server
JAVA_LIBS = 
KERNEL_CFLAGS = -I/home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/linux-ramips_rt305x/linux-4.4.14/include
KERNEL_DIR = /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/linux-ramips_rt305x/linux-4.4.14
LCC_VERSION_EXTRA = git
LCC_VERSION_MAJOR = 5
LCC_VERSION_MINOR = 7
LCC_VERSION_PATCH = 1
LCC_VERSION_STRING = 5.7.1
LD = mipsel-openwrt-linux-musl-ld
LDFLAGS = -L/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib -L/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/lib -L/home/tiger/Downloads/openwrt/staging_dir/toolchain-mipsel_24kec+dsp_gcc-5.3.0_musl-1.1.16/usr/lib -L/home/tiger/Downloads/openwrt/staging_dir/toolchain-mipsel_24kec+dsp_gcc-5.3.0_musl-1.1.16/lib -znow -zrelro  -lm -lz
LEX = flex
LEXLIB = 
LEX_OUTPUT_ROOT = lex.yy
LIBADD_DL =  
LIBADD_DLD_LINK = 
LIBADD_DLOPEN = 
LIBADD_SHL_LOAD = 
LIBDPDK_CPPFLAGS = -I/usr/include/dpdk
LIBDPDK_LDFLAGS = 
LIBLTDL = -lltdl
LIBLUA_PKG_CONFIG_NAME = 
LIBNETAPP_CPPFLAGS = 
LIBNETAPP_LDFLAGS = 
LIBNETAPP_LIBS = 
LIBNOTIFY_CFLAGS = 
LIBNOTIFY_LIBS = 
LIBOBJS = 
LIBPYTHON_CPPFLAGS = -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7
LIBPYTHON_LDFLAGS = -L/usr/lib/python2.7/config-x86_64-linux-gnu -L/usr/lib -lpthread -ldl  -lutil -lm  -lpython2.7 -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions
LIBPYTHON_LIBS = -lpthread -ldl  -lutil -lm  -lpython2.7
LIBRIEMANN_CLIENT_CFLAGS = 
LIBRIEMANN_CLIENT_LIBS = 
LIBS = 
LIBSIGROK_CFLAGS = 
LIBSIGROK_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXENCTL_CPPFLAGS = 
LIBXENCTL_LDFLAGS = 
LIPO = 
LN_S = ln -s
LOAD_PLUGIN_CSV = ##
LOAD_PLUGIN_LOGFILE = ##
LOAD_PLUGIN_LOG_LOGSTASH = ##
LOAD_PLUGIN_NETWORK = ##
LOAD_PLUGIN_RRDTOOL = ##
LOAD_PLUGIN_SYSLOG = ##
LTDLDEPS = 
LTDLINCL = 
LTDLOPEN = libltdl
LTLIBOBJS = 
LT_CONFIG_H = src/config.h
LT_DLLOADERS =  libltdl/dlopen.la
LT_DLPREOPEN = -dlpreopen libltdl/dlopen.la 
LUA_CFLAGS = -I/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/include
LUA_LIBS = -L/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib -llua -lm
MAKEINFO = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/missing makeinfo
MANIFEST_TOOL = :
MICROHTTPD_CFLAGS = 
MICROHTTPD_LIBS = -lmicrohttpd
MKDIR_P = /bin/mkdir -p
NM = mipsel-openwrt-linux-musl-gcc-nm
NMEDIT = 
OBJDUMP = mipsel-openwrt-linux-musl-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = collectd
PACKAGE_BUGREPORT = 
PACKAGE_NAME = collectd
PACKAGE_STRING = collectd 5.7.1.git
PACKAGE_TARNAME = collectd
PACKAGE_URL = 
PACKAGE_VERSION = 5.7.1.git
PATH_SEPARATOR = :
PERL = /home/tiger/Downloads/openwrt/staging_dir/host/bin/perl
PERL_BINDINGS = 
PERL_BINDINGS_OPTIONS = PREFIX=/usr
PERL_CFLAGS =  -I/usr/lib/perl/5.18/CORE 
PERL_LIBS = -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.18/CORE -lperl -ldl -lm -lpthread -lc -lcrypt
PKG_CONFIG = /home/tiger/Downloads/openwrt/staging_dir/host/bin/pkg-config
PKG_CONFIG_LIBDIR = /home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib/pkgconfig:/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/share/pkgconfig
PKG_CONFIG_PATH = /home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/lib/pkgconfig:/home/tiger/Downloads/openwrt/staging_dir/target-mipsel_24kec+dsp_musl-1.1.16/usr/share/pkgconfig
PROTOBUF_CFLAGS = 
PROTOBUF_C_CFLAGS = 
PROTOBUF_C_LIBS = 
PROTOBUF_LIBS = 
PROTOC = 
PROTOC_C = 
PTHREAD_LIBS = -lpthread 
PYTHON_CONFIG = /usr/bin/python2-config
RANLIB = mipsel-openwrt-linux-musl-gcc-ranlib
RRD_CFLAGS = 
RRD_LIBS = 
SED = /home/tiger/Downloads/openwrt/staging_dir/host/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = mipsel-openwrt-linux-musl-strip
VALGRIND = 
VERSION = 5.7.1.git
YACC = bison -y
YFLAGS = 
abs_builddir = /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/src
abs_srcdir = /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/src
abs_top_builddir = /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1
abs_top_srcdir = /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = /usr/bin
build = x86_64-pc-linux-gnu
build_alias = x86_64-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = mipsel-openwrt-linux-gnu
host_alias = mipsel-openwrt-linux
host_cpu = mipsel
host_os = linux-gnu
host_vendor = openwrt
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = /usr/info
install_sh = ${SHELL} /home/tiger/Downloads/openwrt/build_dir/target-mipsel_24kec+dsp_musl-1.1.16/collectd-5.7.1/libltdl/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = /usr/lib
localedir = ${datarootdir}/locale
localstatedir = /var
ltdl_LIBOBJS =  argz.o
ltdl_LTLIBOBJS =  argz.lo
mandir = /usr/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgconfigdir = ${exec_prefix}/lib/pkgconfig
prefix = /usr
program_transform_name = s&$$&&;s&^&&
psdir = ${docdir}
sbindir = /usr/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libltdl
sys_symbol_underscore = no
sysconfdir = /etc
target_alias = mipsel-openwrt-linux
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = libcollectdclient $(am__append_1) daemon
PLUGIN_LDFLAGS = -module -avoid-version -export-symbols-regex '\<module_register\>'
AM_CPPFLAGS = -I$(srcdir)/daemon -DPREFIX='"${prefix}"' \
	-DCONFIGFILE='"${sysconfdir}/${PACKAGE_NAME}.conf"' \
	-DLOCALSTATEDIR='"${localstatedir}"' \
	-DPKGLOCALSTATEDIR='"${localstatedir}/lib/${PACKAGE_NAME}"' \
	$(am__append_2) -DPLUGINDIR='"${pkglibdir}"' \
	-DPKGDATADIR='"${pkgdatadir}"'
LOG_COMPILER = env VALGRIND="" $(abs_top_srcdir)/testwrapper.sh
V_PROTOC = $(v_protoc_0)
v_protoc_ = $(v_protoc_0)
v_protoc_0 = @echo "  PROTOC  " $@;
noinst_LTLIBRARIES = libformat_graphite.la libformat_json.la \
	liblatency.la libcmds.la liblookup.la libmount.la
libformat_graphite_la_SOURCES = utils_format_graphite.c utils_format_graphite.h
libformat_graphite_la_CPPFLAGS = $(AM_CPPFLAGS)
libformat_graphite_la_LDFLAGS = $(AM_LDFLAGS)
test_format_graphite_SOURCES = utils_format_graphite_test.c testing.h
test_format_graphite_LDADD = libformat_graphite.la daemon/libmetadata.la daemon/libplugin_mock.la -lm
libformat_json_la_SOURCES = utils_format_json.c utils_format_json.h
libformat_json_la_CPPFLAGS = $(AM_CPPFLAGS) $(am__append_3)
libformat_json_la_LDFLAGS = $(AM_LDFLAGS) $(am__append_4)
libformat_json_la_LIBADD = $(am__append_5)
#test_format_json_SOURCES = utils_format_json_test.c testing.h
#test_format_json_LDADD = libformat_json.la daemon/libmetadata.la daemon/libplugin_mock.la -lm
liblatency_la_SOURCES = utils_latency.c utils_latency.h utils_latency_config.c utils_latency_config.h
liblatency_la_LIBADD = daemon/libcommon.la -lm
test_utils_latency_SOURCES = utils_latency_test.c testing.h
test_utils_latency_LDADD = liblatency.la daemon/libplugin_mock.la -lm
libcmds_la_SOURCES = utils_cmds.c utils_cmds.h \
                     utils_cmd_flush.c utils_cmd_flush.h \
                     utils_cmd_getthreshold.c utils_cmd_getthreshold.h \
                     utils_cmd_getval.c utils_cmd_getval.h \
                     utils_cmd_listval.c utils_cmd_listval.h \
                     utils_cmd_putnotif.c utils_cmd_putnotif.h \
                     utils_cmd_putval.c utils_cmd_putval.h \
                     utils_parse_option.c utils_parse_option.h

libcmds_la_LIBADD = daemon/libcommon.la daemon/libmetadata.la -lm
test_utils_cmds_SOURCES = utils_cmds_test.c testing.h
test_utils_cmds_LDADD = libcmds.la \
                        daemon/libplugin_mock.la

liblookup_la_SOURCES = utils_vl_lookup.c utils_vl_lookup.h
liblookup_la_LIBADD = daemon/libavltree.la
test_utils_vl_lookup_SOURCES = utils_vl_lookup_test.c testing.h
test_utils_vl_lookup_LDADD = liblookup.la daemon/libplugin_mock.la \
	$(am__append_8)
libmount_la_SOURCES = utils_mount.c utils_mount.h
test_utils_mount_SOURCES = utils_mount_test.c testing.h
test_utils_mount_LDADD = libmount.la daemon/libplugin_mock.la \
	$(am__append_9)
collectdmon_SOURCES = collectdmon.c
collectd_nagios_SOURCES = collectd-nagios.c
collectd_nagios_CPPFLAGS = $(AM_CPPFLAGS) \
	-I$(top_srcdir)/src/libcollectdclient/collectd \
	-I$(top_builddir)/src/libcollectdclient/collectd

collectd_nagios_LDADD = libcollectdclient/libcollectdclient.la \
	$(am__append_10) $(am__append_11)
collectdctl_SOURCES = collectdctl.c
collectdctl_CPPFLAGS = $(AM_CPPFLAGS) \
	-I$(top_srcdir)/src/libcollectdclient/collectd \
	-I$(top_builddir)/src/libcollectdclient/collectd

collectdctl_LDADD = libcollectdclient/libcollectdclient.la \
	$(am__append_12) $(am__append_13)
collectd_tg_SOURCES = collectd-tg.c
collectd_tg_CPPFLAGS = $(AM_CPPFLAGS) \
	-I$(top_srcdir)/src/libcollectdclient/collectd \
	-I$(top_builddir)/src/libcollectdclient/collectd

collectd_tg_LDADD = $(PTHREAD_LIBS) daemon/libheap.la \
	libcollectdclient/libcollectdclient.la $(am__append_14) \
	$(am__append_15) $(am__append_16)
pkglib_LTLIBRARIES = $(am__append_19) $(am__append_20) \
	$(am__append_21) $(am__append_22) $(am__append_24) \
	$(am__append_25) $(am__append_26) $(am__append_27) \
	$(am__append_28) $(am__append_30) $(am__append_31) \
	$(am__append_32) $(am__append_33) $(am__append_34) \
	$(am__append_35) $(am__append_37) $(am__append_43) \
	$(am__append_44) $(am__append_45) $(am__append_46) \
	$(am__append_47) $(am__append_48) $(am__append_49) \
	$(am__append_50) $(am__append_51) $(am__append_62) \
	$(am__append_63) $(am__append_64) $(am__append_65) \
	$(am__append_66) $(am__append_67) $(am__append_68) \
	$(am__append_69) $(am__append_70) $(am__append_71) \
	$(am__append_72) $(am__append_73) $(am__append_74) \
	$(am__append_76) $(am__append_77) $(am__append_83) \
	$(am__append_84) $(am__append_85) $(am__append_86) \
	$(am__append_88) $(am__append_89) $(am__append_90) \
	$(am__append_91) $(am__append_95) $(am__append_96) \
	$(am__append_97) $(am__append_98) $(am__append_99) \
	$(am__append_100) $(am__append_101) $(am__append_102) \
	$(am__append_103) $(am__append_104) $(am__append_105) \
	$(am__append_106) $(am__append_108) $(am__append_109) \
	$(am__append_110) $(am__append_112) $(am__append_118) \
	$(am__append_119) $(am__append_120) $(am__append_121) \
	$(am__append_122) $(am__append_123) $(am__append_124) \
	$(am__append_125) $(am__append_130) $(am__append_131) \
	$(am__append_132) $(am__append_133) $(am__append_134) \
	$(am__append_135) $(am__append_136) $(am__append_138) \
	$(am__append_139) $(am__append_140) $(am__append_142) \
	$(am__append_143) $(am__append_144) $(am__append_145) \
	$(am__append_146) $(am__append_148) $(am__append_149) \
	$(am__append_150) $(am__append_151) $(am__append_152) \
	$(am__append_153) $(am__append_155) $(am__append_157) \
	$(am__append_158) $(am__append_159) $(am__append_160) \
	$(am__append_161) $(am__append_162) $(am__append_163) \
	$(am__append_164) $(am__append_165) $(am__append_166) \
	$(am__append_167) $(am__append_168) $(am__append_169) \
	$(am__append_176) $(am__append_177) $(am__append_178) \
	$(am__append_179) $(am__append_180) $(am__append_181) \
	$(am__append_182) $(am__append_183) $(am__append_184) \
	$(am__append_185) $(am__append_186) $(am__append_188) \
	$(am__append_189) $(am__append_190) $(am__append_191) \
	$(am__append_192) $(am__append_194) $(am__append_195) \
	$(am__append_196) $(am__append_199) $(am__append_202) \
	$(am__append_203) $(am__append_204) $(am__append_205) \
	$(am__append_206) $(am__append_207) $(am__append_208) \
	$(am__append_209) $(am__append_210) $(am__append_211) \
	$(am__append_212) $(am__append_213) $(am__append_214) \
	$(am__append_215) $(am__append_216) $(am__append_217) \
	$(am__append_218) $(am__append_219) $(am__append_220) \
	$(am__append_221) $(am__append_222)
BUILT_SOURCES = $(am__append_17) $(dist_man_MANS) $(am__append_224) \
	$(am__append_226)
CLEANFILES = $(am__append_18) $(am__append_223) $(am__append_225)
aggregation_la_SOURCES = aggregation.c \
                         utils_vl_lookup.c utils_vl_lookup.h

aggregation_la_LDFLAGS = $(PLUGIN_LDFLAGS)
aggregation_la_LIBADD = -lm
#amqp_la_SOURCES = amqp.c
#amqp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRABBITMQ_LDFLAGS)
#amqp_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBRABBITMQ_CPPFLAGS)
#amqp_la_LIBADD = $(BUILD_WITH_LIBRABBITMQ_LIBS) \
#                 libcmds.la libformat_graphite.la libformat_json.la

#apache_la_SOURCES = apache.c
#apache_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#apache_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)
#apache_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS)
#apcups_la_SOURCES = apcups.c
#apcups_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#apcups_la_LIBADD = $(am__append_23)
#apple_sensors_la_SOURCES = apple_sensors.c
#apple_sensors_la_LDFLAGS = $(PLUGIN_LDFLAGS) -framework IOKit
#aquaero_la_SOURCES = aquaero.c
#aquaero_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBAQUAERO5_CFLAGS)
#aquaero_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBAQUAERO5_LDFLAGS)
#aquaero_la_LIBADD = -laquaero5
#ascent_la_SOURCES = ascent.c
#ascent_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#ascent_la_CFLAGS = $(AM_CFLAGS) \
#		$(BUILD_WITH_LIBCURL_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)

#ascent_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBXML2_LIBS)
#barometer_la_SOURCES = barometer.c
#barometer_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#barometer_la_LIBADD = -lm
#battery_la_SOURCES = battery.c battery_statefs.c
#battery_la_LDFLAGS = $(PLUGIN_LDFLAGS) \
#	$(am__append_29)
#bind_la_SOURCES = bind.c
#bind_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#bind_la_CFLAGS = $(AM_CFLAGS) \
#		 $(BUILD_WITH_LIBCURL_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)

#bind_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBXML2_LIBS)
#ceph_la_SOURCES = ceph.c
#ceph_la_CFLAGS = $(AM_CFLAGS)
#ceph_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)
#ceph_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)
#ceph_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)
#cgroups_la_SOURCES = cgroups.c
#cgroups_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#cgroups_la_LIBADD = libmount.la
#chrony_la_SOURCES = chrony.c
#chrony_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#chrony_la_LIBADD = -lm
#conntrack_la_SOURCES = conntrack.c
#conntrack_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#contextswitch_la_SOURCES = contextswitch.c
#contextswitch_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#contextswitch_la_LIBADD =  \
#	$(am__append_36)
cpu_la_SOURCES = cpu.c
cpu_la_CFLAGS = $(AM_CFLAGS) $(am__append_40)
cpu_la_LDFLAGS = $(PLUGIN_LDFLAGS)
cpu_la_LIBADD = $(am__append_38) \
	$(am__append_39) $(am__append_41) \
	$(am__append_42)
#cpufreq_la_SOURCES = cpufreq.c
#cpufreq_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#cpusleep_la_SOURCES = cpusleep.c
#cpusleep_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#csv_la_SOURCES = csv.c
#csv_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#curl_la_SOURCES = curl.c \
#                  utils_curl_stats.c utils_curl_stats.h \
#                  utils_match.c utils_match.h

#curl_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#curl_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)
#curl_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) liblatency.la
#curl_json_la_SOURCES = curl_json.c \
#		  utils_curl_stats.c utils_curl_stats.h

#curl_json_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)
#curl_json_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)
#curl_json_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)
#curl_json_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBYAJL_LIBS)
#curl_xml_la_SOURCES = curl_xml.c \
#		  utils_curl_stats.c utils_curl_stats.h

#curl_xml_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#curl_xml_la_CFLAGS = $(AM_CFLAGS) \
#		$(BUILD_WITH_LIBCURL_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)

#curl_xml_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBXML2_LIBS)
#dbi_la_SOURCES = dbi.c \
#		 utils_db_query.c utils_db_query.h

#dbi_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBDBI_CPPFLAGS)
#dbi_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBDBI_LDFLAGS)
#dbi_la_LIBADD = $(BUILD_WITH_LIBDBI_LIBS)
#df_la_SOURCES = df.c
#df_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#df_la_LIBADD = libmount.la
#disk_la_SOURCES = disk.c
#disk_la_CFLAGS = $(AM_CFLAGS) $(am__append_55) \
#	$(am__append_57)
#disk_la_LDFLAGS = $(PLUGIN_LDFLAGS) \
#	$(am__append_54) $(am__append_58)
#disk_la_LIBADD = $(am__append_52) \
#	$(am__append_53) $(am__append_56) \
#	$(am__append_59) $(am__append_60) \
#	$(am__append_61)
#dns_la_SOURCES = dns.c utils_dns.c utils_dns.h
#dns_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#dns_la_LIBADD = -lpcap
#dpdkstat_la_SOURCES = dpdkstat.c
#dpdkstat_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBDPDK_CPPFLAGS)
#dpdkstat_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBDPDK_LDFLAGS)
#dpdkstat_la_LIBADD = -ldpdk
#drbd_la_SOURCES = drbd.c
#drbd_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#email_la_SOURCES = email.c
#email_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#entropy_la_SOURCES = entropy.c
#entropy_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#exec_la_SOURCES = exec.c
#exec_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#exec_la_LIBADD = libcmds.la
#ethstat_la_SOURCES = ethstat.c
#ethstat_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#fhcount_la_SOURCES = fhcount.c
#fhcount_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#filecount_la_SOURCES = filecount.c
#filecount_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#gmond_la_SOURCES = gmond.c
#gmond_la_CPPFLAGS = $(AM_CPPFLAGS) $(GANGLIA_CPPFLAGS)
#gmond_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(GANGLIA_LDFLAGS)
#gmond_la_LIBADD = $(GANGLIA_LIBS)
#gps_la_SOURCES = gps.c
#gps_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBGPS_CFLAGS)
#gps_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBGPS_LDFLAGS)
#gps_la_LIBADD = -lpthread $(BUILD_WITH_LIBGPS_LIBS)
#grpc_la_SOURCES = grpc.cc
#nodist_grpc_la_SOURCES = collectd.grpc.pb.cc collectd.pb.cc types.pb.cc
#grpc_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBGRPCPP_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_CPPFLAGS)
#grpc_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBGRPCPP_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_LDFLAGS)
#grpc_la_LIBADD = $(BUILD_WITH_LIBGRPCPP_LIBS) $(BUILD_WITH_LIBPROTOBUF_LIBS)
#hddtemp_la_SOURCES = hddtemp.c
#hddtemp_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#hddtemp_la_LIBADD = $(am__append_75)
#hugepages_la_SOURCES = hugepages.c
#hugepages_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#interface_la_SOURCES = interface.c
#interface_la_CFLAGS = $(AM_CFLAGS) \
#	$(am__append_78)
#interface_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#interface_la_LIBADD = $(am__append_79) \
#	$(am__append_80) $(am__append_81) \
#	$(am__append_82)
#ipc_la_SOURCES = ipc.c
#ipc_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#iptables_la_SOURCES = iptables.c
#iptables_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBIPTC_CPPFLAGS)
#iptables_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#iptables_la_LIBADD = $(BUILD_WITH_LIBIPTC_LDFLAGS)
#ipmi_la_SOURCES = ipmi.c
#ipmi_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_OPENIPMI_CFLAGS)
#ipmi_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#ipmi_la_LIBADD = $(BUILD_WITH_OPENIPMI_LIBS)
#ipvs_la_SOURCES = ipvs.c
#ipvs_la_CFLAGS = $(AM_CFLAGS) $(am__append_87)
#ipvs_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#irq_la_SOURCES = irq.c
#irq_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#iwinfo_la_SOURCES = iwinfo.c
#iwinfo_la_LDFLAGS = -module -avoid-version
#iwinfo_la_LIBADD = -liwinfo
#java_la_SOURCES = java.c
#java_la_CPPFLAGS = $(AM_CPPFLAGS) $(JAVA_CPPFLAGS)
#java_la_CFLAGS = $(AM_CFLAGS) $(JAVA_CFLAGS)
#java_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(JAVA_LDFLAGS)
#java_la_LIBADD = $(JAVA_LIBS)
#load_la_SOURCES = load.c
#load_la_CFLAGS = $(AM_CFLAGS) $(am__append_92)
#load_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#load_la_LIBADD = $(am__append_93) \
#	$(am__append_94)
#logfile_la_SOURCES = logfile.c
#logfile_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#log_logstash_la_SOURCES = log_logstash.c
#log_logstash_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)
#log_logstash_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)
#log_logstash_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)
#lpar_la_SOURCES = lpar.c
#lpar_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#lpar_la_LIBADD = -lperfstat
#lua_la_SOURCES = lua.c \
#		 utils_lua.c utils_lua.h

#lua_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBLUA_CFLAGS)
#lua_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#lua_la_LIBADD = $(BUILD_WITH_LIBLUA_LIBS)
#lvm_la_SOURCES = lvm.c
#lvm_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBLVM2APP_CPPFLAGS)
#lvm_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBLVM2APP_LDFLAGS)
#lvm_la_LIBADD = $(BUILD_WITH_LIBLVM2APP_LIBS)
#madwifi_la_SOURCES = madwifi.c madwifi.h
#madwifi_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#match_empty_counter_la_SOURCES = match_empty_counter.c
#match_empty_counter_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#match_hashed_la_SOURCES = match_hashed.c
#match_hashed_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#match_regex_la_SOURCES = match_regex.c
#match_regex_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#match_timediff_la_SOURCES = match_timediff.c
#match_timediff_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#match_value_la_SOURCES = match_value.c
#match_value_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#mbmon_la_SOURCES = mbmon.c
#mbmon_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#mbmon_la_LIBADD = $(am__append_107)
#md_la_SOURCES = md.c
#md_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#memcachec_la_SOURCES = memcachec.c \
#                       utils_match.c utils_match.h

#memcachec_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMEMCACHED_LDFLAGS)
#memcachec_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBMEMCACHED_CPPFLAGS)
#memcachec_la_LIBADD = $(BUILD_WITH_LIBMEMCACHED_LIBS) liblatency.la
#memcached_la_SOURCES = memcached.c
#memcached_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#memcached_la_LIBADD = $(am__append_111)
memory_la_SOURCES = memory.c
memory_la_CFLAGS = $(AM_CFLAGS) \
	$(am__append_115)
memory_la_LDFLAGS = $(PLUGIN_LDFLAGS)
memory_la_LIBADD = $(am__append_113) \
	$(am__append_114) $(am__append_116) \
	$(am__append_117)
#mic_la_SOURCES = mic.c
#mic_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_MIC_LIBPATH)
#mic_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_MIC_CPPFLAGS)
#mic_la_LIBADD = $(BUILD_WITH_MIC_LDADD)
#modbus_la_SOURCES = modbus.c
#modbus_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#modbus_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMODBUS_CFLAGS)
#modbus_la_LIBADD = $(BUILD_WITH_LIBMODBUS_LIBS)
#mqtt_la_SOURCES = mqtt.c
#mqtt_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBMOSQUITTO_CPPFLAGS)
#mqtt_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMOSQUITTO_LDFLAGS)
#mqtt_la_LIBADD = $(BUILD_WITH_LIBMOSQUITTO_LIBS)
#multimeter_la_SOURCES = multimeter.c
#multimeter_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#mysql_la_SOURCES = mysql.c
#mysql_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMYSQL_CFLAGS)
#mysql_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#mysql_la_LIBADD = $(BUILD_WITH_LIBMYSQL_LIBS)
#netapp_la_SOURCES = netapp.c
#netapp_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBNETAPP_CPPFLAGS)
#netapp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBNETAPP_LDFLAGS)
#netapp_la_LIBADD = $(LIBNETAPP_LIBS)
#netlink_la_SOURCES = netlink.c
#netlink_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#netlink_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMNL_CFLAGS)
#netlink_la_LIBADD = $(BUILD_WITH_LIBMNL_LIBS)
#network_la_SOURCES = network.c network.h \
#		     utils_fbhash.c utils_fbhash.h

#network_la_CPPFLAGS = $(AM_CPPFLAGS) \
#	$(am__append_127)
#network_la_LDFLAGS = $(PLUGIN_LDFLAGS) \
#	$(am__append_128)
#network_la_LIBADD = $(am__append_126) \
#	$(am__append_129)
#nfs_la_SOURCES = nfs.c
#nfs_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#fscache_la_SOURCES = fscache.c
#fscache_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#nginx_la_SOURCES = nginx.c
#nginx_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)
#nginx_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#nginx_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS)
#notify_desktop_la_SOURCES = notify_desktop.c
#notify_desktop_la_CFLAGS = $(AM_CFLAGS) $(LIBNOTIFY_CFLAGS)
#notify_desktop_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#notify_desktop_la_LIBADD = $(LIBNOTIFY_LIBS)
#notify_email_la_SOURCES = notify_email.c
#notify_email_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#notify_email_la_LIBADD = -lesmtp -lssl -lcrypto
#notify_nagios_la_SOURCES = notify_nagios.c
#notify_nagios_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#ntpd_la_SOURCES = ntpd.c
#ntpd_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#ntpd_la_LIBADD = $(am__append_137)
#numa_la_SOURCES = numa.c
#numa_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#nut_la_SOURCES = nut.c
#nut_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBUPSCLIENT_CFLAGS)
#nut_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#nut_la_LIBADD = $(BUILD_WITH_LIBUPSCLIENT_LIBS)
#olsrd_la_SOURCES = olsrd.c
#olsrd_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#olsrd_la_LIBADD = $(am__append_141)
#onewire_la_SOURCES = onewire.c
#onewire_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBOWCAPI_CPPFLAGS)
#onewire_la_LIBADD = $(BUILD_WITH_LIBOWCAPI_LIBS)
#onewire_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBOWCAPI_LDFLAGS)
#openldap_la_SOURCES = openldap.c
#openldap_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBLDAP_CPPFLAGS)
#openldap_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBLDAP_LDFLAGS)
#openldap_la_LIBADD = -lldap
#openvpn_la_SOURCES = openvpn.c
#openvpn_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#oracle_la_SOURCES = oracle.c \
#	utils_db_query.c utils_db_query.h

#oracle_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_ORACLE_CPPFLAGS)
#oracle_la_LIBADD = $(BUILD_WITH_ORACLE_LIBS)
#oracle_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#perl_la_SOURCES = perl.c
# Despite C99 providing the "bool" type thru stdbool.h, Perl defines its own
# version of that type if HAS_BOOL is not defined... *sigh*
# Despite off_t being 64 bit wide on 64 bit platforms, Perl insist on using
# off64_t which is only exposed when _LARGEFILE64_SOURCE is defined... *sigh*
# On older platforms we also need _REENTRANT. _GNU_SOURCE sets both of these.
#perl_la_CPPFLAGS = $(AM_CPPFLAGS) -DHAS_BOOL=1 \
#	-D_GNU_SOURCE
#perl_la_CFLAGS = $(AM_CFLAGS) $(PERL_CFLAGS) \
#	-DXS_VERSION=\"$(VERSION)\" \
#	-DVERSION=\"$(VERSION)\" \
#	$(am__append_147)
#perl_la_LDFLAGS = $(PLUGIN_LDFLAGS) \
#		$(PERL_LDFLAGS)

#perl_la_LIBADD = $(PERL_LIBS)
#pf_la_SOURCES = pf.c
#pf_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#pinba_la_SOURCES = pinba.c
#nodist_pinba_la_SOURCES = pinba.pb-c.c pinba.pb-c.h
#pinba_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS)
#pinba_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_LDFLAGS)
#pinba_la_LIBADD = $(BUILD_WITH_LIBPROTOBUF_C_LIBS)
#ping_la_SOURCES = ping.c
#ping_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBOPING_CPPFLAGS)
#ping_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBOPING_LDFLAGS)
#ping_la_LIBADD = -loping -lm
#postgresql_la_SOURCES = postgresql.c \
#		 utils_db_query.c utils_db_query.h

#postgresql_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPQ_CPPFLAGS)
#postgresql_la_LDFLAGS = $(PLUGIN_LDFLAGS) \
#		$(BUILD_WITH_LIBPQ_LDFLAGS)

#postgresql_la_LIBADD = -lpq
#powerdns_la_SOURCES = powerdns.c
#powerdns_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#python_la_SOURCES = python.c pyconfig.c pyvalues.c cpython.h
#python_la_CPPFLAGS = $(AM_CPPFLAGS) \
#	$(LIBPYTHON_CPPFLAGS) \
#	$(am__append_154)
#python_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBPYTHON_LDFLAGS)
#processes_la_SOURCES = processes.c
#processes_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#processes_la_LIBADD = $(am__append_156)
#protocols_la_SOURCES = protocols.c
#protocols_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#intel_rdt_la_SOURCES = intel_rdt.c
#intel_rdt_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPQOS_LDFLAGS)
#intel_rdt_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBPQOS_CPPFLAGS)
#intel_rdt_la_LIBADD = $(BUILD_WITH_LIBPQOS_LIBS)
#redis_la_SOURCES = redis.c
#redis_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBHIREDIS_LDFLAGS)
#redis_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBHIREDIS_CPPFLAGS)
#redis_la_LIBADD = -lhiredis
#routeros_la_SOURCES = routeros.c
#routeros_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBROUTEROS_CPPFLAGS)
#routeros_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBROUTEROS_LDFLAGS)
#routeros_la_LIBADD = -lrouteros
#rrdcached_la_SOURCES = rrdcached.c utils_rrdcreate.c utils_rrdcreate.h
#rrdcached_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRRD_LDFLAGS)
#rrdcached_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBRRD_CFLAGS)
#rrdcached_la_LIBADD = $(BUILD_WITH_LIBRRD_LIBS)
#rrdtool_la_SOURCES = rrdtool.c utils_rrdcreate.c utils_rrdcreate.h
#rrdtool_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRRD_LDFLAGS)
#rrdtool_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBRRD_CFLAGS)
#rrdtool_la_LIBADD = $(BUILD_WITH_LIBRRD_LIBS)
#sensors_la_SOURCES = sensors.c
#sensors_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBSENSORS_CFLAGS)
#sensors_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBSENSORS_LDFLAGS)
#sensors_la_LIBADD = -lsensors
#serial_la_SOURCES = serial.c
#serial_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#sigrok_la_SOURCES = sigrok.c
#sigrok_la_CFLAGS = $(AM_CFLAGS) $(LIBSIGROK_CFLAGS)
#sigrok_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#sigrok_la_LIBADD = $(LIBSIGROK_LIBS)
##smart_la_SOURCES = smart.c
##smart_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBATASMART_CPPFLAGS) $(BUILD_WITH_LIBUDEV_CFLAGS)
##smart_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBATASMART_LDFLAGS) $(BUILD_WITH_LIBUDEV_LDFLAGS)
##smart_la_LIBADD = $(BUILD_WITH_LIBATASMART_LIBS) $(BUILD_WITH_LIBUDEV_LIBS)
#snmp_la_SOURCES = snmp.c
#snmp_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBNETSNMP_CPPFLAGS)
#snmp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBNETSNMP_LDFLAGS)
#snmp_la_LIBADD = $(BUILD_WITH_LIBNETSNMP_LIBS)
#statsd_la_SOURCES = statsd.c
#statsd_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#statsd_la_LIBADD = liblatency.la
#swap_la_SOURCES = swap.c
#swap_la_CFLAGS = $(AM_CFLAGS) \
#	$(am__append_173)
#swap_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#swap_la_LIBADD = $(am__append_170) \
#	$(am__append_171) $(am__append_172) \
#	$(am__append_174) $(am__append_175)
#syslog_la_SOURCES = syslog.c
#syslog_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#table_la_SOURCES = table.c
#table_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tail_la_SOURCES = tail.c \
#                  utils_match.c utils_match.h \
#                  utils_tail.c utils_tail.h \
#                  utils_tail_match.c utils_tail_match.h

#tail_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tail_la_LIBADD = liblatency.la
#tail_csv_la_SOURCES = tail_csv.c \
#                      utils_tail.c utils_tail.h

#tail_csv_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tape_la_SOURCES = tape.c
#tape_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tape_la_LIBADD = -lkstat -ldevinfo
target_notification_la_SOURCES = target_notification.c
target_notification_la_LDFLAGS = $(PLUGIN_LDFLAGS)
target_replace_la_SOURCES = target_replace.c
target_replace_la_LDFLAGS = $(PLUGIN_LDFLAGS)
target_scale_la_SOURCES = target_scale.c
target_scale_la_LDFLAGS = $(PLUGIN_LDFLAGS)
target_set_la_SOURCES = target_set.c
target_set_la_LDFLAGS = $(PLUGIN_LDFLAGS)
target_v5upgrade_la_SOURCES = target_v5upgrade.c
target_v5upgrade_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tcpconns_la_SOURCES = tcpconns.c
#tcpconns_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tcpconns_la_LIBADD = $(am__append_187)
#teamspeak2_la_SOURCES = teamspeak2.c
#teamspeak2_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#ted_la_SOURCES = ted.c
#ted_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#thermal_la_SOURCES = thermal.c
#thermal_la_LDFLAGS = $(PLUGIN_LDFLAGS)
threshold_la_SOURCES = threshold.c
threshold_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#tokyotyrant_la_SOURCES = tokyotyrant.c
#tokyotyrant_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBTOKYOTYRANT_CPPFLAGS)
#tokyotyrant_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBTOKYOTYRANT_LDFLAGS)
#tokyotyrant_la_LIBADD = $(BUILD_WITH_LIBTOKYOTYRANT_LIBS) \
#	$(am__append_193)
#turbostat_la_SOURCES = turbostat.c
#turbostat_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#unixsock_la_SOURCES = unixsock.c
#unixsock_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#unixsock_la_LIBADD = libcmds.la
#uptime_la_SOURCES = uptime.c
#uptime_la_CFLAGS = $(AM_CFLAGS)
#uptime_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#uptime_la_LIBADD = $(am__append_197) \
#	$(am__append_198)
#users_la_SOURCES = users.c
#users_la_CFLAGS = $(AM_CFLAGS) \
#	$(am__append_200)
#users_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#users_la_LIBADD = $(am__append_201)
#uuid_la_SOURCES = uuid.c
#uuid_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBHAL_CFLAGS)
#uuid_la_LIBADD = $(BUILD_WITH_LIBHAL_LIBS)
#uuid_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#varnish_la_SOURCES = varnish.c
#varnish_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#varnish_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBVARNISH_CFLAGS)
#varnish_la_LIBADD = $(BUILD_WITH_LIBVARNISH_LIBS)
#virt_la_SOURCES = virt.c
#virt_la_CFLAGS = $(AM_CFLAGS) \
#		$(BUILD_WITH_LIBVIRT_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)

#virt_la_LIBADD = $(BUILD_WITH_LIBVIRT_LIBS) $(BUILD_WITH_LIBXML2_LIBS)
#virt_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#vmem_la_SOURCES = vmem.c
#vmem_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#vserver_la_SOURCES = vserver.c
#vserver_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#wireless_la_SOURCES = wireless.c
#wireless_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#write_graphite_la_SOURCES = write_graphite.c
#write_graphite_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#write_graphite_la_LIBADD = libformat_graphite.la
#write_http_la_SOURCES = write_http.c \
#			utils_format_kairosdb.c utils_format_kairosdb.h

#write_http_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#write_http_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)
#write_http_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) libformat_json.la
write_kafka_la_SOURCES = write_kafka.c \
                         utils_crc32.c utils_crc32.h

write_kafka_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBRDKAFKA_CPPFLAGS)
write_kafka_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRDKAFKA_LDFLAGS)
write_kafka_la_LIBADD = $(BUILD_WITH_LIBRDKAFKA_LIBS) \
                        libcmds.la libformat_graphite.la libformat_json.la

#write_log_la_SOURCES = write_log.c
#write_log_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#write_log_la_LIBADD = libformat_graphite.la libformat_json.la
#write_mongodb_la_SOURCES = write_mongodb.c
#write_mongodb_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBMONGOC_CPPFLAGS)
#write_mongodb_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMONGOC_LDFLAGS)
#write_mongodb_la_LIBADD = -lmongoc
#write_prometheus_la_SOURCES = write_prometheus.c
#nodist_write_prometheus_la_SOURCES = prometheus.pb-c.c prometheus.pb-c.h
#write_prometheus_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS) $(BUILD_WITH_LIBMICROHTTPD_CPPFLAGS)
#write_prometheus_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_LDFLAGS) $(BUILD_WITH_LIBMICROHTTPD_LDFLAGS)
#write_prometheus_la_LIBADD = $(BUILD_WITH_LIBPROTOBUF_C_LIBS) $(BUILD_WITH_LIBMICROHTTPD_LIBS)
#write_redis_la_SOURCES = write_redis.c
#write_redis_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBHIREDIS_LDFLAGS)
#write_redis_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBHIREDIS_CPPFLAGS)
#write_redis_la_LIBADD = -lhiredis
#write_riemann_la_SOURCES = write_riemann.c write_riemann_threshold.c write_riemann_threshold.h
#write_riemann_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBRIEMANN_CLIENT_LIBS)
#write_riemann_la_CFLAGS = $(AM_CFLAGS) $(LIBRIEMANN_CLIENT_CFLAGS)
#write_sensu_la_SOURCES = write_sensu.c
#write_sensu_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#write_tsdb_la_SOURCES = write_tsdb.c
#write_tsdb_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#xencpu_la_SOURCES = xencpu.c
#xencpu_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBXENCTL_CPPFLAGS)
#xencpu_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBXENCTL_LDFLAGS)
#xencpu_la_LIBADD = -lxenctrl
#xmms_la_SOURCES = xmms.c
#xmms_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBXMMS_CFLAGS)
#xmms_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#xmms_la_LIBADD = $(BUILD_WITH_LIBXMMS_LIBS)
#zfs_arc_la_SOURCES = zfs_arc.c
#zfs_arc_la_LDFLAGS = $(PLUGIN_LDFLAGS)
##zfs_arc_la_LIBADD = -lm
##zfs_arc_la_LIBADD = -lkstat
#zookeeper_la_SOURCES = zookeeper.c
#zookeeper_la_LDFLAGS = $(PLUGIN_LDFLAGS)
#zone_la_SOURCES = zone.c
#zone_la_LDFLAGS = $(PLUGIN_LDFLAGS)
dist_man_MANS = collectd.1 \
		collectd.conf.5 \
		collectd-email.5 \
		collectd-exec.5 \
		collectdctl.1 \
		collectd-java.5 \
		collectd-lua.5 \
		collectdmon.1 \
		collectd-nagios.1 \
		collectd-perl.5 \
		collectd-python.5 \
		collectd-snmp.5 \
		collectd-tg.1 \
		collectd-threshold.5 \
		collectd-unixsock.5 \
		types.db.5


# Protocol buffer for the "pinba" plugin.
EXTRA_DIST = collectd.conf.pod collectd-email.pod collectd-exec.pod \
	collectdctl.pod collectd-java.pod collectd-lua.pod \
	collectdmon.pod collectd-nagios.pod collectd-perl.pod \
	collectd-python.pod collectd.pod collectd-snmp.pod \
	collectd-tg.pod collectd-threshold.pod collectd-unixsock.pod \
	postgresql_default.conf types.db types.db.pod \
	valgrind.FreeBSD.suppress pinba.proto
AM_V_POD2MAN_C = $(am__v_POD2MAN_C_0)
am__v_POD2MAN_C_ = $(am__v_POD2MAN_C_0)
am__v_POD2MAN_C_0 = @echo "  POD2MAN " $@;
am__v_POD2MAN_C_1 = 
AM_V_PROTOC_C = $(am__v_PROTOC_C_0)
am__v_PROTOC_C_ = $(am__v_PROTOC_C_0)
am__v_PROTOC_C_0 = @echo "  PROTOC-C" $@;
am__v_PROTOC_C_1 = 
#test_plugin_ceph_SOURCES = ceph_test.c
#test_plugin_ceph_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)
#test_plugin_ceph_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)
#test_plugin_ceph_LDADD = daemon/libplugin_mock.la $(BUILD_WITH_LIBYAJL_LIBS)
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .1 .5 .c .cc .lo .log .o .obj .pod .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
collectd.conf: $(top_builddir)/config.status $(srcdir)/collectd.conf.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkglibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkglibdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(pkglibdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(pkglibdir)"; \
	}

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(pkglib_LTLIBRARIES)'; test -n "$(pkglibdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$f"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

aggregation.la: $(aggregation_la_OBJECTS) $(aggregation_la_DEPENDENCIES) $(EXTRA_aggregation_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(aggregation_la_LINK) $(am_aggregation_la_rpath) $(aggregation_la_OBJECTS) $(aggregation_la_LIBADD) $(LIBS)

amqp.la: $(amqp_la_OBJECTS) $(amqp_la_DEPENDENCIES) $(EXTRA_amqp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(amqp_la_LINK) $(am_amqp_la_rpath) $(amqp_la_OBJECTS) $(amqp_la_LIBADD) $(LIBS)

apache.la: $(apache_la_OBJECTS) $(apache_la_DEPENDENCIES) $(EXTRA_apache_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(apache_la_LINK) $(am_apache_la_rpath) $(apache_la_OBJECTS) $(apache_la_LIBADD) $(LIBS)

apcups.la: $(apcups_la_OBJECTS) $(apcups_la_DEPENDENCIES) $(EXTRA_apcups_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(apcups_la_LINK) $(am_apcups_la_rpath) $(apcups_la_OBJECTS) $(apcups_la_LIBADD) $(LIBS)

apple_sensors.la: $(apple_sensors_la_OBJECTS) $(apple_sensors_la_DEPENDENCIES) $(EXTRA_apple_sensors_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(apple_sensors_la_LINK) $(am_apple_sensors_la_rpath) $(apple_sensors_la_OBJECTS) $(apple_sensors_la_LIBADD) $(LIBS)

aquaero.la: $(aquaero_la_OBJECTS) $(aquaero_la_DEPENDENCIES) $(EXTRA_aquaero_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(aquaero_la_LINK) $(am_aquaero_la_rpath) $(aquaero_la_OBJECTS) $(aquaero_la_LIBADD) $(LIBS)

ascent.la: $(ascent_la_OBJECTS) $(ascent_la_DEPENDENCIES) $(EXTRA_ascent_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ascent_la_LINK) $(am_ascent_la_rpath) $(ascent_la_OBJECTS) $(ascent_la_LIBADD) $(LIBS)

barometer.la: $(barometer_la_OBJECTS) $(barometer_la_DEPENDENCIES) $(EXTRA_barometer_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(barometer_la_LINK) $(am_barometer_la_rpath) $(barometer_la_OBJECTS) $(barometer_la_LIBADD) $(LIBS)

battery.la: $(battery_la_OBJECTS) $(battery_la_DEPENDENCIES) $(EXTRA_battery_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(battery_la_LINK) $(am_battery_la_rpath) $(battery_la_OBJECTS) $(battery_la_LIBADD) $(LIBS)

bind.la: $(bind_la_OBJECTS) $(bind_la_DEPENDENCIES) $(EXTRA_bind_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(bind_la_LINK) $(am_bind_la_rpath) $(bind_la_OBJECTS) $(bind_la_LIBADD) $(LIBS)

ceph.la: $(ceph_la_OBJECTS) $(ceph_la_DEPENDENCIES) $(EXTRA_ceph_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ceph_la_LINK) $(am_ceph_la_rpath) $(ceph_la_OBJECTS) $(ceph_la_LIBADD) $(LIBS)

cgroups.la: $(cgroups_la_OBJECTS) $(cgroups_la_DEPENDENCIES) $(EXTRA_cgroups_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(cgroups_la_LINK) $(am_cgroups_la_rpath) $(cgroups_la_OBJECTS) $(cgroups_la_LIBADD) $(LIBS)

chrony.la: $(chrony_la_OBJECTS) $(chrony_la_DEPENDENCIES) $(EXTRA_chrony_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(chrony_la_LINK) $(am_chrony_la_rpath) $(chrony_la_OBJECTS) $(chrony_la_LIBADD) $(LIBS)

conntrack.la: $(conntrack_la_OBJECTS) $(conntrack_la_DEPENDENCIES) $(EXTRA_conntrack_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(conntrack_la_LINK) $(am_conntrack_la_rpath) $(conntrack_la_OBJECTS) $(conntrack_la_LIBADD) $(LIBS)

contextswitch.la: $(contextswitch_la_OBJECTS) $(contextswitch_la_DEPENDENCIES) $(EXTRA_contextswitch_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(contextswitch_la_LINK) $(am_contextswitch_la_rpath) $(contextswitch_la_OBJECTS) $(contextswitch_la_LIBADD) $(LIBS)

cpu.la: $(cpu_la_OBJECTS) $(cpu_la_DEPENDENCIES) $(EXTRA_cpu_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(cpu_la_LINK) $(am_cpu_la_rpath) $(cpu_la_OBJECTS) $(cpu_la_LIBADD) $(LIBS)

cpufreq.la: $(cpufreq_la_OBJECTS) $(cpufreq_la_DEPENDENCIES) $(EXTRA_cpufreq_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(cpufreq_la_LINK) $(am_cpufreq_la_rpath) $(cpufreq_la_OBJECTS) $(cpufreq_la_LIBADD) $(LIBS)

cpusleep.la: $(cpusleep_la_OBJECTS) $(cpusleep_la_DEPENDENCIES) $(EXTRA_cpusleep_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(cpusleep_la_LINK) $(am_cpusleep_la_rpath) $(cpusleep_la_OBJECTS) $(cpusleep_la_LIBADD) $(LIBS)

csv.la: $(csv_la_OBJECTS) $(csv_la_DEPENDENCIES) $(EXTRA_csv_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(csv_la_LINK) $(am_csv_la_rpath) $(csv_la_OBJECTS) $(csv_la_LIBADD) $(LIBS)

curl.la: $(curl_la_OBJECTS) $(curl_la_DEPENDENCIES) $(EXTRA_curl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(curl_la_LINK) $(am_curl_la_rpath) $(curl_la_OBJECTS) $(curl_la_LIBADD) $(LIBS)

curl_json.la: $(curl_json_la_OBJECTS) $(curl_json_la_DEPENDENCIES) $(EXTRA_curl_json_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(curl_json_la_LINK) $(am_curl_json_la_rpath) $(curl_json_la_OBJECTS) $(curl_json_la_LIBADD) $(LIBS)

curl_xml.la: $(curl_xml_la_OBJECTS) $(curl_xml_la_DEPENDENCIES) $(EXTRA_curl_xml_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(curl_xml_la_LINK) $(am_curl_xml_la_rpath) $(curl_xml_la_OBJECTS) $(curl_xml_la_LIBADD) $(LIBS)

dbi.la: $(dbi_la_OBJECTS) $(dbi_la_DEPENDENCIES) $(EXTRA_dbi_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(dbi_la_LINK) $(am_dbi_la_rpath) $(dbi_la_OBJECTS) $(dbi_la_LIBADD) $(LIBS)

df.la: $(df_la_OBJECTS) $(df_la_DEPENDENCIES) $(EXTRA_df_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(df_la_LINK) $(am_df_la_rpath) $(df_la_OBJECTS) $(df_la_LIBADD) $(LIBS)

disk.la: $(disk_la_OBJECTS) $(disk_la_DEPENDENCIES) $(EXTRA_disk_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(disk_la_LINK) $(am_disk_la_rpath) $(disk_la_OBJECTS) $(disk_la_LIBADD) $(LIBS)

dns.la: $(dns_la_OBJECTS) $(dns_la_DEPENDENCIES) $(EXTRA_dns_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(dns_la_LINK) $(am_dns_la_rpath) $(dns_la_OBJECTS) $(dns_la_LIBADD) $(LIBS)

dpdkstat.la: $(dpdkstat_la_OBJECTS) $(dpdkstat_la_DEPENDENCIES) $(EXTRA_dpdkstat_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(dpdkstat_la_LINK) $(am_dpdkstat_la_rpath) $(dpdkstat_la_OBJECTS) $(dpdkstat_la_LIBADD) $(LIBS)

drbd.la: $(drbd_la_OBJECTS) $(drbd_la_DEPENDENCIES) $(EXTRA_drbd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(drbd_la_LINK) $(am_drbd_la_rpath) $(drbd_la_OBJECTS) $(drbd_la_LIBADD) $(LIBS)

email.la: $(email_la_OBJECTS) $(email_la_DEPENDENCIES) $(EXTRA_email_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(email_la_LINK) $(am_email_la_rpath) $(email_la_OBJECTS) $(email_la_LIBADD) $(LIBS)

entropy.la: $(entropy_la_OBJECTS) $(entropy_la_DEPENDENCIES) $(EXTRA_entropy_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(entropy_la_LINK) $(am_entropy_la_rpath) $(entropy_la_OBJECTS) $(entropy_la_LIBADD) $(LIBS)

ethstat.la: $(ethstat_la_OBJECTS) $(ethstat_la_DEPENDENCIES) $(EXTRA_ethstat_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ethstat_la_LINK) $(am_ethstat_la_rpath) $(ethstat_la_OBJECTS) $(ethstat_la_LIBADD) $(LIBS)

exec.la: $(exec_la_OBJECTS) $(exec_la_DEPENDENCIES) $(EXTRA_exec_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(exec_la_LINK) $(am_exec_la_rpath) $(exec_la_OBJECTS) $(exec_la_LIBADD) $(LIBS)

fhcount.la: $(fhcount_la_OBJECTS) $(fhcount_la_DEPENDENCIES) $(EXTRA_fhcount_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(fhcount_la_LINK) $(am_fhcount_la_rpath) $(fhcount_la_OBJECTS) $(fhcount_la_LIBADD) $(LIBS)

filecount.la: $(filecount_la_OBJECTS) $(filecount_la_DEPENDENCIES) $(EXTRA_filecount_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(filecount_la_LINK) $(am_filecount_la_rpath) $(filecount_la_OBJECTS) $(filecount_la_LIBADD) $(LIBS)

fscache.la: $(fscache_la_OBJECTS) $(fscache_la_DEPENDENCIES) $(EXTRA_fscache_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(fscache_la_LINK) $(am_fscache_la_rpath) $(fscache_la_OBJECTS) $(fscache_la_LIBADD) $(LIBS)

gmond.la: $(gmond_la_OBJECTS) $(gmond_la_DEPENDENCIES) $(EXTRA_gmond_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(gmond_la_LINK) $(am_gmond_la_rpath) $(gmond_la_OBJECTS) $(gmond_la_LIBADD) $(LIBS)

gps.la: $(gps_la_OBJECTS) $(gps_la_DEPENDENCIES) $(EXTRA_gps_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(gps_la_LINK) $(am_gps_la_rpath) $(gps_la_OBJECTS) $(gps_la_LIBADD) $(LIBS)

grpc.la: $(grpc_la_OBJECTS) $(grpc_la_DEPENDENCIES) $(EXTRA_grpc_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(grpc_la_LINK) $(am_grpc_la_rpath) $(grpc_la_OBJECTS) $(grpc_la_LIBADD) $(LIBS)

hddtemp.la: $(hddtemp_la_OBJECTS) $(hddtemp_la_DEPENDENCIES) $(EXTRA_hddtemp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hddtemp_la_LINK) $(am_hddtemp_la_rpath) $(hddtemp_la_OBJECTS) $(hddtemp_la_LIBADD) $(LIBS)

hugepages.la: $(hugepages_la_OBJECTS) $(hugepages_la_DEPENDENCIES) $(EXTRA_hugepages_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(hugepages_la_LINK) $(am_hugepages_la_rpath) $(hugepages_la_OBJECTS) $(hugepages_la_LIBADD) $(LIBS)

intel_rdt.la: $(intel_rdt_la_OBJECTS) $(intel_rdt_la_DEPENDENCIES) $(EXTRA_intel_rdt_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(intel_rdt_la_LINK) $(am_intel_rdt_la_rpath) $(intel_rdt_la_OBJECTS) $(intel_rdt_la_LIBADD) $(LIBS)

interface.la: $(interface_la_OBJECTS) $(interface_la_DEPENDENCIES) $(EXTRA_interface_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(interface_la_LINK) $(am_interface_la_rpath) $(interface_la_OBJECTS) $(interface_la_LIBADD) $(LIBS)

ipc.la: $(ipc_la_OBJECTS) $(ipc_la_DEPENDENCIES) $(EXTRA_ipc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ipc_la_LINK) $(am_ipc_la_rpath) $(ipc_la_OBJECTS) $(ipc_la_LIBADD) $(LIBS)

ipmi.la: $(ipmi_la_OBJECTS) $(ipmi_la_DEPENDENCIES) $(EXTRA_ipmi_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ipmi_la_LINK) $(am_ipmi_la_rpath) $(ipmi_la_OBJECTS) $(ipmi_la_LIBADD) $(LIBS)

iptables.la: $(iptables_la_OBJECTS) $(iptables_la_DEPENDENCIES) $(EXTRA_iptables_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(iptables_la_LINK) $(am_iptables_la_rpath) $(iptables_la_OBJECTS) $(iptables_la_LIBADD) $(LIBS)

ipvs.la: $(ipvs_la_OBJECTS) $(ipvs_la_DEPENDENCIES) $(EXTRA_ipvs_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ipvs_la_LINK) $(am_ipvs_la_rpath) $(ipvs_la_OBJECTS) $(ipvs_la_LIBADD) $(LIBS)

irq.la: $(irq_la_OBJECTS) $(irq_la_DEPENDENCIES) $(EXTRA_irq_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(irq_la_LINK) $(am_irq_la_rpath) $(irq_la_OBJECTS) $(irq_la_LIBADD) $(LIBS)

iwinfo.la: $(iwinfo_la_OBJECTS) $(iwinfo_la_DEPENDENCIES) $(EXTRA_iwinfo_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(iwinfo_la_LINK) $(am_iwinfo_la_rpath) $(iwinfo_la_OBJECTS) $(iwinfo_la_LIBADD) $(LIBS)

java.la: $(java_la_OBJECTS) $(java_la_DEPENDENCIES) $(EXTRA_java_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(java_la_LINK) $(am_java_la_rpath) $(java_la_OBJECTS) $(java_la_LIBADD) $(LIBS)

libcmds.la: $(libcmds_la_OBJECTS) $(libcmds_la_DEPENDENCIES) $(EXTRA_libcmds_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libcmds_la_OBJECTS) $(libcmds_la_LIBADD) $(LIBS)

libformat_graphite.la: $(libformat_graphite_la_OBJECTS) $(libformat_graphite_la_DEPENDENCIES) $(EXTRA_libformat_graphite_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libformat_graphite_la_LINK)  $(libformat_graphite_la_OBJECTS) $(libformat_graphite_la_LIBADD) $(LIBS)

libformat_json.la: $(libformat_json_la_OBJECTS) $(libformat_json_la_DEPENDENCIES) $(EXTRA_libformat_json_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libformat_json_la_LINK)  $(libformat_json_la_OBJECTS) $(libformat_json_la_LIBADD) $(LIBS)

liblatency.la: $(liblatency_la_OBJECTS) $(liblatency_la_DEPENDENCIES) $(EXTRA_liblatency_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(liblatency_la_OBJECTS) $(liblatency_la_LIBADD) $(LIBS)

liblookup.la: $(liblookup_la_OBJECTS) $(liblookup_la_DEPENDENCIES) $(EXTRA_liblookup_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(liblookup_la_OBJECTS) $(liblookup_la_LIBADD) $(LIBS)

libmount.la: $(libmount_la_OBJECTS) $(libmount_la_DEPENDENCIES) $(EXTRA_libmount_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libmount_la_OBJECTS) $(libmount_la_LIBADD) $(LIBS)

load.la: $(load_la_OBJECTS) $(load_la_DEPENDENCIES) $(EXTRA_load_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(load_la_LINK) $(am_load_la_rpath) $(load_la_OBJECTS) $(load_la_LIBADD) $(LIBS)

log_logstash.la: $(log_logstash_la_OBJECTS) $(log_logstash_la_DEPENDENCIES) $(EXTRA_log_logstash_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(log_logstash_la_LINK) $(am_log_logstash_la_rpath) $(log_logstash_la_OBJECTS) $(log_logstash_la_LIBADD) $(LIBS)

logfile.la: $(logfile_la_OBJECTS) $(logfile_la_DEPENDENCIES) $(EXTRA_logfile_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(logfile_la_LINK) $(am_logfile_la_rpath) $(logfile_la_OBJECTS) $(logfile_la_LIBADD) $(LIBS)

lpar.la: $(lpar_la_OBJECTS) $(lpar_la_DEPENDENCIES) $(EXTRA_lpar_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(lpar_la_LINK) $(am_lpar_la_rpath) $(lpar_la_OBJECTS) $(lpar_la_LIBADD) $(LIBS)

lua.la: $(lua_la_OBJECTS) $(lua_la_DEPENDENCIES) $(EXTRA_lua_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(lua_la_LINK) $(am_lua_la_rpath) $(lua_la_OBJECTS) $(lua_la_LIBADD) $(LIBS)

lvm.la: $(lvm_la_OBJECTS) $(lvm_la_DEPENDENCIES) $(EXTRA_lvm_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(lvm_la_LINK) $(am_lvm_la_rpath) $(lvm_la_OBJECTS) $(lvm_la_LIBADD) $(LIBS)

madwifi.la: $(madwifi_la_OBJECTS) $(madwifi_la_DEPENDENCIES) $(EXTRA_madwifi_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(madwifi_la_LINK) $(am_madwifi_la_rpath) $(madwifi_la_OBJECTS) $(madwifi_la_LIBADD) $(LIBS)

match_empty_counter.la: $(match_empty_counter_la_OBJECTS) $(match_empty_counter_la_DEPENDENCIES) $(EXTRA_match_empty_counter_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(match_empty_counter_la_LINK) $(am_match_empty_counter_la_rpath) $(match_empty_counter_la_OBJECTS) $(match_empty_counter_la_LIBADD) $(LIBS)

match_hashed.la: $(match_hashed_la_OBJECTS) $(match_hashed_la_DEPENDENCIES) $(EXTRA_match_hashed_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(match_hashed_la_LINK) $(am_match_hashed_la_rpath) $(match_hashed_la_OBJECTS) $(match_hashed_la_LIBADD) $(LIBS)

match_regex.la: $(match_regex_la_OBJECTS) $(match_regex_la_DEPENDENCIES) $(EXTRA_match_regex_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(match_regex_la_LINK) $(am_match_regex_la_rpath) $(match_regex_la_OBJECTS) $(match_regex_la_LIBADD) $(LIBS)

match_timediff.la: $(match_timediff_la_OBJECTS) $(match_timediff_la_DEPENDENCIES) $(EXTRA_match_timediff_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(match_timediff_la_LINK) $(am_match_timediff_la_rpath) $(match_timediff_la_OBJECTS) $(match_timediff_la_LIBADD) $(LIBS)

match_value.la: $(match_value_la_OBJECTS) $(match_value_la_DEPENDENCIES) $(EXTRA_match_value_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(match_value_la_LINK) $(am_match_value_la_rpath) $(match_value_la_OBJECTS) $(match_value_la_LIBADD) $(LIBS)

mbmon.la: $(mbmon_la_OBJECTS) $(mbmon_la_DEPENDENCIES) $(EXTRA_mbmon_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(mbmon_la_LINK) $(am_mbmon_la_rpath) $(mbmon_la_OBJECTS) $(mbmon_la_LIBADD) $(LIBS)

md.la: $(md_la_OBJECTS) $(md_la_DEPENDENCIES) $(EXTRA_md_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(md_la_LINK) $(am_md_la_rpath) $(md_la_OBJECTS) $(md_la_LIBADD) $(LIBS)

memcachec.la: $(memcachec_la_OBJECTS) $(memcachec_la_DEPENDENCIES) $(EXTRA_memcachec_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(memcachec_la_LINK) $(am_memcachec_la_rpath) $(memcachec_la_OBJECTS) $(memcachec_la_LIBADD) $(LIBS)

memcached.la: $(memcached_la_OBJECTS) $(memcached_la_DEPENDENCIES) $(EXTRA_memcached_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(memcached_la_LINK) $(am_memcached_la_rpath) $(memcached_la_OBJECTS) $(memcached_la_LIBADD) $(LIBS)

memory.la: $(memory_la_OBJECTS) $(memory_la_DEPENDENCIES) $(EXTRA_memory_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(memory_la_LINK) $(am_memory_la_rpath) $(memory_la_OBJECTS) $(memory_la_LIBADD) $(LIBS)

mic.la: $(mic_la_OBJECTS) $(mic_la_DEPENDENCIES) $(EXTRA_mic_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(mic_la_LINK) $(am_mic_la_rpath) $(mic_la_OBJECTS) $(mic_la_LIBADD) $(LIBS)

modbus.la: $(modbus_la_OBJECTS) $(modbus_la_DEPENDENCIES) $(EXTRA_modbus_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(modbus_la_LINK) $(am_modbus_la_rpath) $(modbus_la_OBJECTS) $(modbus_la_LIBADD) $(LIBS)

mqtt.la: $(mqtt_la_OBJECTS) $(mqtt_la_DEPENDENCIES) $(EXTRA_mqtt_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(mqtt_la_LINK) $(am_mqtt_la_rpath) $(mqtt_la_OBJECTS) $(mqtt_la_LIBADD) $(LIBS)

multimeter.la: $(multimeter_la_OBJECTS) $(multimeter_la_DEPENDENCIES) $(EXTRA_multimeter_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(multimeter_la_LINK) $(am_multimeter_la_rpath) $(multimeter_la_OBJECTS) $(multimeter_la_LIBADD) $(LIBS)

mysql.la: $(mysql_la_OBJECTS) $(mysql_la_DEPENDENCIES) $(EXTRA_mysql_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(mysql_la_LINK) $(am_mysql_la_rpath) $(mysql_la_OBJECTS) $(mysql_la_LIBADD) $(LIBS)

netapp.la: $(netapp_la_OBJECTS) $(netapp_la_DEPENDENCIES) $(EXTRA_netapp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(netapp_la_LINK) $(am_netapp_la_rpath) $(netapp_la_OBJECTS) $(netapp_la_LIBADD) $(LIBS)

netlink.la: $(netlink_la_OBJECTS) $(netlink_la_DEPENDENCIES) $(EXTRA_netlink_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(netlink_la_LINK) $(am_netlink_la_rpath) $(netlink_la_OBJECTS) $(netlink_la_LIBADD) $(LIBS)

network.la: $(network_la_OBJECTS) $(network_la_DEPENDENCIES) $(EXTRA_network_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(network_la_LINK) $(am_network_la_rpath) $(network_la_OBJECTS) $(network_la_LIBADD) $(LIBS)

nfs.la: $(nfs_la_OBJECTS) $(nfs_la_DEPENDENCIES) $(EXTRA_nfs_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(nfs_la_LINK) $(am_nfs_la_rpath) $(nfs_la_OBJECTS) $(nfs_la_LIBADD) $(LIBS)

nginx.la: $(nginx_la_OBJECTS) $(nginx_la_DEPENDENCIES) $(EXTRA_nginx_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(nginx_la_LINK) $(am_nginx_la_rpath) $(nginx_la_OBJECTS) $(nginx_la_LIBADD) $(LIBS)

notify_desktop.la: $(notify_desktop_la_OBJECTS) $(notify_desktop_la_DEPENDENCIES) $(EXTRA_notify_desktop_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(notify_desktop_la_LINK) $(am_notify_desktop_la_rpath) $(notify_desktop_la_OBJECTS) $(notify_desktop_la_LIBADD) $(LIBS)

notify_email.la: $(notify_email_la_OBJECTS) $(notify_email_la_DEPENDENCIES) $(EXTRA_notify_email_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(notify_email_la_LINK) $(am_notify_email_la_rpath) $(notify_email_la_OBJECTS) $(notify_email_la_LIBADD) $(LIBS)

notify_nagios.la: $(notify_nagios_la_OBJECTS) $(notify_nagios_la_DEPENDENCIES) $(EXTRA_notify_nagios_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(notify_nagios_la_LINK) $(am_notify_nagios_la_rpath) $(notify_nagios_la_OBJECTS) $(notify_nagios_la_LIBADD) $(LIBS)

ntpd.la: $(ntpd_la_OBJECTS) $(ntpd_la_DEPENDENCIES) $(EXTRA_ntpd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ntpd_la_LINK) $(am_ntpd_la_rpath) $(ntpd_la_OBJECTS) $(ntpd_la_LIBADD) $(LIBS)

numa.la: $(numa_la_OBJECTS) $(numa_la_DEPENDENCIES) $(EXTRA_numa_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(numa_la_LINK) $(am_numa_la_rpath) $(numa_la_OBJECTS) $(numa_la_LIBADD) $(LIBS)

nut.la: $(nut_la_OBJECTS) $(nut_la_DEPENDENCIES) $(EXTRA_nut_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(nut_la_LINK) $(am_nut_la_rpath) $(nut_la_OBJECTS) $(nut_la_LIBADD) $(LIBS)

olsrd.la: $(olsrd_la_OBJECTS) $(olsrd_la_DEPENDENCIES) $(EXTRA_olsrd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(olsrd_la_LINK) $(am_olsrd_la_rpath) $(olsrd_la_OBJECTS) $(olsrd_la_LIBADD) $(LIBS)

onewire.la: $(onewire_la_OBJECTS) $(onewire_la_DEPENDENCIES) $(EXTRA_onewire_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(onewire_la_LINK) $(am_onewire_la_rpath) $(onewire_la_OBJECTS) $(onewire_la_LIBADD) $(LIBS)

openldap.la: $(openldap_la_OBJECTS) $(openldap_la_DEPENDENCIES) $(EXTRA_openldap_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(openldap_la_LINK) $(am_openldap_la_rpath) $(openldap_la_OBJECTS) $(openldap_la_LIBADD) $(LIBS)

openvpn.la: $(openvpn_la_OBJECTS) $(openvpn_la_DEPENDENCIES) $(EXTRA_openvpn_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(openvpn_la_LINK) $(am_openvpn_la_rpath) $(openvpn_la_OBJECTS) $(openvpn_la_LIBADD) $(LIBS)

oracle.la: $(oracle_la_OBJECTS) $(oracle_la_DEPENDENCIES) $(EXTRA_oracle_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(oracle_la_LINK) $(am_oracle_la_rpath) $(oracle_la_OBJECTS) $(oracle_la_LIBADD) $(LIBS)

perl.la: $(perl_la_OBJECTS) $(perl_la_DEPENDENCIES) $(EXTRA_perl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(perl_la_LINK) $(am_perl_la_rpath) $(perl_la_OBJECTS) $(perl_la_LIBADD) $(LIBS)

pf.la: $(pf_la_OBJECTS) $(pf_la_DEPENDENCIES) $(EXTRA_pf_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(pf_la_LINK) $(am_pf_la_rpath) $(pf_la_OBJECTS) $(pf_la_LIBADD) $(LIBS)

pinba.la: $(pinba_la_OBJECTS) $(pinba_la_DEPENDENCIES) $(EXTRA_pinba_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(pinba_la_LINK) $(am_pinba_la_rpath) $(pinba_la_OBJECTS) $(pinba_la_LIBADD) $(LIBS)

ping.la: $(ping_la_OBJECTS) $(ping_la_DEPENDENCIES) $(EXTRA_ping_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ping_la_LINK) $(am_ping_la_rpath) $(ping_la_OBJECTS) $(ping_la_LIBADD) $(LIBS)

postgresql.la: $(postgresql_la_OBJECTS) $(postgresql_la_DEPENDENCIES) $(EXTRA_postgresql_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(postgresql_la_LINK) $(am_postgresql_la_rpath) $(postgresql_la_OBJECTS) $(postgresql_la_LIBADD) $(LIBS)

powerdns.la: $(powerdns_la_OBJECTS) $(powerdns_la_DEPENDENCIES) $(EXTRA_powerdns_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(powerdns_la_LINK) $(am_powerdns_la_rpath) $(powerdns_la_OBJECTS) $(powerdns_la_LIBADD) $(LIBS)

processes.la: $(processes_la_OBJECTS) $(processes_la_DEPENDENCIES) $(EXTRA_processes_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(processes_la_LINK) $(am_processes_la_rpath) $(processes_la_OBJECTS) $(processes_la_LIBADD) $(LIBS)

protocols.la: $(protocols_la_OBJECTS) $(protocols_la_DEPENDENCIES) $(EXTRA_protocols_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(protocols_la_LINK) $(am_protocols_la_rpath) $(protocols_la_OBJECTS) $(protocols_la_LIBADD) $(LIBS)

python.la: $(python_la_OBJECTS) $(python_la_DEPENDENCIES) $(EXTRA_python_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(python_la_LINK) $(am_python_la_rpath) $(python_la_OBJECTS) $(python_la_LIBADD) $(LIBS)

redis.la: $(redis_la_OBJECTS) $(redis_la_DEPENDENCIES) $(EXTRA_redis_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(redis_la_LINK) $(am_redis_la_rpath) $(redis_la_OBJECTS) $(redis_la_LIBADD) $(LIBS)

routeros.la: $(routeros_la_OBJECTS) $(routeros_la_DEPENDENCIES) $(EXTRA_routeros_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(routeros_la_LINK) $(am_routeros_la_rpath) $(routeros_la_OBJECTS) $(routeros_la_LIBADD) $(LIBS)

rrdcached.la: $(rrdcached_la_OBJECTS) $(rrdcached_la_DEPENDENCIES) $(EXTRA_rrdcached_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(rrdcached_la_LINK) $(am_rrdcached_la_rpath) $(rrdcached_la_OBJECTS) $(rrdcached_la_LIBADD) $(LIBS)

rrdtool.la: $(rrdtool_la_OBJECTS) $(rrdtool_la_DEPENDENCIES) $(EXTRA_rrdtool_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(rrdtool_la_LINK) $(am_rrdtool_la_rpath) $(rrdtool_la_OBJECTS) $(rrdtool_la_LIBADD) $(LIBS)

sensors.la: $(sensors_la_OBJECTS) $(sensors_la_DEPENDENCIES) $(EXTRA_sensors_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(sensors_la_LINK) $(am_sensors_la_rpath) $(sensors_la_OBJECTS) $(sensors_la_LIBADD) $(LIBS)

serial.la: $(serial_la_OBJECTS) $(serial_la_DEPENDENCIES) $(EXTRA_serial_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(serial_la_LINK) $(am_serial_la_rpath) $(serial_la_OBJECTS) $(serial_la_LIBADD) $(LIBS)

sigrok.la: $(sigrok_la_OBJECTS) $(sigrok_la_DEPENDENCIES) $(EXTRA_sigrok_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(sigrok_la_LINK) $(am_sigrok_la_rpath) $(sigrok_la_OBJECTS) $(sigrok_la_LIBADD) $(LIBS)

smart.la: $(smart_la_OBJECTS) $(smart_la_DEPENDENCIES) $(EXTRA_smart_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(smart_la_LINK) $(am_smart_la_rpath) $(smart_la_OBJECTS) $(smart_la_LIBADD) $(LIBS)

snmp.la: $(snmp_la_OBJECTS) $(snmp_la_DEPENDENCIES) $(EXTRA_snmp_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(snmp_la_LINK) $(am_snmp_la_rpath) $(snmp_la_OBJECTS) $(snmp_la_LIBADD) $(LIBS)

statsd.la: $(statsd_la_OBJECTS) $(statsd_la_DEPENDENCIES) $(EXTRA_statsd_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(statsd_la_LINK) $(am_statsd_la_rpath) $(statsd_la_OBJECTS) $(statsd_la_LIBADD) $(LIBS)

swap.la: $(swap_la_OBJECTS) $(swap_la_DEPENDENCIES) $(EXTRA_swap_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(swap_la_LINK) $(am_swap_la_rpath) $(swap_la_OBJECTS) $(swap_la_LIBADD) $(LIBS)

syslog.la: $(syslog_la_OBJECTS) $(syslog_la_DEPENDENCIES) $(EXTRA_syslog_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(syslog_la_LINK) $(am_syslog_la_rpath) $(syslog_la_OBJECTS) $(syslog_la_LIBADD) $(LIBS)

table.la: $(table_la_OBJECTS) $(table_la_DEPENDENCIES) $(EXTRA_table_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(table_la_LINK) $(am_table_la_rpath) $(table_la_OBJECTS) $(table_la_LIBADD) $(LIBS)

tail.la: $(tail_la_OBJECTS) $(tail_la_DEPENDENCIES) $(EXTRA_tail_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tail_la_LINK) $(am_tail_la_rpath) $(tail_la_OBJECTS) $(tail_la_LIBADD) $(LIBS)

tail_csv.la: $(tail_csv_la_OBJECTS) $(tail_csv_la_DEPENDENCIES) $(EXTRA_tail_csv_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tail_csv_la_LINK) $(am_tail_csv_la_rpath) $(tail_csv_la_OBJECTS) $(tail_csv_la_LIBADD) $(LIBS)

tape.la: $(tape_la_OBJECTS) $(tape_la_DEPENDENCIES) $(EXTRA_tape_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tape_la_LINK) $(am_tape_la_rpath) $(tape_la_OBJECTS) $(tape_la_LIBADD) $(LIBS)

target_notification.la: $(target_notification_la_OBJECTS) $(target_notification_la_DEPENDENCIES) $(EXTRA_target_notification_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(target_notification_la_LINK) $(am_target_notification_la_rpath) $(target_notification_la_OBJECTS) $(target_notification_la_LIBADD) $(LIBS)

target_replace.la: $(target_replace_la_OBJECTS) $(target_replace_la_DEPENDENCIES) $(EXTRA_target_replace_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(target_replace_la_LINK) $(am_target_replace_la_rpath) $(target_replace_la_OBJECTS) $(target_replace_la_LIBADD) $(LIBS)

target_scale.la: $(target_scale_la_OBJECTS) $(target_scale_la_DEPENDENCIES) $(EXTRA_target_scale_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(target_scale_la_LINK) $(am_target_scale_la_rpath) $(target_scale_la_OBJECTS) $(target_scale_la_LIBADD) $(LIBS)

target_set.la: $(target_set_la_OBJECTS) $(target_set_la_DEPENDENCIES) $(EXTRA_target_set_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(target_set_la_LINK) $(am_target_set_la_rpath) $(target_set_la_OBJECTS) $(target_set_la_LIBADD) $(LIBS)

target_v5upgrade.la: $(target_v5upgrade_la_OBJECTS) $(target_v5upgrade_la_DEPENDENCIES) $(EXTRA_target_v5upgrade_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(target_v5upgrade_la_LINK) $(am_target_v5upgrade_la_rpath) $(target_v5upgrade_la_OBJECTS) $(target_v5upgrade_la_LIBADD) $(LIBS)

tcpconns.la: $(tcpconns_la_OBJECTS) $(tcpconns_la_DEPENDENCIES) $(EXTRA_tcpconns_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tcpconns_la_LINK) $(am_tcpconns_la_rpath) $(tcpconns_la_OBJECTS) $(tcpconns_la_LIBADD) $(LIBS)

teamspeak2.la: $(teamspeak2_la_OBJECTS) $(teamspeak2_la_DEPENDENCIES) $(EXTRA_teamspeak2_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(teamspeak2_la_LINK) $(am_teamspeak2_la_rpath) $(teamspeak2_la_OBJECTS) $(teamspeak2_la_LIBADD) $(LIBS)

ted.la: $(ted_la_OBJECTS) $(ted_la_DEPENDENCIES) $(EXTRA_ted_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(ted_la_LINK) $(am_ted_la_rpath) $(ted_la_OBJECTS) $(ted_la_LIBADD) $(LIBS)

thermal.la: $(thermal_la_OBJECTS) $(thermal_la_DEPENDENCIES) $(EXTRA_thermal_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(thermal_la_LINK) $(am_thermal_la_rpath) $(thermal_la_OBJECTS) $(thermal_la_LIBADD) $(LIBS)

threshold.la: $(threshold_la_OBJECTS) $(threshold_la_DEPENDENCIES) $(EXTRA_threshold_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(threshold_la_LINK) $(am_threshold_la_rpath) $(threshold_la_OBJECTS) $(threshold_la_LIBADD) $(LIBS)

tokyotyrant.la: $(tokyotyrant_la_OBJECTS) $(tokyotyrant_la_DEPENDENCIES) $(EXTRA_tokyotyrant_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(tokyotyrant_la_LINK) $(am_tokyotyrant_la_rpath) $(tokyotyrant_la_OBJECTS) $(tokyotyrant_la_LIBADD) $(LIBS)

turbostat.la: $(turbostat_la_OBJECTS) $(turbostat_la_DEPENDENCIES) $(EXTRA_turbostat_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(turbostat_la_LINK) $(am_turbostat_la_rpath) $(turbostat_la_OBJECTS) $(turbostat_la_LIBADD) $(LIBS)

unixsock.la: $(unixsock_la_OBJECTS) $(unixsock_la_DEPENDENCIES) $(EXTRA_unixsock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(unixsock_la_LINK) $(am_unixsock_la_rpath) $(unixsock_la_OBJECTS) $(unixsock_la_LIBADD) $(LIBS)

uptime.la: $(uptime_la_OBJECTS) $(uptime_la_DEPENDENCIES) $(EXTRA_uptime_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(uptime_la_LINK) $(am_uptime_la_rpath) $(uptime_la_OBJECTS) $(uptime_la_LIBADD) $(LIBS)

users.la: $(users_la_OBJECTS) $(users_la_DEPENDENCIES) $(EXTRA_users_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(users_la_LINK) $(am_users_la_rpath) $(users_la_OBJECTS) $(users_la_LIBADD) $(LIBS)

uuid.la: $(uuid_la_OBJECTS) $(uuid_la_DEPENDENCIES) $(EXTRA_uuid_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(uuid_la_LINK) $(am_uuid_la_rpath) $(uuid_la_OBJECTS) $(uuid_la_LIBADD) $(LIBS)

varnish.la: $(varnish_la_OBJECTS) $(varnish_la_DEPENDENCIES) $(EXTRA_varnish_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(varnish_la_LINK) $(am_varnish_la_rpath) $(varnish_la_OBJECTS) $(varnish_la_LIBADD) $(LIBS)

virt.la: $(virt_la_OBJECTS) $(virt_la_DEPENDENCIES) $(EXTRA_virt_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virt_la_LINK) $(am_virt_la_rpath) $(virt_la_OBJECTS) $(virt_la_LIBADD) $(LIBS)

vmem.la: $(vmem_la_OBJECTS) $(vmem_la_DEPENDENCIES) $(EXTRA_vmem_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(vmem_la_LINK) $(am_vmem_la_rpath) $(vmem_la_OBJECTS) $(vmem_la_LIBADD) $(LIBS)

vserver.la: $(vserver_la_OBJECTS) $(vserver_la_DEPENDENCIES) $(EXTRA_vserver_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(vserver_la_LINK) $(am_vserver_la_rpath) $(vserver_la_OBJECTS) $(vserver_la_LIBADD) $(LIBS)

wireless.la: $(wireless_la_OBJECTS) $(wireless_la_DEPENDENCIES) $(EXTRA_wireless_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(wireless_la_LINK) $(am_wireless_la_rpath) $(wireless_la_OBJECTS) $(wireless_la_LIBADD) $(LIBS)

write_graphite.la: $(write_graphite_la_OBJECTS) $(write_graphite_la_DEPENDENCIES) $(EXTRA_write_graphite_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_graphite_la_LINK) $(am_write_graphite_la_rpath) $(write_graphite_la_OBJECTS) $(write_graphite_la_LIBADD) $(LIBS)

write_http.la: $(write_http_la_OBJECTS) $(write_http_la_DEPENDENCIES) $(EXTRA_write_http_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_http_la_LINK) $(am_write_http_la_rpath) $(write_http_la_OBJECTS) $(write_http_la_LIBADD) $(LIBS)

write_kafka.la: $(write_kafka_la_OBJECTS) $(write_kafka_la_DEPENDENCIES) $(EXTRA_write_kafka_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_kafka_la_LINK) $(am_write_kafka_la_rpath) $(write_kafka_la_OBJECTS) $(write_kafka_la_LIBADD) $(LIBS)

write_log.la: $(write_log_la_OBJECTS) $(write_log_la_DEPENDENCIES) $(EXTRA_write_log_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_log_la_LINK) $(am_write_log_la_rpath) $(write_log_la_OBJECTS) $(write_log_la_LIBADD) $(LIBS)

write_mongodb.la: $(write_mongodb_la_OBJECTS) $(write_mongodb_la_DEPENDENCIES) $(EXTRA_write_mongodb_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_mongodb_la_LINK) $(am_write_mongodb_la_rpath) $(write_mongodb_la_OBJECTS) $(write_mongodb_la_LIBADD) $(LIBS)

write_prometheus.la: $(write_prometheus_la_OBJECTS) $(write_prometheus_la_DEPENDENCIES) $(EXTRA_write_prometheus_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_prometheus_la_LINK) $(am_write_prometheus_la_rpath) $(write_prometheus_la_OBJECTS) $(write_prometheus_la_LIBADD) $(LIBS)

write_redis.la: $(write_redis_la_OBJECTS) $(write_redis_la_DEPENDENCIES) $(EXTRA_write_redis_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_redis_la_LINK) $(am_write_redis_la_rpath) $(write_redis_la_OBJECTS) $(write_redis_la_LIBADD) $(LIBS)

write_riemann.la: $(write_riemann_la_OBJECTS) $(write_riemann_la_DEPENDENCIES) $(EXTRA_write_riemann_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_riemann_la_LINK) $(am_write_riemann_la_rpath) $(write_riemann_la_OBJECTS) $(write_riemann_la_LIBADD) $(LIBS)

write_sensu.la: $(write_sensu_la_OBJECTS) $(write_sensu_la_DEPENDENCIES) $(EXTRA_write_sensu_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_sensu_la_LINK) $(am_write_sensu_la_rpath) $(write_sensu_la_OBJECTS) $(write_sensu_la_LIBADD) $(LIBS)

write_tsdb.la: $(write_tsdb_la_OBJECTS) $(write_tsdb_la_DEPENDENCIES) $(EXTRA_write_tsdb_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(write_tsdb_la_LINK) $(am_write_tsdb_la_rpath) $(write_tsdb_la_OBJECTS) $(write_tsdb_la_LIBADD) $(LIBS)

xencpu.la: $(xencpu_la_OBJECTS) $(xencpu_la_DEPENDENCIES) $(EXTRA_xencpu_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(xencpu_la_LINK) $(am_xencpu_la_rpath) $(xencpu_la_OBJECTS) $(xencpu_la_LIBADD) $(LIBS)

xmms.la: $(xmms_la_OBJECTS) $(xmms_la_DEPENDENCIES) $(EXTRA_xmms_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(xmms_la_LINK) $(am_xmms_la_rpath) $(xmms_la_OBJECTS) $(xmms_la_LIBADD) $(LIBS)

zfs_arc.la: $(zfs_arc_la_OBJECTS) $(zfs_arc_la_DEPENDENCIES) $(EXTRA_zfs_arc_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(zfs_arc_la_LINK) $(am_zfs_arc_la_rpath) $(zfs_arc_la_OBJECTS) $(zfs_arc_la_LIBADD) $(LIBS)

zone.la: $(zone_la_OBJECTS) $(zone_la_DEPENDENCIES) $(EXTRA_zone_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(zone_la_LINK) $(am_zone_la_rpath) $(zone_la_OBJECTS) $(zone_la_LIBADD) $(LIBS)

zookeeper.la: $(zookeeper_la_OBJECTS) $(zookeeper_la_DEPENDENCIES) $(EXTRA_zookeeper_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(zookeeper_la_LINK) $(am_zookeeper_la_rpath) $(zookeeper_la_OBJECTS) $(zookeeper_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

collectd-nagios$(EXEEXT): $(collectd_nagios_OBJECTS) $(collectd_nagios_DEPENDENCIES) $(EXTRA_collectd_nagios_DEPENDENCIES) 
	@rm -f collectd-nagios$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collectd_nagios_OBJECTS) $(collectd_nagios_LDADD) $(LIBS)

collectd-tg$(EXEEXT): $(collectd_tg_OBJECTS) $(collectd_tg_DEPENDENCIES) $(EXTRA_collectd_tg_DEPENDENCIES) 
	@rm -f collectd-tg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collectd_tg_OBJECTS) $(collectd_tg_LDADD) $(LIBS)

collectdctl$(EXEEXT): $(collectdctl_OBJECTS) $(collectdctl_DEPENDENCIES) $(EXTRA_collectdctl_DEPENDENCIES) 
	@rm -f collectdctl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collectdctl_OBJECTS) $(collectdctl_LDADD) $(LIBS)

collectdmon$(EXEEXT): $(collectdmon_OBJECTS) $(collectdmon_DEPENDENCIES) $(EXTRA_collectdmon_DEPENDENCIES) 
	@rm -f collectdmon$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collectdmon_OBJECTS) $(collectdmon_LDADD) $(LIBS)

test_format_graphite$(EXEEXT): $(test_format_graphite_OBJECTS) $(test_format_graphite_DEPENDENCIES) $(EXTRA_test_format_graphite_DEPENDENCIES) 
	@rm -f test_format_graphite$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_format_graphite_OBJECTS) $(test_format_graphite_LDADD) $(LIBS)

test_format_json$(EXEEXT): $(test_format_json_OBJECTS) $(test_format_json_DEPENDENCIES) $(EXTRA_test_format_json_DEPENDENCIES) 
	@rm -f test_format_json$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_format_json_OBJECTS) $(test_format_json_LDADD) $(LIBS)

test_plugin_ceph$(EXEEXT): $(test_plugin_ceph_OBJECTS) $(test_plugin_ceph_DEPENDENCIES) $(EXTRA_test_plugin_ceph_DEPENDENCIES) 
	@rm -f test_plugin_ceph$(EXEEXT)
	$(AM_V_CCLD)$(test_plugin_ceph_LINK) $(test_plugin_ceph_OBJECTS) $(test_plugin_ceph_LDADD) $(LIBS)

test_utils_cmds$(EXEEXT): $(test_utils_cmds_OBJECTS) $(test_utils_cmds_DEPENDENCIES) $(EXTRA_test_utils_cmds_DEPENDENCIES) 
	@rm -f test_utils_cmds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_utils_cmds_OBJECTS) $(test_utils_cmds_LDADD) $(LIBS)

test_utils_latency$(EXEEXT): $(test_utils_latency_OBJECTS) $(test_utils_latency_DEPENDENCIES) $(EXTRA_test_utils_latency_DEPENDENCIES) 
	@rm -f test_utils_latency$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_utils_latency_OBJECTS) $(test_utils_latency_LDADD) $(LIBS)

test_utils_mount$(EXEEXT): $(test_utils_mount_OBJECTS) $(test_utils_mount_DEPENDENCIES) $(EXTRA_test_utils_mount_DEPENDENCIES) 
	@rm -f test_utils_mount$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_utils_mount_OBJECTS) $(test_utils_mount_LDADD) $(LIBS)

test_utils_vl_lookup$(EXEEXT): $(test_utils_vl_lookup_OBJECTS) $(test_utils_vl_lookup_DEPENDENCIES) $(EXTRA_test_utils_vl_lookup_DEPENDENCIES) 
	@rm -f test_utils_vl_lookup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_utils_vl_lookup_OBJECTS) $(test_utils_vl_lookup_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aggregation.Plo
include ./$(DEPDIR)/amqp_la-amqp.Plo
include ./$(DEPDIR)/apache_la-apache.Plo
include ./$(DEPDIR)/apcups.Plo
include ./$(DEPDIR)/apple_sensors.Plo
include ./$(DEPDIR)/aquaero_la-aquaero.Plo
include ./$(DEPDIR)/ascent_la-ascent.Plo
include ./$(DEPDIR)/barometer.Plo
include ./$(DEPDIR)/battery.Plo
include ./$(DEPDIR)/battery_statefs.Plo
include ./$(DEPDIR)/bind_la-bind.Plo
include ./$(DEPDIR)/ceph_la-ceph.Plo
include ./$(DEPDIR)/cgroups.Plo
include ./$(DEPDIR)/chrony.Plo
include ./$(DEPDIR)/collectd_nagios-collectd-nagios.Po
include ./$(DEPDIR)/collectd_tg-collectd-tg.Po
include ./$(DEPDIR)/collectdctl-collectdctl.Po
include ./$(DEPDIR)/collectdmon.Po
include ./$(DEPDIR)/conntrack.Plo
include ./$(DEPDIR)/contextswitch.Plo
include ./$(DEPDIR)/cpu_la-cpu.Plo
include ./$(DEPDIR)/cpufreq.Plo
include ./$(DEPDIR)/cpusleep.Plo
include ./$(DEPDIR)/csv.Plo
include ./$(DEPDIR)/curl_json_la-curl_json.Plo
include ./$(DEPDIR)/curl_json_la-utils_curl_stats.Plo
include ./$(DEPDIR)/curl_la-curl.Plo
include ./$(DEPDIR)/curl_la-utils_curl_stats.Plo
include ./$(DEPDIR)/curl_la-utils_match.Plo
include ./$(DEPDIR)/curl_xml_la-curl_xml.Plo
include ./$(DEPDIR)/curl_xml_la-utils_curl_stats.Plo
include ./$(DEPDIR)/dbi_la-dbi.Plo
include ./$(DEPDIR)/dbi_la-utils_db_query.Plo
include ./$(DEPDIR)/df.Plo
include ./$(DEPDIR)/disk_la-disk.Plo
include ./$(DEPDIR)/dns.Plo
include ./$(DEPDIR)/dpdkstat_la-dpdkstat.Plo
include ./$(DEPDIR)/drbd.Plo
include ./$(DEPDIR)/email.Plo
include ./$(DEPDIR)/entropy.Plo
include ./$(DEPDIR)/ethstat.Plo
include ./$(DEPDIR)/exec.Plo
include ./$(DEPDIR)/fhcount.Plo
include ./$(DEPDIR)/filecount.Plo
include ./$(DEPDIR)/fscache.Plo
include ./$(DEPDIR)/gmond_la-gmond.Plo
include ./$(DEPDIR)/gps_la-gps.Plo
include ./$(DEPDIR)/grpc_la-collectd.grpc.pb.Plo
include ./$(DEPDIR)/grpc_la-collectd.pb.Plo
include ./$(DEPDIR)/grpc_la-grpc.Plo
include ./$(DEPDIR)/grpc_la-types.pb.Plo
include ./$(DEPDIR)/hddtemp.Plo
include ./$(DEPDIR)/hugepages.Plo
include ./$(DEPDIR)/intel_rdt_la-intel_rdt.Plo
include ./$(DEPDIR)/interface_la-interface.Plo
include ./$(DEPDIR)/ipc.Plo
include ./$(DEPDIR)/ipmi_la-ipmi.Plo
include ./$(DEPDIR)/iptables_la-iptables.Plo
include ./$(DEPDIR)/ipvs_la-ipvs.Plo
include ./$(DEPDIR)/irq.Plo
include ./$(DEPDIR)/iwinfo.Plo
include ./$(DEPDIR)/java_la-java.Plo
include ./$(DEPDIR)/libformat_graphite_la-utils_format_graphite.Plo
include ./$(DEPDIR)/libformat_json_la-utils_format_json.Plo
include ./$(DEPDIR)/load_la-load.Plo
include ./$(DEPDIR)/log_logstash_la-log_logstash.Plo
include ./$(DEPDIR)/logfile.Plo
include ./$(DEPDIR)/lpar.Plo
include ./$(DEPDIR)/lua_la-lua.Plo
include ./$(DEPDIR)/lua_la-utils_lua.Plo
include ./$(DEPDIR)/lvm_la-lvm.Plo
include ./$(DEPDIR)/madwifi.Plo
include ./$(DEPDIR)/match_empty_counter.Plo
include ./$(DEPDIR)/match_hashed.Plo
include ./$(DEPDIR)/match_regex.Plo
include ./$(DEPDIR)/match_timediff.Plo
include ./$(DEPDIR)/match_value.Plo
include ./$(DEPDIR)/mbmon.Plo
include ./$(DEPDIR)/md.Plo
include ./$(DEPDIR)/memcachec_la-memcachec.Plo
include ./$(DEPDIR)/memcachec_la-utils_match.Plo
include ./$(DEPDIR)/memcached.Plo
include ./$(DEPDIR)/memory_la-memory.Plo
include ./$(DEPDIR)/mic_la-mic.Plo
include ./$(DEPDIR)/modbus_la-modbus.Plo
include ./$(DEPDIR)/mqtt_la-mqtt.Plo
include ./$(DEPDIR)/multimeter.Plo
include ./$(DEPDIR)/mysql_la-mysql.Plo
include ./$(DEPDIR)/netapp_la-netapp.Plo
include ./$(DEPDIR)/netlink_la-netlink.Plo
include ./$(DEPDIR)/network_la-network.Plo
include ./$(DEPDIR)/network_la-utils_fbhash.Plo
include ./$(DEPDIR)/nfs.Plo
include ./$(DEPDIR)/nginx_la-nginx.Plo
include ./$(DEPDIR)/notify_desktop_la-notify_desktop.Plo
include ./$(DEPDIR)/notify_email.Plo
include ./$(DEPDIR)/notify_nagios.Plo
include ./$(DEPDIR)/ntpd.Plo
include ./$(DEPDIR)/numa.Plo
include ./$(DEPDIR)/nut_la-nut.Plo
include ./$(DEPDIR)/olsrd.Plo
include ./$(DEPDIR)/onewire_la-onewire.Plo
include ./$(DEPDIR)/openldap_la-openldap.Plo
include ./$(DEPDIR)/openvpn.Plo
include ./$(DEPDIR)/oracle_la-oracle.Plo
include ./$(DEPDIR)/oracle_la-utils_db_query.Plo
include ./$(DEPDIR)/perl_la-perl.Plo
include ./$(DEPDIR)/pf.Plo
include ./$(DEPDIR)/pinba_la-pinba.Plo
include ./$(DEPDIR)/pinba_la-pinba.pb-c.Plo
include ./$(DEPDIR)/ping_la-ping.Plo
include ./$(DEPDIR)/postgresql_la-postgresql.Plo
include ./$(DEPDIR)/postgresql_la-utils_db_query.Plo
include ./$(DEPDIR)/powerdns.Plo
include ./$(DEPDIR)/processes.Plo
include ./$(DEPDIR)/protocols.Plo
include ./$(DEPDIR)/python_la-pyconfig.Plo
include ./$(DEPDIR)/python_la-python.Plo
include ./$(DEPDIR)/python_la-pyvalues.Plo
include ./$(DEPDIR)/redis_la-redis.Plo
include ./$(DEPDIR)/routeros_la-routeros.Plo
include ./$(DEPDIR)/rrdcached_la-rrdcached.Plo
include ./$(DEPDIR)/rrdcached_la-utils_rrdcreate.Plo
include ./$(DEPDIR)/rrdtool_la-rrdtool.Plo
include ./$(DEPDIR)/rrdtool_la-utils_rrdcreate.Plo
include ./$(DEPDIR)/sensors_la-sensors.Plo
include ./$(DEPDIR)/serial.Plo
include ./$(DEPDIR)/sigrok_la-sigrok.Plo
include ./$(DEPDIR)/smart_la-smart.Plo
include ./$(DEPDIR)/snmp_la-snmp.Plo
include ./$(DEPDIR)/statsd.Plo
include ./$(DEPDIR)/swap_la-swap.Plo
include ./$(DEPDIR)/syslog.Plo
include ./$(DEPDIR)/table.Plo
include ./$(DEPDIR)/tail.Plo
include ./$(DEPDIR)/tail_csv.Plo
include ./$(DEPDIR)/tape.Plo
include ./$(DEPDIR)/target_notification.Plo
include ./$(DEPDIR)/target_replace.Plo
include ./$(DEPDIR)/target_scale.Plo
include ./$(DEPDIR)/target_set.Plo
include ./$(DEPDIR)/target_v5upgrade.Plo
include ./$(DEPDIR)/tcpconns.Plo
include ./$(DEPDIR)/teamspeak2.Plo
include ./$(DEPDIR)/ted.Plo
include ./$(DEPDIR)/test_plugin_ceph-ceph_test.Po
include ./$(DEPDIR)/thermal.Plo
include ./$(DEPDIR)/threshold.Plo
include ./$(DEPDIR)/tokyotyrant_la-tokyotyrant.Plo
include ./$(DEPDIR)/turbostat.Plo
include ./$(DEPDIR)/unixsock.Plo
include ./$(DEPDIR)/uptime_la-uptime.Plo
include ./$(DEPDIR)/users_la-users.Plo
include ./$(DEPDIR)/utils_cmd_flush.Plo
include ./$(DEPDIR)/utils_cmd_getthreshold.Plo
include ./$(DEPDIR)/utils_cmd_getval.Plo
include ./$(DEPDIR)/utils_cmd_listval.Plo
include ./$(DEPDIR)/utils_cmd_putnotif.Plo
include ./$(DEPDIR)/utils_cmd_putval.Plo
include ./$(DEPDIR)/utils_cmds.Plo
include ./$(DEPDIR)/utils_cmds_test.Po
include ./$(DEPDIR)/utils_dns.Plo
include ./$(DEPDIR)/utils_format_graphite_test.Po
include ./$(DEPDIR)/utils_format_json_test.Po
include ./$(DEPDIR)/utils_latency.Plo
include ./$(DEPDIR)/utils_latency_config.Plo
include ./$(DEPDIR)/utils_latency_test.Po
include ./$(DEPDIR)/utils_match.Plo
include ./$(DEPDIR)/utils_mount.Plo
include ./$(DEPDIR)/utils_mount_test.Po
include ./$(DEPDIR)/utils_parse_option.Plo
include ./$(DEPDIR)/utils_tail.Plo
include ./$(DEPDIR)/utils_tail_match.Plo
include ./$(DEPDIR)/utils_vl_lookup.Plo
include ./$(DEPDIR)/utils_vl_lookup_test.Po
include ./$(DEPDIR)/uuid_la-uuid.Plo
include ./$(DEPDIR)/varnish_la-varnish.Plo
include ./$(DEPDIR)/virt_la-virt.Plo
include ./$(DEPDIR)/vmem.Plo
include ./$(DEPDIR)/vserver.Plo
include ./$(DEPDIR)/wireless.Plo
include ./$(DEPDIR)/write_graphite.Plo
include ./$(DEPDIR)/write_http_la-utils_format_kairosdb.Plo
include ./$(DEPDIR)/write_http_la-write_http.Plo
include ./$(DEPDIR)/write_kafka_la-utils_crc32.Plo
include ./$(DEPDIR)/write_kafka_la-write_kafka.Plo
include ./$(DEPDIR)/write_log.Plo
include ./$(DEPDIR)/write_mongodb_la-write_mongodb.Plo
include ./$(DEPDIR)/write_prometheus_la-prometheus.pb-c.Plo
include ./$(DEPDIR)/write_prometheus_la-write_prometheus.Plo
include ./$(DEPDIR)/write_redis_la-write_redis.Plo
include ./$(DEPDIR)/write_riemann_la-write_riemann.Plo
include ./$(DEPDIR)/write_riemann_la-write_riemann_threshold.Plo
include ./$(DEPDIR)/write_sensu.Plo
include ./$(DEPDIR)/write_tsdb.Plo
include ./$(DEPDIR)/xencpu_la-xencpu.Plo
include ./$(DEPDIR)/xmms_la-xmms.Plo
include ./$(DEPDIR)/zfs_arc.Plo
include ./$(DEPDIR)/zone.Plo
include ./$(DEPDIR)/zookeeper.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

amqp_la-amqp.lo: amqp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(amqp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT amqp_la-amqp.lo -MD -MP -MF $(DEPDIR)/amqp_la-amqp.Tpo -c -o amqp_la-amqp.lo `test -f 'amqp.c' || echo '$(srcdir)/'`amqp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/amqp_la-amqp.Tpo $(DEPDIR)/amqp_la-amqp.Plo
#	$(AM_V_CC)source='amqp.c' object='amqp_la-amqp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(amqp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o amqp_la-amqp.lo `test -f 'amqp.c' || echo '$(srcdir)/'`amqp.c

apache_la-apache.lo: apache.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apache_la_CFLAGS) $(CFLAGS) -MT apache_la-apache.lo -MD -MP -MF $(DEPDIR)/apache_la-apache.Tpo -c -o apache_la-apache.lo `test -f 'apache.c' || echo '$(srcdir)/'`apache.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/apache_la-apache.Tpo $(DEPDIR)/apache_la-apache.Plo
#	$(AM_V_CC)source='apache.c' object='apache_la-apache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(apache_la_CFLAGS) $(CFLAGS) -c -o apache_la-apache.lo `test -f 'apache.c' || echo '$(srcdir)/'`apache.c

aquaero_la-aquaero.lo: aquaero.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aquaero_la_CFLAGS) $(CFLAGS) -MT aquaero_la-aquaero.lo -MD -MP -MF $(DEPDIR)/aquaero_la-aquaero.Tpo -c -o aquaero_la-aquaero.lo `test -f 'aquaero.c' || echo '$(srcdir)/'`aquaero.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/aquaero_la-aquaero.Tpo $(DEPDIR)/aquaero_la-aquaero.Plo
#	$(AM_V_CC)source='aquaero.c' object='aquaero_la-aquaero.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(aquaero_la_CFLAGS) $(CFLAGS) -c -o aquaero_la-aquaero.lo `test -f 'aquaero.c' || echo '$(srcdir)/'`aquaero.c

ascent_la-ascent.lo: ascent.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ascent_la_CFLAGS) $(CFLAGS) -MT ascent_la-ascent.lo -MD -MP -MF $(DEPDIR)/ascent_la-ascent.Tpo -c -o ascent_la-ascent.lo `test -f 'ascent.c' || echo '$(srcdir)/'`ascent.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ascent_la-ascent.Tpo $(DEPDIR)/ascent_la-ascent.Plo
#	$(AM_V_CC)source='ascent.c' object='ascent_la-ascent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ascent_la_CFLAGS) $(CFLAGS) -c -o ascent_la-ascent.lo `test -f 'ascent.c' || echo '$(srcdir)/'`ascent.c

bind_la-bind.lo: bind.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bind_la_CFLAGS) $(CFLAGS) -MT bind_la-bind.lo -MD -MP -MF $(DEPDIR)/bind_la-bind.Tpo -c -o bind_la-bind.lo `test -f 'bind.c' || echo '$(srcdir)/'`bind.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bind_la-bind.Tpo $(DEPDIR)/bind_la-bind.Plo
#	$(AM_V_CC)source='bind.c' object='bind_la-bind.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bind_la_CFLAGS) $(CFLAGS) -c -o bind_la-bind.lo `test -f 'bind.c' || echo '$(srcdir)/'`bind.c

ceph_la-ceph.lo: ceph.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ceph_la_CPPFLAGS) $(CPPFLAGS) $(ceph_la_CFLAGS) $(CFLAGS) -MT ceph_la-ceph.lo -MD -MP -MF $(DEPDIR)/ceph_la-ceph.Tpo -c -o ceph_la-ceph.lo `test -f 'ceph.c' || echo '$(srcdir)/'`ceph.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ceph_la-ceph.Tpo $(DEPDIR)/ceph_la-ceph.Plo
#	$(AM_V_CC)source='ceph.c' object='ceph_la-ceph.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ceph_la_CPPFLAGS) $(CPPFLAGS) $(ceph_la_CFLAGS) $(CFLAGS) -c -o ceph_la-ceph.lo `test -f 'ceph.c' || echo '$(srcdir)/'`ceph.c

cpu_la-cpu.lo: cpu.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpu_la_CFLAGS) $(CFLAGS) -MT cpu_la-cpu.lo -MD -MP -MF $(DEPDIR)/cpu_la-cpu.Tpo -c -o cpu_la-cpu.lo `test -f 'cpu.c' || echo '$(srcdir)/'`cpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/cpu_la-cpu.Tpo $(DEPDIR)/cpu_la-cpu.Plo
#	$(AM_V_CC)source='cpu.c' object='cpu_la-cpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cpu_la_CFLAGS) $(CFLAGS) -c -o cpu_la-cpu.lo `test -f 'cpu.c' || echo '$(srcdir)/'`cpu.c

curl_la-curl.lo: curl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -MT curl_la-curl.lo -MD -MP -MF $(DEPDIR)/curl_la-curl.Tpo -c -o curl_la-curl.lo `test -f 'curl.c' || echo '$(srcdir)/'`curl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_la-curl.Tpo $(DEPDIR)/curl_la-curl.Plo
#	$(AM_V_CC)source='curl.c' object='curl_la-curl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -c -o curl_la-curl.lo `test -f 'curl.c' || echo '$(srcdir)/'`curl.c

curl_la-utils_curl_stats.lo: utils_curl_stats.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -MT curl_la-utils_curl_stats.lo -MD -MP -MF $(DEPDIR)/curl_la-utils_curl_stats.Tpo -c -o curl_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_la-utils_curl_stats.Tpo $(DEPDIR)/curl_la-utils_curl_stats.Plo
#	$(AM_V_CC)source='utils_curl_stats.c' object='curl_la-utils_curl_stats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -c -o curl_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c

curl_la-utils_match.lo: utils_match.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -MT curl_la-utils_match.lo -MD -MP -MF $(DEPDIR)/curl_la-utils_match.Tpo -c -o curl_la-utils_match.lo `test -f 'utils_match.c' || echo '$(srcdir)/'`utils_match.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_la-utils_match.Tpo $(DEPDIR)/curl_la-utils_match.Plo
#	$(AM_V_CC)source='utils_match.c' object='curl_la-utils_match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_la_CFLAGS) $(CFLAGS) -c -o curl_la-utils_match.lo `test -f 'utils_match.c' || echo '$(srcdir)/'`utils_match.c

curl_json_la-curl_json.lo: curl_json.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(curl_json_la_CPPFLAGS) $(CPPFLAGS) $(curl_json_la_CFLAGS) $(CFLAGS) -MT curl_json_la-curl_json.lo -MD -MP -MF $(DEPDIR)/curl_json_la-curl_json.Tpo -c -o curl_json_la-curl_json.lo `test -f 'curl_json.c' || echo '$(srcdir)/'`curl_json.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_json_la-curl_json.Tpo $(DEPDIR)/curl_json_la-curl_json.Plo
#	$(AM_V_CC)source='curl_json.c' object='curl_json_la-curl_json.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(curl_json_la_CPPFLAGS) $(CPPFLAGS) $(curl_json_la_CFLAGS) $(CFLAGS) -c -o curl_json_la-curl_json.lo `test -f 'curl_json.c' || echo '$(srcdir)/'`curl_json.c

curl_json_la-utils_curl_stats.lo: utils_curl_stats.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(curl_json_la_CPPFLAGS) $(CPPFLAGS) $(curl_json_la_CFLAGS) $(CFLAGS) -MT curl_json_la-utils_curl_stats.lo -MD -MP -MF $(DEPDIR)/curl_json_la-utils_curl_stats.Tpo -c -o curl_json_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_json_la-utils_curl_stats.Tpo $(DEPDIR)/curl_json_la-utils_curl_stats.Plo
#	$(AM_V_CC)source='utils_curl_stats.c' object='curl_json_la-utils_curl_stats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(curl_json_la_CPPFLAGS) $(CPPFLAGS) $(curl_json_la_CFLAGS) $(CFLAGS) -c -o curl_json_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c

curl_xml_la-curl_xml.lo: curl_xml.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_xml_la_CFLAGS) $(CFLAGS) -MT curl_xml_la-curl_xml.lo -MD -MP -MF $(DEPDIR)/curl_xml_la-curl_xml.Tpo -c -o curl_xml_la-curl_xml.lo `test -f 'curl_xml.c' || echo '$(srcdir)/'`curl_xml.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_xml_la-curl_xml.Tpo $(DEPDIR)/curl_xml_la-curl_xml.Plo
#	$(AM_V_CC)source='curl_xml.c' object='curl_xml_la-curl_xml.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_xml_la_CFLAGS) $(CFLAGS) -c -o curl_xml_la-curl_xml.lo `test -f 'curl_xml.c' || echo '$(srcdir)/'`curl_xml.c

curl_xml_la-utils_curl_stats.lo: utils_curl_stats.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_xml_la_CFLAGS) $(CFLAGS) -MT curl_xml_la-utils_curl_stats.lo -MD -MP -MF $(DEPDIR)/curl_xml_la-utils_curl_stats.Tpo -c -o curl_xml_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/curl_xml_la-utils_curl_stats.Tpo $(DEPDIR)/curl_xml_la-utils_curl_stats.Plo
#	$(AM_V_CC)source='utils_curl_stats.c' object='curl_xml_la-utils_curl_stats.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(curl_xml_la_CFLAGS) $(CFLAGS) -c -o curl_xml_la-utils_curl_stats.lo `test -f 'utils_curl_stats.c' || echo '$(srcdir)/'`utils_curl_stats.c

dbi_la-dbi.lo: dbi.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dbi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dbi_la-dbi.lo -MD -MP -MF $(DEPDIR)/dbi_la-dbi.Tpo -c -o dbi_la-dbi.lo `test -f 'dbi.c' || echo '$(srcdir)/'`dbi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dbi_la-dbi.Tpo $(DEPDIR)/dbi_la-dbi.Plo
#	$(AM_V_CC)source='dbi.c' object='dbi_la-dbi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dbi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dbi_la-dbi.lo `test -f 'dbi.c' || echo '$(srcdir)/'`dbi.c

dbi_la-utils_db_query.lo: utils_db_query.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dbi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dbi_la-utils_db_query.lo -MD -MP -MF $(DEPDIR)/dbi_la-utils_db_query.Tpo -c -o dbi_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dbi_la-utils_db_query.Tpo $(DEPDIR)/dbi_la-utils_db_query.Plo
#	$(AM_V_CC)source='utils_db_query.c' object='dbi_la-utils_db_query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dbi_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dbi_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c

disk_la-disk.lo: disk.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(disk_la_CFLAGS) $(CFLAGS) -MT disk_la-disk.lo -MD -MP -MF $(DEPDIR)/disk_la-disk.Tpo -c -o disk_la-disk.lo `test -f 'disk.c' || echo '$(srcdir)/'`disk.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/disk_la-disk.Tpo $(DEPDIR)/disk_la-disk.Plo
#	$(AM_V_CC)source='disk.c' object='disk_la-disk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(disk_la_CFLAGS) $(CFLAGS) -c -o disk_la-disk.lo `test -f 'disk.c' || echo '$(srcdir)/'`disk.c

dpdkstat_la-dpdkstat.lo: dpdkstat.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpdkstat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dpdkstat_la-dpdkstat.lo -MD -MP -MF $(DEPDIR)/dpdkstat_la-dpdkstat.Tpo -c -o dpdkstat_la-dpdkstat.lo `test -f 'dpdkstat.c' || echo '$(srcdir)/'`dpdkstat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/dpdkstat_la-dpdkstat.Tpo $(DEPDIR)/dpdkstat_la-dpdkstat.Plo
#	$(AM_V_CC)source='dpdkstat.c' object='dpdkstat_la-dpdkstat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dpdkstat_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dpdkstat_la-dpdkstat.lo `test -f 'dpdkstat.c' || echo '$(srcdir)/'`dpdkstat.c

gmond_la-gmond.lo: gmond.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmond_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT gmond_la-gmond.lo -MD -MP -MF $(DEPDIR)/gmond_la-gmond.Tpo -c -o gmond_la-gmond.lo `test -f 'gmond.c' || echo '$(srcdir)/'`gmond.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gmond_la-gmond.Tpo $(DEPDIR)/gmond_la-gmond.Plo
#	$(AM_V_CC)source='gmond.c' object='gmond_la-gmond.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(gmond_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o gmond_la-gmond.lo `test -f 'gmond.c' || echo '$(srcdir)/'`gmond.c

gps_la-gps.lo: gps.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gps_la_CFLAGS) $(CFLAGS) -MT gps_la-gps.lo -MD -MP -MF $(DEPDIR)/gps_la-gps.Tpo -c -o gps_la-gps.lo `test -f 'gps.c' || echo '$(srcdir)/'`gps.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/gps_la-gps.Tpo $(DEPDIR)/gps_la-gps.Plo
#	$(AM_V_CC)source='gps.c' object='gps_la-gps.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gps_la_CFLAGS) $(CFLAGS) -c -o gps_la-gps.lo `test -f 'gps.c' || echo '$(srcdir)/'`gps.c

intel_rdt_la-intel_rdt.lo: intel_rdt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intel_rdt_la_CFLAGS) $(CFLAGS) -MT intel_rdt_la-intel_rdt.lo -MD -MP -MF $(DEPDIR)/intel_rdt_la-intel_rdt.Tpo -c -o intel_rdt_la-intel_rdt.lo `test -f 'intel_rdt.c' || echo '$(srcdir)/'`intel_rdt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/intel_rdt_la-intel_rdt.Tpo $(DEPDIR)/intel_rdt_la-intel_rdt.Plo
#	$(AM_V_CC)source='intel_rdt.c' object='intel_rdt_la-intel_rdt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(intel_rdt_la_CFLAGS) $(CFLAGS) -c -o intel_rdt_la-intel_rdt.lo `test -f 'intel_rdt.c' || echo '$(srcdir)/'`intel_rdt.c

interface_la-interface.lo: interface.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interface_la_CFLAGS) $(CFLAGS) -MT interface_la-interface.lo -MD -MP -MF $(DEPDIR)/interface_la-interface.Tpo -c -o interface_la-interface.lo `test -f 'interface.c' || echo '$(srcdir)/'`interface.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/interface_la-interface.Tpo $(DEPDIR)/interface_la-interface.Plo
#	$(AM_V_CC)source='interface.c' object='interface_la-interface.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(interface_la_CFLAGS) $(CFLAGS) -c -o interface_la-interface.lo `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

ipmi_la-ipmi.lo: ipmi.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ipmi_la_CFLAGS) $(CFLAGS) -MT ipmi_la-ipmi.lo -MD -MP -MF $(DEPDIR)/ipmi_la-ipmi.Tpo -c -o ipmi_la-ipmi.lo `test -f 'ipmi.c' || echo '$(srcdir)/'`ipmi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ipmi_la-ipmi.Tpo $(DEPDIR)/ipmi_la-ipmi.Plo
#	$(AM_V_CC)source='ipmi.c' object='ipmi_la-ipmi.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ipmi_la_CFLAGS) $(CFLAGS) -c -o ipmi_la-ipmi.lo `test -f 'ipmi.c' || echo '$(srcdir)/'`ipmi.c

iptables_la-iptables.lo: iptables.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iptables_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iptables_la-iptables.lo -MD -MP -MF $(DEPDIR)/iptables_la-iptables.Tpo -c -o iptables_la-iptables.lo `test -f 'iptables.c' || echo '$(srcdir)/'`iptables.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iptables_la-iptables.Tpo $(DEPDIR)/iptables_la-iptables.Plo
#	$(AM_V_CC)source='iptables.c' object='iptables_la-iptables.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iptables_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iptables_la-iptables.lo `test -f 'iptables.c' || echo '$(srcdir)/'`iptables.c

ipvs_la-ipvs.lo: ipvs.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ipvs_la_CFLAGS) $(CFLAGS) -MT ipvs_la-ipvs.lo -MD -MP -MF $(DEPDIR)/ipvs_la-ipvs.Tpo -c -o ipvs_la-ipvs.lo `test -f 'ipvs.c' || echo '$(srcdir)/'`ipvs.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ipvs_la-ipvs.Tpo $(DEPDIR)/ipvs_la-ipvs.Plo
#	$(AM_V_CC)source='ipvs.c' object='ipvs_la-ipvs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(ipvs_la_CFLAGS) $(CFLAGS) -c -o ipvs_la-ipvs.lo `test -f 'ipvs.c' || echo '$(srcdir)/'`ipvs.c

java_la-java.lo: java.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(java_la_CPPFLAGS) $(CPPFLAGS) $(java_la_CFLAGS) $(CFLAGS) -MT java_la-java.lo -MD -MP -MF $(DEPDIR)/java_la-java.Tpo -c -o java_la-java.lo `test -f 'java.c' || echo '$(srcdir)/'`java.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/java_la-java.Tpo $(DEPDIR)/java_la-java.Plo
#	$(AM_V_CC)source='java.c' object='java_la-java.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(java_la_CPPFLAGS) $(CPPFLAGS) $(java_la_CFLAGS) $(CFLAGS) -c -o java_la-java.lo `test -f 'java.c' || echo '$(srcdir)/'`java.c

libformat_graphite_la-utils_format_graphite.lo: utils_format_graphite.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libformat_graphite_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libformat_graphite_la-utils_format_graphite.lo -MD -MP -MF $(DEPDIR)/libformat_graphite_la-utils_format_graphite.Tpo -c -o libformat_graphite_la-utils_format_graphite.lo `test -f 'utils_format_graphite.c' || echo '$(srcdir)/'`utils_format_graphite.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libformat_graphite_la-utils_format_graphite.Tpo $(DEPDIR)/libformat_graphite_la-utils_format_graphite.Plo
#	$(AM_V_CC)source='utils_format_graphite.c' object='libformat_graphite_la-utils_format_graphite.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libformat_graphite_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libformat_graphite_la-utils_format_graphite.lo `test -f 'utils_format_graphite.c' || echo '$(srcdir)/'`utils_format_graphite.c

libformat_json_la-utils_format_json.lo: utils_format_json.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libformat_json_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libformat_json_la-utils_format_json.lo -MD -MP -MF $(DEPDIR)/libformat_json_la-utils_format_json.Tpo -c -o libformat_json_la-utils_format_json.lo `test -f 'utils_format_json.c' || echo '$(srcdir)/'`utils_format_json.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libformat_json_la-utils_format_json.Tpo $(DEPDIR)/libformat_json_la-utils_format_json.Plo
#	$(AM_V_CC)source='utils_format_json.c' object='libformat_json_la-utils_format_json.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libformat_json_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libformat_json_la-utils_format_json.lo `test -f 'utils_format_json.c' || echo '$(srcdir)/'`utils_format_json.c

load_la-load.lo: load.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_la_CFLAGS) $(CFLAGS) -MT load_la-load.lo -MD -MP -MF $(DEPDIR)/load_la-load.Tpo -c -o load_la-load.lo `test -f 'load.c' || echo '$(srcdir)/'`load.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/load_la-load.Tpo $(DEPDIR)/load_la-load.Plo
#	$(AM_V_CC)source='load.c' object='load_la-load.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_la_CFLAGS) $(CFLAGS) -c -o load_la-load.lo `test -f 'load.c' || echo '$(srcdir)/'`load.c

log_logstash_la-log_logstash.lo: log_logstash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(log_logstash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT log_logstash_la-log_logstash.lo -MD -MP -MF $(DEPDIR)/log_logstash_la-log_logstash.Tpo -c -o log_logstash_la-log_logstash.lo `test -f 'log_logstash.c' || echo '$(srcdir)/'`log_logstash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/log_logstash_la-log_logstash.Tpo $(DEPDIR)/log_logstash_la-log_logstash.Plo
#	$(AM_V_CC)source='log_logstash.c' object='log_logstash_la-log_logstash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(log_logstash_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o log_logstash_la-log_logstash.lo `test -f 'log_logstash.c' || echo '$(srcdir)/'`log_logstash.c

lua_la-lua.lo: lua.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lua_la_CFLAGS) $(CFLAGS) -MT lua_la-lua.lo -MD -MP -MF $(DEPDIR)/lua_la-lua.Tpo -c -o lua_la-lua.lo `test -f 'lua.c' || echo '$(srcdir)/'`lua.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lua_la-lua.Tpo $(DEPDIR)/lua_la-lua.Plo
#	$(AM_V_CC)source='lua.c' object='lua_la-lua.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lua_la_CFLAGS) $(CFLAGS) -c -o lua_la-lua.lo `test -f 'lua.c' || echo '$(srcdir)/'`lua.c

lua_la-utils_lua.lo: utils_lua.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lua_la_CFLAGS) $(CFLAGS) -MT lua_la-utils_lua.lo -MD -MP -MF $(DEPDIR)/lua_la-utils_lua.Tpo -c -o lua_la-utils_lua.lo `test -f 'utils_lua.c' || echo '$(srcdir)/'`utils_lua.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lua_la-utils_lua.Tpo $(DEPDIR)/lua_la-utils_lua.Plo
#	$(AM_V_CC)source='utils_lua.c' object='lua_la-utils_lua.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lua_la_CFLAGS) $(CFLAGS) -c -o lua_la-utils_lua.lo `test -f 'utils_lua.c' || echo '$(srcdir)/'`utils_lua.c

lvm_la-lvm.lo: lvm.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lvm_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT lvm_la-lvm.lo -MD -MP -MF $(DEPDIR)/lvm_la-lvm.Tpo -c -o lvm_la-lvm.lo `test -f 'lvm.c' || echo '$(srcdir)/'`lvm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/lvm_la-lvm.Tpo $(DEPDIR)/lvm_la-lvm.Plo
#	$(AM_V_CC)source='lvm.c' object='lvm_la-lvm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(lvm_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o lvm_la-lvm.lo `test -f 'lvm.c' || echo '$(srcdir)/'`lvm.c

memcachec_la-memcachec.lo: memcachec.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcachec_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT memcachec_la-memcachec.lo -MD -MP -MF $(DEPDIR)/memcachec_la-memcachec.Tpo -c -o memcachec_la-memcachec.lo `test -f 'memcachec.c' || echo '$(srcdir)/'`memcachec.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcachec_la-memcachec.Tpo $(DEPDIR)/memcachec_la-memcachec.Plo
#	$(AM_V_CC)source='memcachec.c' object='memcachec_la-memcachec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcachec_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o memcachec_la-memcachec.lo `test -f 'memcachec.c' || echo '$(srcdir)/'`memcachec.c

memcachec_la-utils_match.lo: utils_match.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcachec_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT memcachec_la-utils_match.lo -MD -MP -MF $(DEPDIR)/memcachec_la-utils_match.Tpo -c -o memcachec_la-utils_match.lo `test -f 'utils_match.c' || echo '$(srcdir)/'`utils_match.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memcachec_la-utils_match.Tpo $(DEPDIR)/memcachec_la-utils_match.Plo
#	$(AM_V_CC)source='utils_match.c' object='memcachec_la-utils_match.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(memcachec_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o memcachec_la-utils_match.lo `test -f 'utils_match.c' || echo '$(srcdir)/'`utils_match.c

memory_la-memory.lo: memory.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memory_la_CFLAGS) $(CFLAGS) -MT memory_la-memory.lo -MD -MP -MF $(DEPDIR)/memory_la-memory.Tpo -c -o memory_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/memory_la-memory.Tpo $(DEPDIR)/memory_la-memory.Plo
#	$(AM_V_CC)source='memory.c' object='memory_la-memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(memory_la_CFLAGS) $(CFLAGS) -c -o memory_la-memory.lo `test -f 'memory.c' || echo '$(srcdir)/'`memory.c

mic_la-mic.lo: mic.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mic_la_CFLAGS) $(CFLAGS) -MT mic_la-mic.lo -MD -MP -MF $(DEPDIR)/mic_la-mic.Tpo -c -o mic_la-mic.lo `test -f 'mic.c' || echo '$(srcdir)/'`mic.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mic_la-mic.Tpo $(DEPDIR)/mic_la-mic.Plo
#	$(AM_V_CC)source='mic.c' object='mic_la-mic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mic_la_CFLAGS) $(CFLAGS) -c -o mic_la-mic.lo `test -f 'mic.c' || echo '$(srcdir)/'`mic.c

modbus_la-modbus.lo: modbus.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(modbus_la_CFLAGS) $(CFLAGS) -MT modbus_la-modbus.lo -MD -MP -MF $(DEPDIR)/modbus_la-modbus.Tpo -c -o modbus_la-modbus.lo `test -f 'modbus.c' || echo '$(srcdir)/'`modbus.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/modbus_la-modbus.Tpo $(DEPDIR)/modbus_la-modbus.Plo
#	$(AM_V_CC)source='modbus.c' object='modbus_la-modbus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(modbus_la_CFLAGS) $(CFLAGS) -c -o modbus_la-modbus.lo `test -f 'modbus.c' || echo '$(srcdir)/'`modbus.c

mqtt_la-mqtt.lo: mqtt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqtt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mqtt_la-mqtt.lo -MD -MP -MF $(DEPDIR)/mqtt_la-mqtt.Tpo -c -o mqtt_la-mqtt.lo `test -f 'mqtt.c' || echo '$(srcdir)/'`mqtt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mqtt_la-mqtt.Tpo $(DEPDIR)/mqtt_la-mqtt.Plo
#	$(AM_V_CC)source='mqtt.c' object='mqtt_la-mqtt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mqtt_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mqtt_la-mqtt.lo `test -f 'mqtt.c' || echo '$(srcdir)/'`mqtt.c

mysql_la-mysql.lo: mysql.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysql_la_CFLAGS) $(CFLAGS) -MT mysql_la-mysql.lo -MD -MP -MF $(DEPDIR)/mysql_la-mysql.Tpo -c -o mysql_la-mysql.lo `test -f 'mysql.c' || echo '$(srcdir)/'`mysql.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mysql_la-mysql.Tpo $(DEPDIR)/mysql_la-mysql.Plo
#	$(AM_V_CC)source='mysql.c' object='mysql_la-mysql.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mysql_la_CFLAGS) $(CFLAGS) -c -o mysql_la-mysql.lo `test -f 'mysql.c' || echo '$(srcdir)/'`mysql.c

netapp_la-netapp.lo: netapp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netapp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT netapp_la-netapp.lo -MD -MP -MF $(DEPDIR)/netapp_la-netapp.Tpo -c -o netapp_la-netapp.lo `test -f 'netapp.c' || echo '$(srcdir)/'`netapp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/netapp_la-netapp.Tpo $(DEPDIR)/netapp_la-netapp.Plo
#	$(AM_V_CC)source='netapp.c' object='netapp_la-netapp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(netapp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o netapp_la-netapp.lo `test -f 'netapp.c' || echo '$(srcdir)/'`netapp.c

netlink_la-netlink.lo: netlink.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(netlink_la_CFLAGS) $(CFLAGS) -MT netlink_la-netlink.lo -MD -MP -MF $(DEPDIR)/netlink_la-netlink.Tpo -c -o netlink_la-netlink.lo `test -f 'netlink.c' || echo '$(srcdir)/'`netlink.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/netlink_la-netlink.Tpo $(DEPDIR)/netlink_la-netlink.Plo
#	$(AM_V_CC)source='netlink.c' object='netlink_la-netlink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(netlink_la_CFLAGS) $(CFLAGS) -c -o netlink_la-netlink.lo `test -f 'netlink.c' || echo '$(srcdir)/'`netlink.c

network_la-network.lo: network.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(network_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT network_la-network.lo -MD -MP -MF $(DEPDIR)/network_la-network.Tpo -c -o network_la-network.lo `test -f 'network.c' || echo '$(srcdir)/'`network.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/network_la-network.Tpo $(DEPDIR)/network_la-network.Plo
#	$(AM_V_CC)source='network.c' object='network_la-network.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(network_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o network_la-network.lo `test -f 'network.c' || echo '$(srcdir)/'`network.c

network_la-utils_fbhash.lo: utils_fbhash.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(network_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT network_la-utils_fbhash.lo -MD -MP -MF $(DEPDIR)/network_la-utils_fbhash.Tpo -c -o network_la-utils_fbhash.lo `test -f 'utils_fbhash.c' || echo '$(srcdir)/'`utils_fbhash.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/network_la-utils_fbhash.Tpo $(DEPDIR)/network_la-utils_fbhash.Plo
#	$(AM_V_CC)source='utils_fbhash.c' object='network_la-utils_fbhash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(network_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o network_la-utils_fbhash.lo `test -f 'utils_fbhash.c' || echo '$(srcdir)/'`utils_fbhash.c

nginx_la-nginx.lo: nginx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nginx_la_CFLAGS) $(CFLAGS) -MT nginx_la-nginx.lo -MD -MP -MF $(DEPDIR)/nginx_la-nginx.Tpo -c -o nginx_la-nginx.lo `test -f 'nginx.c' || echo '$(srcdir)/'`nginx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nginx_la-nginx.Tpo $(DEPDIR)/nginx_la-nginx.Plo
#	$(AM_V_CC)source='nginx.c' object='nginx_la-nginx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nginx_la_CFLAGS) $(CFLAGS) -c -o nginx_la-nginx.lo `test -f 'nginx.c' || echo '$(srcdir)/'`nginx.c

notify_desktop_la-notify_desktop.lo: notify_desktop.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(notify_desktop_la_CFLAGS) $(CFLAGS) -MT notify_desktop_la-notify_desktop.lo -MD -MP -MF $(DEPDIR)/notify_desktop_la-notify_desktop.Tpo -c -o notify_desktop_la-notify_desktop.lo `test -f 'notify_desktop.c' || echo '$(srcdir)/'`notify_desktop.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/notify_desktop_la-notify_desktop.Tpo $(DEPDIR)/notify_desktop_la-notify_desktop.Plo
#	$(AM_V_CC)source='notify_desktop.c' object='notify_desktop_la-notify_desktop.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(notify_desktop_la_CFLAGS) $(CFLAGS) -c -o notify_desktop_la-notify_desktop.lo `test -f 'notify_desktop.c' || echo '$(srcdir)/'`notify_desktop.c

nut_la-nut.lo: nut.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nut_la_CFLAGS) $(CFLAGS) -MT nut_la-nut.lo -MD -MP -MF $(DEPDIR)/nut_la-nut.Tpo -c -o nut_la-nut.lo `test -f 'nut.c' || echo '$(srcdir)/'`nut.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nut_la-nut.Tpo $(DEPDIR)/nut_la-nut.Plo
#	$(AM_V_CC)source='nut.c' object='nut_la-nut.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nut_la_CFLAGS) $(CFLAGS) -c -o nut_la-nut.lo `test -f 'nut.c' || echo '$(srcdir)/'`nut.c

onewire_la-onewire.lo: onewire.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(onewire_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT onewire_la-onewire.lo -MD -MP -MF $(DEPDIR)/onewire_la-onewire.Tpo -c -o onewire_la-onewire.lo `test -f 'onewire.c' || echo '$(srcdir)/'`onewire.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/onewire_la-onewire.Tpo $(DEPDIR)/onewire_la-onewire.Plo
#	$(AM_V_CC)source='onewire.c' object='onewire_la-onewire.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(onewire_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o onewire_la-onewire.lo `test -f 'onewire.c' || echo '$(srcdir)/'`onewire.c

openldap_la-openldap.lo: openldap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openldap_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT openldap_la-openldap.lo -MD -MP -MF $(DEPDIR)/openldap_la-openldap.Tpo -c -o openldap_la-openldap.lo `test -f 'openldap.c' || echo '$(srcdir)/'`openldap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/openldap_la-openldap.Tpo $(DEPDIR)/openldap_la-openldap.Plo
#	$(AM_V_CC)source='openldap.c' object='openldap_la-openldap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(openldap_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o openldap_la-openldap.lo `test -f 'openldap.c' || echo '$(srcdir)/'`openldap.c

oracle_la-oracle.lo: oracle.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(oracle_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT oracle_la-oracle.lo -MD -MP -MF $(DEPDIR)/oracle_la-oracle.Tpo -c -o oracle_la-oracle.lo `test -f 'oracle.c' || echo '$(srcdir)/'`oracle.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/oracle_la-oracle.Tpo $(DEPDIR)/oracle_la-oracle.Plo
#	$(AM_V_CC)source='oracle.c' object='oracle_la-oracle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(oracle_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o oracle_la-oracle.lo `test -f 'oracle.c' || echo '$(srcdir)/'`oracle.c

oracle_la-utils_db_query.lo: utils_db_query.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(oracle_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT oracle_la-utils_db_query.lo -MD -MP -MF $(DEPDIR)/oracle_la-utils_db_query.Tpo -c -o oracle_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/oracle_la-utils_db_query.Tpo $(DEPDIR)/oracle_la-utils_db_query.Plo
#	$(AM_V_CC)source='utils_db_query.c' object='oracle_la-utils_db_query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(oracle_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o oracle_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c

perl_la-perl.lo: perl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(perl_la_CPPFLAGS) $(CPPFLAGS) $(perl_la_CFLAGS) $(CFLAGS) -MT perl_la-perl.lo -MD -MP -MF $(DEPDIR)/perl_la-perl.Tpo -c -o perl_la-perl.lo `test -f 'perl.c' || echo '$(srcdir)/'`perl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/perl_la-perl.Tpo $(DEPDIR)/perl_la-perl.Plo
#	$(AM_V_CC)source='perl.c' object='perl_la-perl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(perl_la_CPPFLAGS) $(CPPFLAGS) $(perl_la_CFLAGS) $(CFLAGS) -c -o perl_la-perl.lo `test -f 'perl.c' || echo '$(srcdir)/'`perl.c

pinba_la-pinba.lo: pinba.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pinba_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pinba_la-pinba.lo -MD -MP -MF $(DEPDIR)/pinba_la-pinba.Tpo -c -o pinba_la-pinba.lo `test -f 'pinba.c' || echo '$(srcdir)/'`pinba.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pinba_la-pinba.Tpo $(DEPDIR)/pinba_la-pinba.Plo
#	$(AM_V_CC)source='pinba.c' object='pinba_la-pinba.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pinba_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pinba_la-pinba.lo `test -f 'pinba.c' || echo '$(srcdir)/'`pinba.c

pinba_la-pinba.pb-c.lo: pinba.pb-c.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pinba_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pinba_la-pinba.pb-c.lo -MD -MP -MF $(DEPDIR)/pinba_la-pinba.pb-c.Tpo -c -o pinba_la-pinba.pb-c.lo `test -f 'pinba.pb-c.c' || echo '$(srcdir)/'`pinba.pb-c.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pinba_la-pinba.pb-c.Tpo $(DEPDIR)/pinba_la-pinba.pb-c.Plo
#	$(AM_V_CC)source='pinba.pb-c.c' object='pinba_la-pinba.pb-c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(pinba_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pinba_la-pinba.pb-c.lo `test -f 'pinba.pb-c.c' || echo '$(srcdir)/'`pinba.pb-c.c

ping_la-ping.lo: ping.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ping_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT ping_la-ping.lo -MD -MP -MF $(DEPDIR)/ping_la-ping.Tpo -c -o ping_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/ping_la-ping.Tpo $(DEPDIR)/ping_la-ping.Plo
#	$(AM_V_CC)source='ping.c' object='ping_la-ping.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ping_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o ping_la-ping.lo `test -f 'ping.c' || echo '$(srcdir)/'`ping.c

postgresql_la-postgresql.lo: postgresql.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT postgresql_la-postgresql.lo -MD -MP -MF $(DEPDIR)/postgresql_la-postgresql.Tpo -c -o postgresql_la-postgresql.lo `test -f 'postgresql.c' || echo '$(srcdir)/'`postgresql.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/postgresql_la-postgresql.Tpo $(DEPDIR)/postgresql_la-postgresql.Plo
#	$(AM_V_CC)source='postgresql.c' object='postgresql_la-postgresql.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o postgresql_la-postgresql.lo `test -f 'postgresql.c' || echo '$(srcdir)/'`postgresql.c

postgresql_la-utils_db_query.lo: utils_db_query.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT postgresql_la-utils_db_query.lo -MD -MP -MF $(DEPDIR)/postgresql_la-utils_db_query.Tpo -c -o postgresql_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/postgresql_la-utils_db_query.Tpo $(DEPDIR)/postgresql_la-utils_db_query.Plo
#	$(AM_V_CC)source='utils_db_query.c' object='postgresql_la-utils_db_query.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(postgresql_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o postgresql_la-utils_db_query.lo `test -f 'utils_db_query.c' || echo '$(srcdir)/'`utils_db_query.c

python_la-python.lo: python.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT python_la-python.lo -MD -MP -MF $(DEPDIR)/python_la-python.Tpo -c -o python_la-python.lo `test -f 'python.c' || echo '$(srcdir)/'`python.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/python_la-python.Tpo $(DEPDIR)/python_la-python.Plo
#	$(AM_V_CC)source='python.c' object='python_la-python.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o python_la-python.lo `test -f 'python.c' || echo '$(srcdir)/'`python.c

python_la-pyconfig.lo: pyconfig.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT python_la-pyconfig.lo -MD -MP -MF $(DEPDIR)/python_la-pyconfig.Tpo -c -o python_la-pyconfig.lo `test -f 'pyconfig.c' || echo '$(srcdir)/'`pyconfig.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/python_la-pyconfig.Tpo $(DEPDIR)/python_la-pyconfig.Plo
#	$(AM_V_CC)source='pyconfig.c' object='python_la-pyconfig.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o python_la-pyconfig.lo `test -f 'pyconfig.c' || echo '$(srcdir)/'`pyconfig.c

python_la-pyvalues.lo: pyvalues.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT python_la-pyvalues.lo -MD -MP -MF $(DEPDIR)/python_la-pyvalues.Tpo -c -o python_la-pyvalues.lo `test -f 'pyvalues.c' || echo '$(srcdir)/'`pyvalues.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/python_la-pyvalues.Tpo $(DEPDIR)/python_la-pyvalues.Plo
#	$(AM_V_CC)source='pyvalues.c' object='python_la-pyvalues.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(python_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o python_la-pyvalues.lo `test -f 'pyvalues.c' || echo '$(srcdir)/'`pyvalues.c

redis_la-redis.lo: redis.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(redis_la_CFLAGS) $(CFLAGS) -MT redis_la-redis.lo -MD -MP -MF $(DEPDIR)/redis_la-redis.Tpo -c -o redis_la-redis.lo `test -f 'redis.c' || echo '$(srcdir)/'`redis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/redis_la-redis.Tpo $(DEPDIR)/redis_la-redis.Plo
#	$(AM_V_CC)source='redis.c' object='redis_la-redis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(redis_la_CFLAGS) $(CFLAGS) -c -o redis_la-redis.lo `test -f 'redis.c' || echo '$(srcdir)/'`redis.c

routeros_la-routeros.lo: routeros.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(routeros_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT routeros_la-routeros.lo -MD -MP -MF $(DEPDIR)/routeros_la-routeros.Tpo -c -o routeros_la-routeros.lo `test -f 'routeros.c' || echo '$(srcdir)/'`routeros.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/routeros_la-routeros.Tpo $(DEPDIR)/routeros_la-routeros.Plo
#	$(AM_V_CC)source='routeros.c' object='routeros_la-routeros.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(routeros_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o routeros_la-routeros.lo `test -f 'routeros.c' || echo '$(srcdir)/'`routeros.c

rrdcached_la-rrdcached.lo: rrdcached.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdcached_la_CFLAGS) $(CFLAGS) -MT rrdcached_la-rrdcached.lo -MD -MP -MF $(DEPDIR)/rrdcached_la-rrdcached.Tpo -c -o rrdcached_la-rrdcached.lo `test -f 'rrdcached.c' || echo '$(srcdir)/'`rrdcached.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rrdcached_la-rrdcached.Tpo $(DEPDIR)/rrdcached_la-rrdcached.Plo
#	$(AM_V_CC)source='rrdcached.c' object='rrdcached_la-rrdcached.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdcached_la_CFLAGS) $(CFLAGS) -c -o rrdcached_la-rrdcached.lo `test -f 'rrdcached.c' || echo '$(srcdir)/'`rrdcached.c

rrdcached_la-utils_rrdcreate.lo: utils_rrdcreate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdcached_la_CFLAGS) $(CFLAGS) -MT rrdcached_la-utils_rrdcreate.lo -MD -MP -MF $(DEPDIR)/rrdcached_la-utils_rrdcreate.Tpo -c -o rrdcached_la-utils_rrdcreate.lo `test -f 'utils_rrdcreate.c' || echo '$(srcdir)/'`utils_rrdcreate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rrdcached_la-utils_rrdcreate.Tpo $(DEPDIR)/rrdcached_la-utils_rrdcreate.Plo
#	$(AM_V_CC)source='utils_rrdcreate.c' object='rrdcached_la-utils_rrdcreate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdcached_la_CFLAGS) $(CFLAGS) -c -o rrdcached_la-utils_rrdcreate.lo `test -f 'utils_rrdcreate.c' || echo '$(srcdir)/'`utils_rrdcreate.c

rrdtool_la-rrdtool.lo: rrdtool.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdtool_la_CFLAGS) $(CFLAGS) -MT rrdtool_la-rrdtool.lo -MD -MP -MF $(DEPDIR)/rrdtool_la-rrdtool.Tpo -c -o rrdtool_la-rrdtool.lo `test -f 'rrdtool.c' || echo '$(srcdir)/'`rrdtool.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rrdtool_la-rrdtool.Tpo $(DEPDIR)/rrdtool_la-rrdtool.Plo
#	$(AM_V_CC)source='rrdtool.c' object='rrdtool_la-rrdtool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdtool_la_CFLAGS) $(CFLAGS) -c -o rrdtool_la-rrdtool.lo `test -f 'rrdtool.c' || echo '$(srcdir)/'`rrdtool.c

rrdtool_la-utils_rrdcreate.lo: utils_rrdcreate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdtool_la_CFLAGS) $(CFLAGS) -MT rrdtool_la-utils_rrdcreate.lo -MD -MP -MF $(DEPDIR)/rrdtool_la-utils_rrdcreate.Tpo -c -o rrdtool_la-utils_rrdcreate.lo `test -f 'utils_rrdcreate.c' || echo '$(srcdir)/'`utils_rrdcreate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/rrdtool_la-utils_rrdcreate.Tpo $(DEPDIR)/rrdtool_la-utils_rrdcreate.Plo
#	$(AM_V_CC)source='utils_rrdcreate.c' object='rrdtool_la-utils_rrdcreate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(rrdtool_la_CFLAGS) $(CFLAGS) -c -o rrdtool_la-utils_rrdcreate.lo `test -f 'utils_rrdcreate.c' || echo '$(srcdir)/'`utils_rrdcreate.c

sensors_la-sensors.lo: sensors.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sensors_la_CFLAGS) $(CFLAGS) -MT sensors_la-sensors.lo -MD -MP -MF $(DEPDIR)/sensors_la-sensors.Tpo -c -o sensors_la-sensors.lo `test -f 'sensors.c' || echo '$(srcdir)/'`sensors.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sensors_la-sensors.Tpo $(DEPDIR)/sensors_la-sensors.Plo
#	$(AM_V_CC)source='sensors.c' object='sensors_la-sensors.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sensors_la_CFLAGS) $(CFLAGS) -c -o sensors_la-sensors.lo `test -f 'sensors.c' || echo '$(srcdir)/'`sensors.c

sigrok_la-sigrok.lo: sigrok.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sigrok_la_CFLAGS) $(CFLAGS) -MT sigrok_la-sigrok.lo -MD -MP -MF $(DEPDIR)/sigrok_la-sigrok.Tpo -c -o sigrok_la-sigrok.lo `test -f 'sigrok.c' || echo '$(srcdir)/'`sigrok.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/sigrok_la-sigrok.Tpo $(DEPDIR)/sigrok_la-sigrok.Plo
#	$(AM_V_CC)source='sigrok.c' object='sigrok_la-sigrok.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(sigrok_la_CFLAGS) $(CFLAGS) -c -o sigrok_la-sigrok.lo `test -f 'sigrok.c' || echo '$(srcdir)/'`sigrok.c

smart_la-smart.lo: smart.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smart_la_CFLAGS) $(CFLAGS) -MT smart_la-smart.lo -MD -MP -MF $(DEPDIR)/smart_la-smart.Tpo -c -o smart_la-smart.lo `test -f 'smart.c' || echo '$(srcdir)/'`smart.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/smart_la-smart.Tpo $(DEPDIR)/smart_la-smart.Plo
#	$(AM_V_CC)source='smart.c' object='smart_la-smart.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smart_la_CFLAGS) $(CFLAGS) -c -o smart_la-smart.lo `test -f 'smart.c' || echo '$(srcdir)/'`smart.c

snmp_la-snmp.lo: snmp.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(snmp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT snmp_la-snmp.lo -MD -MP -MF $(DEPDIR)/snmp_la-snmp.Tpo -c -o snmp_la-snmp.lo `test -f 'snmp.c' || echo '$(srcdir)/'`snmp.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/snmp_la-snmp.Tpo $(DEPDIR)/snmp_la-snmp.Plo
#	$(AM_V_CC)source='snmp.c' object='snmp_la-snmp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(snmp_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o snmp_la-snmp.lo `test -f 'snmp.c' || echo '$(srcdir)/'`snmp.c

swap_la-swap.lo: swap.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(swap_la_CFLAGS) $(CFLAGS) -MT swap_la-swap.lo -MD -MP -MF $(DEPDIR)/swap_la-swap.Tpo -c -o swap_la-swap.lo `test -f 'swap.c' || echo '$(srcdir)/'`swap.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/swap_la-swap.Tpo $(DEPDIR)/swap_la-swap.Plo
#	$(AM_V_CC)source='swap.c' object='swap_la-swap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(swap_la_CFLAGS) $(CFLAGS) -c -o swap_la-swap.lo `test -f 'swap.c' || echo '$(srcdir)/'`swap.c

tokyotyrant_la-tokyotyrant.lo: tokyotyrant.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tokyotyrant_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tokyotyrant_la-tokyotyrant.lo -MD -MP -MF $(DEPDIR)/tokyotyrant_la-tokyotyrant.Tpo -c -o tokyotyrant_la-tokyotyrant.lo `test -f 'tokyotyrant.c' || echo '$(srcdir)/'`tokyotyrant.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/tokyotyrant_la-tokyotyrant.Tpo $(DEPDIR)/tokyotyrant_la-tokyotyrant.Plo
#	$(AM_V_CC)source='tokyotyrant.c' object='tokyotyrant_la-tokyotyrant.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tokyotyrant_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tokyotyrant_la-tokyotyrant.lo `test -f 'tokyotyrant.c' || echo '$(srcdir)/'`tokyotyrant.c

uptime_la-uptime.lo: uptime.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uptime_la_CFLAGS) $(CFLAGS) -MT uptime_la-uptime.lo -MD -MP -MF $(DEPDIR)/uptime_la-uptime.Tpo -c -o uptime_la-uptime.lo `test -f 'uptime.c' || echo '$(srcdir)/'`uptime.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/uptime_la-uptime.Tpo $(DEPDIR)/uptime_la-uptime.Plo
#	$(AM_V_CC)source='uptime.c' object='uptime_la-uptime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uptime_la_CFLAGS) $(CFLAGS) -c -o uptime_la-uptime.lo `test -f 'uptime.c' || echo '$(srcdir)/'`uptime.c

users_la-users.lo: users.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(users_la_CFLAGS) $(CFLAGS) -MT users_la-users.lo -MD -MP -MF $(DEPDIR)/users_la-users.Tpo -c -o users_la-users.lo `test -f 'users.c' || echo '$(srcdir)/'`users.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/users_la-users.Tpo $(DEPDIR)/users_la-users.Plo
#	$(AM_V_CC)source='users.c' object='users_la-users.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(users_la_CFLAGS) $(CFLAGS) -c -o users_la-users.lo `test -f 'users.c' || echo '$(srcdir)/'`users.c

uuid_la-uuid.lo: uuid.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uuid_la_CFLAGS) $(CFLAGS) -MT uuid_la-uuid.lo -MD -MP -MF $(DEPDIR)/uuid_la-uuid.Tpo -c -o uuid_la-uuid.lo `test -f 'uuid.c' || echo '$(srcdir)/'`uuid.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/uuid_la-uuid.Tpo $(DEPDIR)/uuid_la-uuid.Plo
#	$(AM_V_CC)source='uuid.c' object='uuid_la-uuid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(uuid_la_CFLAGS) $(CFLAGS) -c -o uuid_la-uuid.lo `test -f 'uuid.c' || echo '$(srcdir)/'`uuid.c

varnish_la-varnish.lo: varnish.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnish_la_CFLAGS) $(CFLAGS) -MT varnish_la-varnish.lo -MD -MP -MF $(DEPDIR)/varnish_la-varnish.Tpo -c -o varnish_la-varnish.lo `test -f 'varnish.c' || echo '$(srcdir)/'`varnish.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/varnish_la-varnish.Tpo $(DEPDIR)/varnish_la-varnish.Plo
#	$(AM_V_CC)source='varnish.c' object='varnish_la-varnish.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(varnish_la_CFLAGS) $(CFLAGS) -c -o varnish_la-varnish.lo `test -f 'varnish.c' || echo '$(srcdir)/'`varnish.c

virt_la-virt.lo: virt.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virt_la_CFLAGS) $(CFLAGS) -MT virt_la-virt.lo -MD -MP -MF $(DEPDIR)/virt_la-virt.Tpo -c -o virt_la-virt.lo `test -f 'virt.c' || echo '$(srcdir)/'`virt.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virt_la-virt.Tpo $(DEPDIR)/virt_la-virt.Plo
#	$(AM_V_CC)source='virt.c' object='virt_la-virt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virt_la_CFLAGS) $(CFLAGS) -c -o virt_la-virt.lo `test -f 'virt.c' || echo '$(srcdir)/'`virt.c

write_http_la-write_http.lo: write_http.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_http_la_CFLAGS) $(CFLAGS) -MT write_http_la-write_http.lo -MD -MP -MF $(DEPDIR)/write_http_la-write_http.Tpo -c -o write_http_la-write_http.lo `test -f 'write_http.c' || echo '$(srcdir)/'`write_http.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_http_la-write_http.Tpo $(DEPDIR)/write_http_la-write_http.Plo
#	$(AM_V_CC)source='write_http.c' object='write_http_la-write_http.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_http_la_CFLAGS) $(CFLAGS) -c -o write_http_la-write_http.lo `test -f 'write_http.c' || echo '$(srcdir)/'`write_http.c

write_http_la-utils_format_kairosdb.lo: utils_format_kairosdb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_http_la_CFLAGS) $(CFLAGS) -MT write_http_la-utils_format_kairosdb.lo -MD -MP -MF $(DEPDIR)/write_http_la-utils_format_kairosdb.Tpo -c -o write_http_la-utils_format_kairosdb.lo `test -f 'utils_format_kairosdb.c' || echo '$(srcdir)/'`utils_format_kairosdb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_http_la-utils_format_kairosdb.Tpo $(DEPDIR)/write_http_la-utils_format_kairosdb.Plo
#	$(AM_V_CC)source='utils_format_kairosdb.c' object='write_http_la-utils_format_kairosdb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_http_la_CFLAGS) $(CFLAGS) -c -o write_http_la-utils_format_kairosdb.lo `test -f 'utils_format_kairosdb.c' || echo '$(srcdir)/'`utils_format_kairosdb.c

write_kafka_la-write_kafka.lo: write_kafka.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_kafka_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_kafka_la-write_kafka.lo -MD -MP -MF $(DEPDIR)/write_kafka_la-write_kafka.Tpo -c -o write_kafka_la-write_kafka.lo `test -f 'write_kafka.c' || echo '$(srcdir)/'`write_kafka.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_kafka_la-write_kafka.Tpo $(DEPDIR)/write_kafka_la-write_kafka.Plo
#	$(AM_V_CC)source='write_kafka.c' object='write_kafka_la-write_kafka.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_kafka_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_kafka_la-write_kafka.lo `test -f 'write_kafka.c' || echo '$(srcdir)/'`write_kafka.c

write_kafka_la-utils_crc32.lo: utils_crc32.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_kafka_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_kafka_la-utils_crc32.lo -MD -MP -MF $(DEPDIR)/write_kafka_la-utils_crc32.Tpo -c -o write_kafka_la-utils_crc32.lo `test -f 'utils_crc32.c' || echo '$(srcdir)/'`utils_crc32.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_kafka_la-utils_crc32.Tpo $(DEPDIR)/write_kafka_la-utils_crc32.Plo
#	$(AM_V_CC)source='utils_crc32.c' object='write_kafka_la-utils_crc32.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_kafka_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_kafka_la-utils_crc32.lo `test -f 'utils_crc32.c' || echo '$(srcdir)/'`utils_crc32.c

write_mongodb_la-write_mongodb.lo: write_mongodb.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_mongodb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_mongodb_la-write_mongodb.lo -MD -MP -MF $(DEPDIR)/write_mongodb_la-write_mongodb.Tpo -c -o write_mongodb_la-write_mongodb.lo `test -f 'write_mongodb.c' || echo '$(srcdir)/'`write_mongodb.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_mongodb_la-write_mongodb.Tpo $(DEPDIR)/write_mongodb_la-write_mongodb.Plo
#	$(AM_V_CC)source='write_mongodb.c' object='write_mongodb_la-write_mongodb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_mongodb_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_mongodb_la-write_mongodb.lo `test -f 'write_mongodb.c' || echo '$(srcdir)/'`write_mongodb.c

write_prometheus_la-write_prometheus.lo: write_prometheus.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_prometheus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_prometheus_la-write_prometheus.lo -MD -MP -MF $(DEPDIR)/write_prometheus_la-write_prometheus.Tpo -c -o write_prometheus_la-write_prometheus.lo `test -f 'write_prometheus.c' || echo '$(srcdir)/'`write_prometheus.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_prometheus_la-write_prometheus.Tpo $(DEPDIR)/write_prometheus_la-write_prometheus.Plo
#	$(AM_V_CC)source='write_prometheus.c' object='write_prometheus_la-write_prometheus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_prometheus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_prometheus_la-write_prometheus.lo `test -f 'write_prometheus.c' || echo '$(srcdir)/'`write_prometheus.c

write_prometheus_la-prometheus.pb-c.lo: prometheus.pb-c.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_prometheus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_prometheus_la-prometheus.pb-c.lo -MD -MP -MF $(DEPDIR)/write_prometheus_la-prometheus.pb-c.Tpo -c -o write_prometheus_la-prometheus.pb-c.lo `test -f 'prometheus.pb-c.c' || echo '$(srcdir)/'`prometheus.pb-c.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_prometheus_la-prometheus.pb-c.Tpo $(DEPDIR)/write_prometheus_la-prometheus.pb-c.Plo
#	$(AM_V_CC)source='prometheus.pb-c.c' object='write_prometheus_la-prometheus.pb-c.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_prometheus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_prometheus_la-prometheus.pb-c.lo `test -f 'prometheus.pb-c.c' || echo '$(srcdir)/'`prometheus.pb-c.c

write_redis_la-write_redis.lo: write_redis.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_redis_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT write_redis_la-write_redis.lo -MD -MP -MF $(DEPDIR)/write_redis_la-write_redis.Tpo -c -o write_redis_la-write_redis.lo `test -f 'write_redis.c' || echo '$(srcdir)/'`write_redis.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_redis_la-write_redis.Tpo $(DEPDIR)/write_redis_la-write_redis.Plo
#	$(AM_V_CC)source='write_redis.c' object='write_redis_la-write_redis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(write_redis_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o write_redis_la-write_redis.lo `test -f 'write_redis.c' || echo '$(srcdir)/'`write_redis.c

write_riemann_la-write_riemann.lo: write_riemann.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_riemann_la_CFLAGS) $(CFLAGS) -MT write_riemann_la-write_riemann.lo -MD -MP -MF $(DEPDIR)/write_riemann_la-write_riemann.Tpo -c -o write_riemann_la-write_riemann.lo `test -f 'write_riemann.c' || echo '$(srcdir)/'`write_riemann.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_riemann_la-write_riemann.Tpo $(DEPDIR)/write_riemann_la-write_riemann.Plo
#	$(AM_V_CC)source='write_riemann.c' object='write_riemann_la-write_riemann.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_riemann_la_CFLAGS) $(CFLAGS) -c -o write_riemann_la-write_riemann.lo `test -f 'write_riemann.c' || echo '$(srcdir)/'`write_riemann.c

write_riemann_la-write_riemann_threshold.lo: write_riemann_threshold.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_riemann_la_CFLAGS) $(CFLAGS) -MT write_riemann_la-write_riemann_threshold.lo -MD -MP -MF $(DEPDIR)/write_riemann_la-write_riemann_threshold.Tpo -c -o write_riemann_la-write_riemann_threshold.lo `test -f 'write_riemann_threshold.c' || echo '$(srcdir)/'`write_riemann_threshold.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/write_riemann_la-write_riemann_threshold.Tpo $(DEPDIR)/write_riemann_la-write_riemann_threshold.Plo
#	$(AM_V_CC)source='write_riemann_threshold.c' object='write_riemann_la-write_riemann_threshold.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(write_riemann_la_CFLAGS) $(CFLAGS) -c -o write_riemann_la-write_riemann_threshold.lo `test -f 'write_riemann_threshold.c' || echo '$(srcdir)/'`write_riemann_threshold.c

xencpu_la-xencpu.lo: xencpu.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xencpu_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT xencpu_la-xencpu.lo -MD -MP -MF $(DEPDIR)/xencpu_la-xencpu.Tpo -c -o xencpu_la-xencpu.lo `test -f 'xencpu.c' || echo '$(srcdir)/'`xencpu.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/xencpu_la-xencpu.Tpo $(DEPDIR)/xencpu_la-xencpu.Plo
#	$(AM_V_CC)source='xencpu.c' object='xencpu_la-xencpu.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(xencpu_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o xencpu_la-xencpu.lo `test -f 'xencpu.c' || echo '$(srcdir)/'`xencpu.c

xmms_la-xmms.lo: xmms.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xmms_la_CFLAGS) $(CFLAGS) -MT xmms_la-xmms.lo -MD -MP -MF $(DEPDIR)/xmms_la-xmms.Tpo -c -o xmms_la-xmms.lo `test -f 'xmms.c' || echo '$(srcdir)/'`xmms.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/xmms_la-xmms.Tpo $(DEPDIR)/xmms_la-xmms.Plo
#	$(AM_V_CC)source='xmms.c' object='xmms_la-xmms.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(xmms_la_CFLAGS) $(CFLAGS) -c -o xmms_la-xmms.lo `test -f 'xmms.c' || echo '$(srcdir)/'`xmms.c

collectd_nagios-collectd-nagios.o: collectd-nagios.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_nagios_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectd_nagios-collectd-nagios.o -MD -MP -MF $(DEPDIR)/collectd_nagios-collectd-nagios.Tpo -c -o collectd_nagios-collectd-nagios.o `test -f 'collectd-nagios.c' || echo '$(srcdir)/'`collectd-nagios.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectd_nagios-collectd-nagios.Tpo $(DEPDIR)/collectd_nagios-collectd-nagios.Po
#	$(AM_V_CC)source='collectd-nagios.c' object='collectd_nagios-collectd-nagios.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_nagios_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectd_nagios-collectd-nagios.o `test -f 'collectd-nagios.c' || echo '$(srcdir)/'`collectd-nagios.c

collectd_nagios-collectd-nagios.obj: collectd-nagios.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_nagios_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectd_nagios-collectd-nagios.obj -MD -MP -MF $(DEPDIR)/collectd_nagios-collectd-nagios.Tpo -c -o collectd_nagios-collectd-nagios.obj `if test -f 'collectd-nagios.c'; then $(CYGPATH_W) 'collectd-nagios.c'; else $(CYGPATH_W) '$(srcdir)/collectd-nagios.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectd_nagios-collectd-nagios.Tpo $(DEPDIR)/collectd_nagios-collectd-nagios.Po
#	$(AM_V_CC)source='collectd-nagios.c' object='collectd_nagios-collectd-nagios.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_nagios_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectd_nagios-collectd-nagios.obj `if test -f 'collectd-nagios.c'; then $(CYGPATH_W) 'collectd-nagios.c'; else $(CYGPATH_W) '$(srcdir)/collectd-nagios.c'; fi`

collectd_tg-collectd-tg.o: collectd-tg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_tg_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectd_tg-collectd-tg.o -MD -MP -MF $(DEPDIR)/collectd_tg-collectd-tg.Tpo -c -o collectd_tg-collectd-tg.o `test -f 'collectd-tg.c' || echo '$(srcdir)/'`collectd-tg.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectd_tg-collectd-tg.Tpo $(DEPDIR)/collectd_tg-collectd-tg.Po
#	$(AM_V_CC)source='collectd-tg.c' object='collectd_tg-collectd-tg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_tg_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectd_tg-collectd-tg.o `test -f 'collectd-tg.c' || echo '$(srcdir)/'`collectd-tg.c

collectd_tg-collectd-tg.obj: collectd-tg.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_tg_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectd_tg-collectd-tg.obj -MD -MP -MF $(DEPDIR)/collectd_tg-collectd-tg.Tpo -c -o collectd_tg-collectd-tg.obj `if test -f 'collectd-tg.c'; then $(CYGPATH_W) 'collectd-tg.c'; else $(CYGPATH_W) '$(srcdir)/collectd-tg.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectd_tg-collectd-tg.Tpo $(DEPDIR)/collectd_tg-collectd-tg.Po
#	$(AM_V_CC)source='collectd-tg.c' object='collectd_tg-collectd-tg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectd_tg_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectd_tg-collectd-tg.obj `if test -f 'collectd-tg.c'; then $(CYGPATH_W) 'collectd-tg.c'; else $(CYGPATH_W) '$(srcdir)/collectd-tg.c'; fi`

collectdctl-collectdctl.o: collectdctl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectdctl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectdctl-collectdctl.o -MD -MP -MF $(DEPDIR)/collectdctl-collectdctl.Tpo -c -o collectdctl-collectdctl.o `test -f 'collectdctl.c' || echo '$(srcdir)/'`collectdctl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectdctl-collectdctl.Tpo $(DEPDIR)/collectdctl-collectdctl.Po
#	$(AM_V_CC)source='collectdctl.c' object='collectdctl-collectdctl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectdctl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectdctl-collectdctl.o `test -f 'collectdctl.c' || echo '$(srcdir)/'`collectdctl.c

collectdctl-collectdctl.obj: collectdctl.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectdctl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT collectdctl-collectdctl.obj -MD -MP -MF $(DEPDIR)/collectdctl-collectdctl.Tpo -c -o collectdctl-collectdctl.obj `if test -f 'collectdctl.c'; then $(CYGPATH_W) 'collectdctl.c'; else $(CYGPATH_W) '$(srcdir)/collectdctl.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/collectdctl-collectdctl.Tpo $(DEPDIR)/collectdctl-collectdctl.Po
#	$(AM_V_CC)source='collectdctl.c' object='collectdctl-collectdctl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(collectdctl_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o collectdctl-collectdctl.obj `if test -f 'collectdctl.c'; then $(CYGPATH_W) 'collectdctl.c'; else $(CYGPATH_W) '$(srcdir)/collectdctl.c'; fi`

test_plugin_ceph-ceph_test.o: ceph_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_plugin_ceph_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_plugin_ceph-ceph_test.o -MD -MP -MF $(DEPDIR)/test_plugin_ceph-ceph_test.Tpo -c -o test_plugin_ceph-ceph_test.o `test -f 'ceph_test.c' || echo '$(srcdir)/'`ceph_test.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_plugin_ceph-ceph_test.Tpo $(DEPDIR)/test_plugin_ceph-ceph_test.Po
#	$(AM_V_CC)source='ceph_test.c' object='test_plugin_ceph-ceph_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_plugin_ceph_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_plugin_ceph-ceph_test.o `test -f 'ceph_test.c' || echo '$(srcdir)/'`ceph_test.c

test_plugin_ceph-ceph_test.obj: ceph_test.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_plugin_ceph_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_plugin_ceph-ceph_test.obj -MD -MP -MF $(DEPDIR)/test_plugin_ceph-ceph_test.Tpo -c -o test_plugin_ceph-ceph_test.obj `if test -f 'ceph_test.c'; then $(CYGPATH_W) 'ceph_test.c'; else $(CYGPATH_W) '$(srcdir)/ceph_test.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_plugin_ceph-ceph_test.Tpo $(DEPDIR)/test_plugin_ceph-ceph_test.Po
#	$(AM_V_CC)source='ceph_test.c' object='test_plugin_ceph-ceph_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_plugin_ceph_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_plugin_ceph-ceph_test.obj `if test -f 'ceph_test.c'; then $(CYGPATH_W) 'ceph_test.c'; else $(CYGPATH_W) '$(srcdir)/ceph_test.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

grpc_la-grpc.lo: grpc.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grpc_la-grpc.lo -MD -MP -MF $(DEPDIR)/grpc_la-grpc.Tpo -c -o grpc_la-grpc.lo `test -f 'grpc.cc' || echo '$(srcdir)/'`grpc.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/grpc_la-grpc.Tpo $(DEPDIR)/grpc_la-grpc.Plo
#	$(AM_V_CXX)source='grpc.cc' object='grpc_la-grpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grpc_la-grpc.lo `test -f 'grpc.cc' || echo '$(srcdir)/'`grpc.cc

grpc_la-collectd.grpc.pb.lo: collectd.grpc.pb.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grpc_la-collectd.grpc.pb.lo -MD -MP -MF $(DEPDIR)/grpc_la-collectd.grpc.pb.Tpo -c -o grpc_la-collectd.grpc.pb.lo `test -f 'collectd.grpc.pb.cc' || echo '$(srcdir)/'`collectd.grpc.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/grpc_la-collectd.grpc.pb.Tpo $(DEPDIR)/grpc_la-collectd.grpc.pb.Plo
#	$(AM_V_CXX)source='collectd.grpc.pb.cc' object='grpc_la-collectd.grpc.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grpc_la-collectd.grpc.pb.lo `test -f 'collectd.grpc.pb.cc' || echo '$(srcdir)/'`collectd.grpc.pb.cc

grpc_la-collectd.pb.lo: collectd.pb.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grpc_la-collectd.pb.lo -MD -MP -MF $(DEPDIR)/grpc_la-collectd.pb.Tpo -c -o grpc_la-collectd.pb.lo `test -f 'collectd.pb.cc' || echo '$(srcdir)/'`collectd.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/grpc_la-collectd.pb.Tpo $(DEPDIR)/grpc_la-collectd.pb.Plo
#	$(AM_V_CXX)source='collectd.pb.cc' object='grpc_la-collectd.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grpc_la-collectd.pb.lo `test -f 'collectd.pb.cc' || echo '$(srcdir)/'`collectd.pb.cc

grpc_la-types.pb.lo: types.pb.cc
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT grpc_la-types.pb.lo -MD -MP -MF $(DEPDIR)/grpc_la-types.pb.Tpo -c -o grpc_la-types.pb.lo `test -f 'types.pb.cc' || echo '$(srcdir)/'`types.pb.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/grpc_la-types.pb.Tpo $(DEPDIR)/grpc_la-types.pb.Plo
#	$(AM_V_CXX)source='types.pb.cc' object='grpc_la-types.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(grpc_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o grpc_la-types.pb.lo `test -f 'types.pb.cc' || echo '$(srcdir)/'`types.pb.cc

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-man1: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-man5: $(dist_man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(dist_man_MANS)'; \
	test -n "$(man5dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man5dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man5dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.5[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man5dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man5dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man5dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man5dir)" || exit $$?; }; \
	done; }

uninstall-man5:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man5dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(dist_man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.5[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man5dir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_format_graphite.log: test_format_graphite$(EXEEXT)
	@p='test_format_graphite$(EXEEXT)'; \
	b='test_format_graphite'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_format_json.log: test_format_json$(EXEEXT)
	@p='test_format_json$(EXEEXT)'; \
	b='test_format_json'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_utils_latency.log: test_utils_latency$(EXEEXT)
	@p='test_utils_latency$(EXEEXT)'; \
	b='test_utils_latency'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_utils_cmds.log: test_utils_cmds$(EXEEXT)
	@p='test_utils_cmds$(EXEEXT)'; \
	b='test_utils_cmds'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_utils_vl_lookup.log: test_utils_vl_lookup$(EXEEXT)
	@p='test_utils_vl_lookup$(EXEEXT)'; \
	b='test_utils_vl_lookup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_utils_mount.log: test_utils_mount$(EXEEXT)
	@p='test_utils_mount$(EXEEXT)'; \
	b='test_utils_mount'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_plugin_ceph.log: test_plugin_ceph$(EXEEXT)
	@p='test_plugin_ceph$(EXEEXT)'; \
	b='test_plugin_ceph'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) config.h
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(pkglibdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-pkglibLTLIBRARIES \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-man

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-pkglibLTLIBRARIES \
	install-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man: install-man1 install-man5

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-man \
	uninstall-pkglibLTLIBRARIES uninstall-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) uninstall-hook
uninstall-man: uninstall-man1 uninstall-man5

.MAKE: $(am__recursive_targets) all check check-am install install-am \
	install-exec-am install-strip uninstall-am

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-pkglibLTLIBRARIES \
	clean-sbinPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook install-html \
	install-html-am install-info install-info-am install-man \
	install-man1 install-man5 install-pdf install-pdf-am \
	install-pkglibLTLIBRARIES install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-hook uninstall-man \
	uninstall-man1 uninstall-man5 uninstall-pkglibLTLIBRARIES \
	uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


##collectd.grpc.pb.cc: $(top_srcdir)/proto/collectd.proto $(top_srcdir)/proto/types.proto
##	$(V_PROTOC) -I$(top_srcdir)/proto \
##		--grpc_out=$(builddir) --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN) $<

##collectd.pb.cc: $(top_srcdir)/proto/collectd.proto $(top_srcdir)/proto/types.proto
##	$(V_PROTOC) -I$(top_srcdir)/proto --cpp_out=$(builddir) $<

##types.pb.cc: $(top_srcdir)/proto/types.proto
##	$(V_PROTOC) -I$(top_srcdir)/proto --cpp_out=$(builddir) $<

.pod.1:
	$(AM_V_POD2MAN_C)pod2man --release=$(VERSION) --center=$(PACKAGE) $< \
		>.pod2man.tmp.$$$$ 2>/dev/null && mv -f .pod2man.tmp.$$$$ $@ || true
	@if grep '\<POD ERRORS\>' $@ >/dev/null 2>&1; \
	then \
		echo "$@ has some POD errors!"; false; \
	fi

.pod.5:
	$(AM_V_POD2MAN_C)pod2man --section=5 --release=$(VERSION) --center=$(PACKAGE) $< \
		>.pod2man.tmp.$$$$ 2>/dev/null && mv -f .pod2man.tmp.$$$$ $@ || true
	@if grep '\<POD ERRORS\>' $@ >/dev/null 2>&1; \
	then \
		echo "$@ has some POD errors!"; false; \
	fi

#pinba.pb-c.c pinba.pb-c.h: pinba.proto
#	$(AM_V_PROTOC_C)$(PROTOC_C) -I$(srcdir) --c_out . $(srcdir)/pinba.proto

#prometheus.pb-c.c prometheus.pb-c.h: $(top_srcdir)/proto/prometheus.proto
#	$(AM_V_PROTOC_C)$(PROTOC_C) -I$(top_srcdir)/proto --c_out=$(builddir) $(top_srcdir)/proto/prometheus.proto

install-exec-hook:
	$(mkinstalldirs) $(DESTDIR)$(sysconfdir)
	if test -e $(DESTDIR)$(sysconfdir)/collectd.conf; \
	then \
		$(INSTALL) -m 0640 collectd.conf $(DESTDIR)$(sysconfdir)/collectd.conf.pkg-orig; \
	else \
		$(INSTALL) -m 0640 collectd.conf $(DESTDIR)$(sysconfdir)/collectd.conf; \
	fi; \
	$(mkinstalldirs) $(DESTDIR)$(pkgdatadir)
	$(INSTALL) -m 0644 $(srcdir)/types.db $(DESTDIR)$(pkgdatadir)/types.db;
	$(INSTALL) -m 0644 $(srcdir)/postgresql_default.conf \
		$(DESTDIR)$(pkgdatadir)/postgresql_default.conf;

uninstall-hook:
	rm -f $(DESTDIR)$(pkgdatadir)/types.db;
	rm -f $(DESTDIR)$(sysconfdir)/collectd.conf
	rm -f $(DESTDIR)$(pkgdatadir)/postgresql_default.conf;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
